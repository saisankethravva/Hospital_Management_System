{
  "version": "2",
  "toolVersion": "1.67.0",
  "snippets": {
    "7e43975d2fe435259a55e3757c628c7e7d2c2e2f33581a3b125779e1f716c77e": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_autoscaling import AutoScalingGroup\n# asg: AutoScalingGroup\n\n# vpc: ec2.Vpc\n\n\n# Create the load balancer in a VPC. 'internetFacing' is 'false'\n# by default, which creates an internal load balancer.\nlb = elbv2.ApplicationLoadBalancer(self, \"LB\",\n    vpc=vpc,\n    internet_facing=True\n)\n\n# Add a listener and open up the load balancer's security group\n# to the world.\nlistener = lb.add_listener(\"Listener\",\n    port=80,\n\n    # 'open: true' is the default, you can leave it out if you want. Set it\n    # to 'false' and use `listener.connections` if you want to be selective\n    # about who can access the load balancer.\n    open=True\n)\n\n# Create an AutoScaling group and add it as a load balancing\n# target to the listener.\nlistener.add_targets(\"ApplicationFleet\",\n    port=8080,\n    targets=[asg]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.AutoScaling;\nAutoScalingGroup asg;\n\nVpc vpc;\n\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nApplicationLoadBalancer lb = new ApplicationLoadBalancer(this, \"LB\", new ApplicationLoadBalancerProps {\n    Vpc = vpc,\n    InternetFacing = true\n});\n\n// Add a listener and open up the load balancer's security group\n// to the world.\nApplicationListener listener = lb.AddListener(\"Listener\", new BaseApplicationListenerProps {\n    Port = 80,\n\n    // 'open: true' is the default, you can leave it out if you want. Set it\n    // to 'false' and use `listener.connections` if you want to be selective\n    // about who can access the load balancer.\n    Open = true\n});\n\n// Create an AutoScaling group and add it as a load balancing\n// target to the listener.\nlistener.AddTargets(\"ApplicationFleet\", new AddApplicationTargetsProps {\n    Port = 8080,\n    Targets = new [] { asg }\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.autoscaling.AutoScalingGroup;\nAutoScalingGroup asg;\n\nVpc vpc;\n\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nApplicationLoadBalancer lb = ApplicationLoadBalancer.Builder.create(this, \"LB\")\n        .vpc(vpc)\n        .internetFacing(true)\n        .build();\n\n// Add a listener and open up the load balancer's security group\n// to the world.\nApplicationListener listener = lb.addListener(\"Listener\", BaseApplicationListenerProps.builder()\n        .port(80)\n\n        // 'open: true' is the default, you can leave it out if you want. Set it\n        // to 'false' and use `listener.connections` if you want to be selective\n        // about who can access the load balancer.\n        .open(true)\n        .build());\n\n// Create an AutoScaling group and add it as a load balancing\n// target to the listener.\nlistener.addTargets(\"ApplicationFleet\", AddApplicationTargetsProps.builder()\n        .port(8080)\n        .targets(List.of(asg))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "import \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nvar asg autoScalingGroup\n\nvar vpc vpc\n\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nlb := elbv2.NewApplicationLoadBalancer(this, jsii.String(\"LB\"), &applicationLoadBalancerProps{\n\tvpc: vpc,\n\tinternetFacing: jsii.Boolean(true),\n})\n\n// Add a listener and open up the load balancer's security group\n// to the world.\nlistener := lb.addListener(jsii.String(\"Listener\"), &baseApplicationListenerProps{\n\tport: jsii.Number(80),\n\n\t// 'open: true' is the default, you can leave it out if you want. Set it\n\t// to 'false' and use `listener.connections` if you want to be selective\n\t// about who can access the load balancer.\n\topen: jsii.Boolean(true),\n})\n\n// Create an AutoScaling group and add it as a load balancing\n// target to the listener.\nlistener.addTargets(jsii.String(\"ApplicationFleet\"), &addApplicationTargetsProps{\n\tport: jsii.Number(8080),\n\ttargets: []iApplicationLoadBalancerTarget{\n\t\tasg,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "import { AutoScalingGroup } from '@aws-cdk/aws-autoscaling';\ndeclare const asg: AutoScalingGroup;\n\ndeclare const vpc: ec2.Vpc;\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true\n});\n\n// Add a listener and open up the load balancer's security group\n// to the world.\nconst listener = lb.addListener('Listener', {\n  port: 80,\n\n  // 'open: true' is the default, you can leave it out if you want. Set it\n  // to 'false' and use `listener.connections` if you want to be selective\n  // about who can access the load balancer.\n  open: true,\n});\n\n// Create an AutoScaling group and add it as a load balancing\n// target to the listener.\nlistener.addTargets('ApplicationFleet', {\n  port: 8080,\n  targets: [asg]\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 28
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { AutoScalingGroup } from '@aws-cdk/aws-autoscaling';\ndeclare const asg: AutoScalingGroup;\n\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true\n});\n\n// Add a listener and open up the load balancer's security group\n// to the world.\nconst listener = lb.addListener('Listener', {\n  port: 80,\n\n  // 'open: true' is the default, you can leave it out if you want. Set it\n  // to 'false' and use `listener.connections` if you want to be selective\n  // about who can access the load balancer.\n  open: true,\n});\n\n// Create an AutoScaling group and add it as a load balancing\n// target to the listener.\nlistener.addTargets('ApplicationFleet', {\n  port: 8080,\n  targets: [asg]\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 4,
        "75": 21,
        "104": 1,
        "106": 2,
        "130": 2,
        "153": 1,
        "169": 2,
        "192": 1,
        "193": 3,
        "194": 3,
        "196": 2,
        "197": 1,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 5,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "c569f1f5c0c5781af34437de894440dc417885b18214f453e0229afc0d200930"
    },
    "bd0ff211528e7be1e8299635806e20a025ea0f70f2207dff5e8d64c928a516fb": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\n\nsecurity_group1 = ec2.SecurityGroup(self, \"SecurityGroup1\", vpc=vpc)\nlb = elbv2.ApplicationLoadBalancer(self, \"LB\",\n    vpc=vpc,\n    internet_facing=True,\n    security_group=security_group1\n)\n\nsecurity_group2 = ec2.SecurityGroup(self, \"SecurityGroup2\", vpc=vpc)\nlb.add_security_group(security_group2)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\n\nSecurityGroup securityGroup1 = new SecurityGroup(this, \"SecurityGroup1\", new SecurityGroupProps { Vpc = vpc });\nApplicationLoadBalancer lb = new ApplicationLoadBalancer(this, \"LB\", new ApplicationLoadBalancerProps {\n    Vpc = vpc,\n    InternetFacing = true,\n    SecurityGroup = securityGroup1\n});\n\nSecurityGroup securityGroup2 = new SecurityGroup(this, \"SecurityGroup2\", new SecurityGroupProps { Vpc = vpc });\nlb.AddSecurityGroup(securityGroup2);",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\n\nSecurityGroup securityGroup1 = SecurityGroup.Builder.create(this, \"SecurityGroup1\").vpc(vpc).build();\nApplicationLoadBalancer lb = ApplicationLoadBalancer.Builder.create(this, \"LB\")\n        .vpc(vpc)\n        .internetFacing(true)\n        .securityGroup(securityGroup1)\n        .build();\n\nSecurityGroup securityGroup2 = SecurityGroup.Builder.create(this, \"SecurityGroup2\").vpc(vpc).build();\nlb.addSecurityGroup(securityGroup2);",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\n\nsecurityGroup1 := ec2.NewSecurityGroup(this, jsii.String(\"SecurityGroup1\"), &securityGroupProps{\n\tvpc: vpc,\n})\nlb := elbv2.NewApplicationLoadBalancer(this, jsii.String(\"LB\"), &applicationLoadBalancerProps{\n\tvpc: vpc,\n\tinternetFacing: jsii.Boolean(true),\n\tsecurityGroup: securityGroup1,\n})\n\nsecurityGroup2 := ec2.NewSecurityGroup(this, jsii.String(\"SecurityGroup2\"), &securityGroupProps{\n\tvpc: vpc,\n})\nlb.addSecurityGroup(securityGroup2)",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\n\nconst securityGroup1 = new ec2.SecurityGroup(this, 'SecurityGroup1', { vpc });\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true,\n  securityGroup: securityGroup1, // Optional - will be automatically created otherwise\n});\n\nconst securityGroup2 = new ec2.SecurityGroup(this, 'SecurityGroup2', { vpc });\nlb.addSecurityGroup(securityGroup2);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 66
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.ISecurityGroup",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.SecurityGroup",
        "@aws-cdk/aws-ec2.SecurityGroupProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addSecurityGroup",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst securityGroup1 = new ec2.SecurityGroup(this, 'SecurityGroup1', { vpc });\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true,\n  securityGroup: securityGroup1, // Optional - will be automatically created otherwise\n});\n\nconst securityGroup2 = new ec2.SecurityGroup(this, 'SecurityGroup2', { vpc });\nlb.addSecurityGroup(securityGroup2);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 21,
        "104": 3,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 4,
        "196": 1,
        "197": 3,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "281": 2,
        "282": 3,
        "290": 1
      },
      "fqnsFingerprint": "2867ab50f8b0ace2f98b4056c8180ebb4ead9a546e47e3a6696fe5825a10b162"
    },
    "9c40d5aef7468167ed57f00deb4801b323ded0a4bddcedcee071de092260632d": {
      "translations": {
        "python": {
          "source": "# listener: elbv2.ApplicationListener\n# asg: autoscaling.AutoScalingGroup\n\n\nlistener.add_targets(\"Example.Com Fleet\",\n    priority=10,\n    conditions=[\n        elbv2.ListenerCondition.host_headers([\"example.com\"]),\n        elbv2.ListenerCondition.path_patterns([\"/ok\", \"/path\"])\n    ],\n    port=8080,\n    targets=[asg]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ApplicationListener listener;\nAutoScalingGroup asg;\n\n\nlistener.AddTargets(\"Example.Com Fleet\", new AddApplicationTargetsProps {\n    Priority = 10,\n    Conditions = new [] { ListenerCondition.HostHeaders(new [] { \"example.com\" }), ListenerCondition.PathPatterns(new [] { \"/ok\", \"/path\" }) },\n    Port = 8080,\n    Targets = new [] { asg }\n});",
          "version": "1"
        },
        "java": {
          "source": "ApplicationListener listener;\nAutoScalingGroup asg;\n\n\nlistener.addTargets(\"Example.Com Fleet\", AddApplicationTargetsProps.builder()\n        .priority(10)\n        .conditions(List.of(ListenerCondition.hostHeaders(List.of(\"example.com\")), ListenerCondition.pathPatterns(List.of(\"/ok\", \"/path\"))))\n        .port(8080)\n        .targets(List.of(asg))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var listener applicationListener\nvar asg autoScalingGroup\n\n\nlistener.addTargets(jsii.String(\"Example.Com Fleet\"), &addApplicationTargetsProps{\n\tpriority: jsii.Number(10),\n\tconditions: []listenerCondition{\n\t\telbv2.*listenerCondition.hostHeaders([]*string{\n\t\t\tjsii.String(\"example.com\"),\n\t\t}),\n\t\telbv2.*listenerCondition.pathPatterns([]*string{\n\t\t\tjsii.String(\"/ok\"),\n\t\t\tjsii.String(\"/path\"),\n\t\t}),\n\t},\n\tport: jsii.Number(8080),\n\ttargets: []iApplicationLoadBalancerTarget{\n\t\tasg,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const listener: elbv2.ApplicationListener;\ndeclare const asg: autoscaling.AutoScalingGroup;\n\nlistener.addTargets('Example.Com Fleet', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.hostHeaders(['example.com']),\n    elbv2.ListenerCondition.pathPatterns(['/ok', '/path']),\n  ],\n  port: 8080,\n  targets: [asg]\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 87
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition#hostHeaders",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition#pathPatterns"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const listener: elbv2.ApplicationListener;\ndeclare const asg: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nlistener.addTargets('Example.Com Fleet', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.hostHeaders(['example.com']),\n    elbv2.ListenerCondition.pathPatterns(['/ok', '/path']),\n  ],\n  port: 8080,\n  targets: [asg]\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 4,
        "75": 19,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 4,
        "193": 1,
        "194": 5,
        "196": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "c1999b2ae21fe18dc7919fcc5a0c0c9a579bf5e2701ea32ee9192318fc89b6fe"
    },
    "68a3c42ba64da314fdecf1e8f0d3e8967dfa8b8a528917efe95de05924824209": {
      "translations": {
        "python": {
          "source": "# listener: elbv2.ApplicationListener\n\n\nlistener.add_action(\"Fixed\",\n    priority=10,\n    conditions=[\n        elbv2.ListenerCondition.path_patterns([\"/ok\"])\n    ],\n    action=elbv2.ListenerAction.fixed_response(200,\n        content_type=elbv2.ContentType.TEXT_PLAIN,\n        message_body=\"OK\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ApplicationListener listener;\n\n\nlistener.AddAction(\"Fixed\", new AddApplicationActionProps {\n    Priority = 10,\n    Conditions = new [] { ListenerCondition.PathPatterns(new [] { \"/ok\" }) },\n    Action = ListenerAction.FixedResponse(200, new FixedResponseOptions {\n        ContentType = ContentType.TEXT_PLAIN,\n        MessageBody = \"OK\"\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "ApplicationListener listener;\n\n\nlistener.addAction(\"Fixed\", AddApplicationActionProps.builder()\n        .priority(10)\n        .conditions(List.of(ListenerCondition.pathPatterns(List.of(\"/ok\"))))\n        .action(ListenerAction.fixedResponse(200, FixedResponseOptions.builder()\n                .contentType(ContentType.TEXT_PLAIN)\n                .messageBody(\"OK\")\n                .build()))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var listener applicationListener\n\n\nlistener.addAction(jsii.String(\"Fixed\"), &addApplicationActionProps{\n\tpriority: jsii.Number(10),\n\tconditions: []listenerCondition{\n\t\telbv2.*listenerCondition.pathPatterns([]*string{\n\t\t\tjsii.String(\"/ok\"),\n\t\t}),\n\t},\n\taction: elbv2.listenerAction.fixedResponse(jsii.Number(200), &fixedResponseOptions{\n\t\tcontentType: elbv2.contentType_TEXT_PLAIN,\n\t\tmessageBody: jsii.String(\"OK\"),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const listener: elbv2.ApplicationListener;\n\nlistener.addAction('Fixed', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.pathPatterns(['/ok']),\n  ],\n  action: elbv2.ListenerAction.fixedResponse(200, {\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'OK',\n  })\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 152
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationActionProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addAction",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType#TEXT_PLAIN",
        "@aws-cdk/aws-elasticloadbalancingv2.FixedResponseOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction#fixedResponse",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition#pathPatterns"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const listener: elbv2.ApplicationListener;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nlistener.addAction('Fixed', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.pathPatterns(['/ok']),\n  ],\n  action: elbv2.ListenerAction.fixedResponse(200, {\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'OK',\n  })\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 19,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 2,
        "194": 7,
        "196": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "e6ff815ebb6182c25b23317faa5dfc0c7a98c7bd69adec5a852b00aa89cd2040"
    },
    "6f3fc0bbb8ecb26cab5408692ad6961876a8cd2257bde96f8ab6ec22b0a61436": {
      "translations": {
        "python": {
          "source": "# listener: elbv2.ApplicationListener\n# my_target_group: elbv2.ApplicationTargetGroup\n\n\nlistener.add_action(\"DefaultAction\",\n    action=elbv2.ListenerAction.authenticate_oidc(\n        authorization_endpoint=\"https://example.com/openid\",\n        # Other OIDC properties here\n        client_id=\"...\",\n        client_secret=SecretValue.secrets_manager(\"...\"),\n        issuer=\"...\",\n        token_endpoint=\"...\",\n        user_info_endpoint=\"...\",\n\n        # Next\n        next=elbv2.ListenerAction.forward([my_target_group])\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ApplicationListener listener;\nApplicationTargetGroup myTargetGroup;\n\n\nlistener.AddAction(\"DefaultAction\", new AddApplicationActionProps {\n    Action = ListenerAction.AuthenticateOidc(new AuthenticateOidcOptions {\n        AuthorizationEndpoint = \"https://example.com/openid\",\n        // Other OIDC properties here\n        ClientId = \"...\",\n        ClientSecret = SecretValue.SecretsManager(\"...\"),\n        Issuer = \"...\",\n        TokenEndpoint = \"...\",\n        UserInfoEndpoint = \"...\",\n\n        // Next\n        Next = ListenerAction.Forward(new [] { myTargetGroup })\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "ApplicationListener listener;\nApplicationTargetGroup myTargetGroup;\n\n\nlistener.addAction(\"DefaultAction\", AddApplicationActionProps.builder()\n        .action(ListenerAction.authenticateOidc(AuthenticateOidcOptions.builder()\n                .authorizationEndpoint(\"https://example.com/openid\")\n                // Other OIDC properties here\n                .clientId(\"...\")\n                .clientSecret(SecretValue.secretsManager(\"...\"))\n                .issuer(\"...\")\n                .tokenEndpoint(\"...\")\n                .userInfoEndpoint(\"...\")\n\n                // Next\n                .next(ListenerAction.forward(List.of(myTargetGroup)))\n                .build()))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var listener applicationListener\nvar myTargetGroup applicationTargetGroup\n\n\nlistener.addAction(jsii.String(\"DefaultAction\"), &addApplicationActionProps{\n\taction: elbv2.listenerAction.authenticateOidc(&authenticateOidcOptions{\n\t\tauthorizationEndpoint: jsii.String(\"https://example.com/openid\"),\n\t\t// Other OIDC properties here\n\t\tclientId: jsii.String(\"...\"),\n\t\tclientSecret: *awscdkcore.SecretValue.secretsManager(jsii.String(\"...\")),\n\t\tissuer: jsii.String(\"...\"),\n\t\ttokenEndpoint: jsii.String(\"...\"),\n\t\tuserInfoEndpoint: jsii.String(\"...\"),\n\n\t\t// Next\n\t\tnext: elbv2.*listenerAction.forward([]iApplicationTargetGroup{\n\t\t\tmyTargetGroup,\n\t\t}),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const listener: elbv2.ApplicationListener;\ndeclare const myTargetGroup: elbv2.ApplicationTargetGroup;\n\nlistener.addAction('DefaultAction', {\n  action: elbv2.ListenerAction.authenticateOidc({\n    authorizationEndpoint: 'https://example.com/openid',\n    // Other OIDC properties here\n    clientId: '...',\n    clientSecret: SecretValue.secretsManager('...'),\n    issuer: '...',\n    tokenEndpoint: '...',\n    userInfoEndpoint: '...',\n\n    // Next\n    next: elbv2.ListenerAction.forward([myTargetGroup]),\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 169
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationActionProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addAction",
        "@aws-cdk/aws-elasticloadbalancingv2.AuthenticateOidcOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction#authenticateOidc",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction#forward",
        "@aws-cdk/core.SecretValue",
        "@aws-cdk/core.SecretValue#secretsManager"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const listener: elbv2.ApplicationListener;\ndeclare const myTargetGroup: elbv2.ApplicationTargetGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nlistener.addAction('DefaultAction', {\n  action: elbv2.ListenerAction.authenticateOidc({\n    authorizationEndpoint: 'https://example.com/openid',\n    // Other OIDC properties here\n    clientId: '...',\n    clientSecret: SecretValue.secretsManager('...'),\n    issuer: '...',\n    tokenEndpoint: '...',\n    userInfoEndpoint: '...',\n\n    // Next\n    next: elbv2.ListenerAction.forward([myTargetGroup]),\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 7,
        "75": 25,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 2,
        "194": 6,
        "196": 4,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "fe45b01623fd8ed972322209d809236d1adddb0206a36ce65f4cb23b312dc21d"
    },
    "e9316fc5c463b8726b9993c460661ae3f2b13a0ac48b51edd9219f1e465c72f0": {
      "translations": {
        "python": {
          "source": "# lb: elbv2.ApplicationLoadBalancer\n\n\nlb.add_redirect(\n    source_protocol=elbv2.ApplicationProtocol.HTTPS,\n    source_port=8443,\n    target_protocol=elbv2.ApplicationProtocol.HTTP,\n    target_port=8080\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ApplicationLoadBalancer lb;\n\n\nlb.AddRedirect(new ApplicationLoadBalancerRedirectConfig {\n    SourceProtocol = ApplicationProtocol.HTTPS,\n    SourcePort = 8443,\n    TargetProtocol = ApplicationProtocol.HTTP,\n    TargetPort = 8080\n});",
          "version": "1"
        },
        "java": {
          "source": "ApplicationLoadBalancer lb;\n\n\nlb.addRedirect(ApplicationLoadBalancerRedirectConfig.builder()\n        .sourceProtocol(ApplicationProtocol.HTTPS)\n        .sourcePort(8443)\n        .targetProtocol(ApplicationProtocol.HTTP)\n        .targetPort(8080)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var lb applicationLoadBalancer\n\n\nlb.addRedirect(&applicationLoadBalancerRedirectConfig{\n\tsourceProtocol: elbv2.applicationProtocol_HTTPS,\n\tsourcePort: jsii.Number(8443),\n\ttargetProtocol: elbv2.*applicationProtocol_HTTP,\n\ttargetPort: jsii.Number(8080),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const lb: elbv2.ApplicationLoadBalancer;\n\nlb.addRedirect({\n  sourceProtocol: elbv2.ApplicationProtocol.HTTPS,\n  sourcePort: 8443,\n  targetProtocol: elbv2.ApplicationProtocol.HTTP,\n  targetPort: 8080,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 191
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addRedirect",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerRedirectConfig",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol#HTTP",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol#HTTPS"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const lb: elbv2.ApplicationLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nlb.addRedirect({\n  sourceProtocol: elbv2.ApplicationProtocol.HTTPS,\n  sourcePort: 8443,\n  targetProtocol: elbv2.ApplicationProtocol.HTTP,\n  targetPort: 8080,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "75": 15,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 5,
        "196": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "23538472f40cbdd5f834d1ee2fcc3e53d3c9e074969264a2b4621b7447742403"
    },
    "c2c01d8285da31ab7d22ab3b868f2e5988e37e89f3a3fae09306d848db946ea3": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# asg: autoscaling.AutoScalingGroup\n\n\n# Create the load balancer in a VPC. 'internetFacing' is 'false'\n# by default, which creates an internal load balancer.\nlb = elbv2.NetworkLoadBalancer(self, \"LB\",\n    vpc=vpc,\n    internet_facing=True\n)\n\n# Add a listener on a particular port.\nlistener = lb.add_listener(\"Listener\",\n    port=443\n)\n\n# Add targets on a particular port.\nlistener.add_targets(\"AppFleet\",\n    port=443,\n    targets=[asg]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nAutoScalingGroup asg;\n\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nNetworkLoadBalancer lb = new NetworkLoadBalancer(this, \"LB\", new NetworkLoadBalancerProps {\n    Vpc = vpc,\n    InternetFacing = true\n});\n\n// Add a listener on a particular port.\nNetworkListener listener = lb.AddListener(\"Listener\", new BaseNetworkListenerProps {\n    Port = 443\n});\n\n// Add targets on a particular port.\nlistener.AddTargets(\"AppFleet\", new AddNetworkTargetsProps {\n    Port = 443,\n    Targets = new [] { asg }\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nAutoScalingGroup asg;\n\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nNetworkLoadBalancer lb = NetworkLoadBalancer.Builder.create(this, \"LB\")\n        .vpc(vpc)\n        .internetFacing(true)\n        .build();\n\n// Add a listener on a particular port.\nNetworkListener listener = lb.addListener(\"Listener\", BaseNetworkListenerProps.builder()\n        .port(443)\n        .build());\n\n// Add targets on a particular port.\nlistener.addTargets(\"AppFleet\", AddNetworkTargetsProps.builder()\n        .port(443)\n        .targets(List.of(asg))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar asg autoScalingGroup\n\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nlb := elbv2.NewNetworkLoadBalancer(this, jsii.String(\"LB\"), &networkLoadBalancerProps{\n\tvpc: vpc,\n\tinternetFacing: jsii.Boolean(true),\n})\n\n// Add a listener on a particular port.\nlistener := lb.addListener(jsii.String(\"Listener\"), &baseNetworkListenerProps{\n\tport: jsii.Number(443),\n})\n\n// Add targets on a particular port.\nlistener.addTargets(jsii.String(\"AppFleet\"), &addNetworkTargetsProps{\n\tport: jsii.Number(443),\n\ttargets: []iNetworkLoadBalancerTarget{\n\t\tasg,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const asg: autoscaling.AutoScalingGroup;\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nconst lb = new elbv2.NetworkLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true\n});\n\n// Add a listener on a particular port.\nconst listener = lb.addListener('Listener', {\n  port: 443,\n});\n\n// Add targets on a particular port.\nlistener.addTargets('AppFleet', {\n  port: 443,\n  targets: [asg]\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 212
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const asg: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nconst lb = new elbv2.NetworkLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true\n});\n\n// Add a listener on a particular port.\nconst listener = lb.addListener('Listener', {\n  port: 443,\n});\n\n// Add targets on a particular port.\nlistener.addTargets('AppFleet', {\n  port: 443,\n  targets: [asg]\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 20,
        "104": 1,
        "106": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 3,
        "194": 3,
        "196": 2,
        "197": 1,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "281": 4,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "91083f419027e24dff00239bc01f4c43ac3eb32523f1d6f1ba97fcfa2d28db2a"
    },
    "36f4b1dca7225f8eb519fb0c7a0a670794c18b4e9a1ff30b76ff7d1a25083867": {
      "translations": {
        "python": {
          "source": "# listener: elbv2.NetworkListener\n# asg1: autoscaling.AutoScalingGroup\n# asg2: autoscaling.AutoScalingGroup\n\n\ngroup = listener.add_targets(\"AppFleet\",\n    port=443,\n    targets=[asg1]\n)\n\ngroup.add_target(asg2)",
          "version": "2"
        },
        "csharp": {
          "source": "NetworkListener listener;\nAutoScalingGroup asg1;\nAutoScalingGroup asg2;\n\n\nNetworkTargetGroup group = listener.AddTargets(\"AppFleet\", new AddNetworkTargetsProps {\n    Port = 443,\n    Targets = new [] { asg1 }\n});\n\ngroup.AddTarget(asg2);",
          "version": "1"
        },
        "java": {
          "source": "NetworkListener listener;\nAutoScalingGroup asg1;\nAutoScalingGroup asg2;\n\n\nNetworkTargetGroup group = listener.addTargets(\"AppFleet\", AddNetworkTargetsProps.builder()\n        .port(443)\n        .targets(List.of(asg1))\n        .build());\n\ngroup.addTarget(asg2);",
          "version": "1"
        },
        "go": {
          "source": "var listener networkListener\nvar asg1 autoScalingGroup\nvar asg2 autoScalingGroup\n\n\ngroup := listener.addTargets(jsii.String(\"AppFleet\"), &addNetworkTargetsProps{\n\tport: jsii.Number(443),\n\ttargets: []iNetworkLoadBalancerTarget{\n\t\tasg1,\n\t},\n})\n\ngroup.addTarget(asg2)",
          "version": "1"
        },
        "$": {
          "source": "declare const listener: elbv2.NetworkListener;\ndeclare const asg1: autoscaling.AutoScalingGroup;\ndeclare const asg2: autoscaling.AutoScalingGroup;\n\nconst group = listener.addTargets('AppFleet', {\n  port: 443,\n  targets: [asg1],\n});\n\ngroup.addTarget(asg2);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 258
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup#addTarget"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const listener: elbv2.NetworkListener;\ndeclare const asg1: autoscaling.AutoScalingGroup;\ndeclare const asg2: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst group = listener.addTargets('AppFleet', {\n  port: 443,\n  targets: [asg1],\n});\n\ngroup.addTarget(asg2);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 18,
        "130": 3,
        "153": 3,
        "169": 3,
        "192": 1,
        "193": 1,
        "194": 2,
        "196": 2,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "ac8adb170fe407ef0322a5745ebe8943151405c2c57070306cb4874c9e2d5476"
    },
    "0b669f8221aa2ba1398eee89d80ea9fc3a2eb89f67cfee7eda86f6d46a6aa63b": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\n\n# Target group with duration-based stickiness with load-balancer generated cookie\ntg1 = elbv2.ApplicationTargetGroup(self, \"TG1\",\n    target_type=elbv2.TargetType.INSTANCE,\n    port=80,\n    stickiness_cookie_duration=Duration.minutes(5),\n    vpc=vpc\n)\n\n# Target group with application-based stickiness\ntg2 = elbv2.ApplicationTargetGroup(self, \"TG2\",\n    target_type=elbv2.TargetType.INSTANCE,\n    port=80,\n    stickiness_cookie_duration=Duration.minutes(5),\n    stickiness_cookie_name=\"MyDeliciousCookie\",\n    vpc=vpc\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\n\n// Target group with duration-based stickiness with load-balancer generated cookie\nApplicationTargetGroup tg1 = new ApplicationTargetGroup(this, \"TG1\", new ApplicationTargetGroupProps {\n    TargetType = TargetType.INSTANCE,\n    Port = 80,\n    StickinessCookieDuration = Duration.Minutes(5),\n    Vpc = vpc\n});\n\n// Target group with application-based stickiness\nApplicationTargetGroup tg2 = new ApplicationTargetGroup(this, \"TG2\", new ApplicationTargetGroupProps {\n    TargetType = TargetType.INSTANCE,\n    Port = 80,\n    StickinessCookieDuration = Duration.Minutes(5),\n    StickinessCookieName = \"MyDeliciousCookie\",\n    Vpc = vpc\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\n\n// Target group with duration-based stickiness with load-balancer generated cookie\nApplicationTargetGroup tg1 = ApplicationTargetGroup.Builder.create(this, \"TG1\")\n        .targetType(TargetType.INSTANCE)\n        .port(80)\n        .stickinessCookieDuration(Duration.minutes(5))\n        .vpc(vpc)\n        .build();\n\n// Target group with application-based stickiness\nApplicationTargetGroup tg2 = ApplicationTargetGroup.Builder.create(this, \"TG2\")\n        .targetType(TargetType.INSTANCE)\n        .port(80)\n        .stickinessCookieDuration(Duration.minutes(5))\n        .stickinessCookieName(\"MyDeliciousCookie\")\n        .vpc(vpc)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\n\n// Target group with duration-based stickiness with load-balancer generated cookie\ntg1 := elbv2.NewApplicationTargetGroup(this, jsii.String(\"TG1\"), &applicationTargetGroupProps{\n\ttargetType: elbv2.targetType_INSTANCE,\n\tport: jsii.Number(80),\n\tstickinessCookieDuration: *awscdkcore.Duration.minutes(jsii.Number(5)),\n\tvpc: vpc,\n})\n\n// Target group with application-based stickiness\ntg2 := elbv2.NewApplicationTargetGroup(this, jsii.String(\"TG2\"), &applicationTargetGroupProps{\n\ttargetType: elbv2.*targetType_INSTANCE,\n\tport: jsii.Number(80),\n\tstickinessCookieDuration: *awscdkcore.Duration.minutes(jsii.Number(5)),\n\tstickinessCookieName: jsii.String(\"MyDeliciousCookie\"),\n\tvpc: vpc,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\n\n// Target group with duration-based stickiness with load-balancer generated cookie\nconst tg1 = new elbv2.ApplicationTargetGroup(this, 'TG1', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  vpc,\n});\n\n// Target group with application-based stickiness\nconst tg2 = new elbv2.ApplicationTargetGroup(this, 'TG2', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  stickinessCookieName: 'MyDeliciousCookie',\n  vpc,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 277
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroupProps",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType#INSTANCE",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// Target group with duration-based stickiness with load-balancer generated cookie\nconst tg1 = new elbv2.ApplicationTargetGroup(this, 'TG1', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  vpc,\n});\n\n// Target group with application-based stickiness\nconst tg2 = new elbv2.ApplicationTargetGroup(this, 'TG2', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  stickinessCookieName: 'MyDeliciousCookie',\n  vpc,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 3,
        "75": 28,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 8,
        "196": 2,
        "197": 2,
        "225": 3,
        "242": 3,
        "243": 3,
        "281": 7,
        "282": 2,
        "290": 1
      },
      "fqnsFingerprint": "5f24a8a35923027502ed292feff109cb3dabd4c9a90ad2183d0bdca6bf2b5cbf"
    },
    "7ae28d0f3fcd12c98019d074490bb8e54c98d8ede638aad63201f20db28d90a7": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\n\ntg = elbv2.ApplicationTargetGroup(self, \"TG\",\n    target_type=elbv2.TargetType.IP,\n    port=50051,\n    protocol=elbv2.ApplicationProtocol.HTTP,\n    protocol_version=elbv2.ApplicationProtocolVersion.GRPC,\n    health_check=elbv2.HealthCheck(\n        enabled=True,\n        healthy_grpc_codes=\"0-99\"\n    ),\n    vpc=vpc\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\n\nApplicationTargetGroup tg = new ApplicationTargetGroup(this, \"TG\", new ApplicationTargetGroupProps {\n    TargetType = TargetType.IP,\n    Port = 50051,\n    Protocol = ApplicationProtocol.HTTP,\n    ProtocolVersion = ApplicationProtocolVersion.GRPC,\n    HealthCheck = new HealthCheck {\n        Enabled = true,\n        HealthyGrpcCodes = \"0-99\"\n    },\n    Vpc = vpc\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\n\nApplicationTargetGroup tg = ApplicationTargetGroup.Builder.create(this, \"TG\")\n        .targetType(TargetType.IP)\n        .port(50051)\n        .protocol(ApplicationProtocol.HTTP)\n        .protocolVersion(ApplicationProtocolVersion.GRPC)\n        .healthCheck(HealthCheck.builder()\n                .enabled(true)\n                .healthyGrpcCodes(\"0-99\")\n                .build())\n        .vpc(vpc)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\n\ntg := elbv2.NewApplicationTargetGroup(this, jsii.String(\"TG\"), &applicationTargetGroupProps{\n\ttargetType: elbv2.targetType_IP,\n\tport: jsii.Number(50051),\n\tprotocol: elbv2.applicationProtocol_HTTP,\n\tprotocolVersion: elbv2.applicationProtocolVersion_GRPC,\n\thealthCheck: &healthCheck{\n\t\tenabled: jsii.Boolean(true),\n\t\thealthyGrpcCodes: jsii.String(\"0-99\"),\n\t},\n\tvpc: vpc,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\n\nconst tg = new elbv2.ApplicationTargetGroup(this, 'TG', {\n  targetType: elbv2.TargetType.IP,\n  port: 50051,\n  protocol: elbv2.ApplicationProtocol.HTTP,\n  protocolVersion: elbv2.ApplicationProtocolVersion.GRPC,\n  healthCheck: {\n    enabled: true,\n    healthyGrpcCodes: '0-99',\n  },\n  vpc,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 304
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol#HTTP",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocolVersion",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocolVersion#GRPC",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroupProps",
        "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType#IP",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst tg = new elbv2.ApplicationTargetGroup(this, 'TG', {\n  targetType: elbv2.TargetType.IP,\n  port: 50051,\n  protocol: elbv2.ApplicationProtocol.HTTP,\n  protocolVersion: elbv2.ApplicationProtocolVersion.GRPC,\n  healthCheck: {\n    enabled: true,\n    healthyGrpcCodes: '0-99',\n  },\n  vpc,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 23,
        "104": 1,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 7,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 7,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "1104efe41e85f5e2e16d4de9fd855d6777e3ca32c6b42806810edb3585eebee5"
    },
    "f4a9d4bcafebf26cd47447b9fb67d7944f70904586648b783a85834c74316f3c": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_lambda as lambda_\nimport aws_cdk.aws_elasticloadbalancingv2_targets as targets\n\n# lambda_function: lambda.Function\n# lb: elbv2.ApplicationLoadBalancer\n\n\nlistener = lb.add_listener(\"Listener\", port=80)\nlistener.add_targets(\"Targets\",\n    targets=[targets.LambdaTarget(lambda_function)],\n\n    # For Lambda Targets, you need to explicitly enable health checks if you\n    # want them.\n    health_check=elbv2.HealthCheck(\n        enabled=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Lambda;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2.Targets;\n\nFunction lambdaFunction;\nApplicationLoadBalancer lb;\n\n\nApplicationListener listener = lb.AddListener(\"Listener\", new BaseApplicationListenerProps { Port = 80 });\nlistener.AddTargets(\"Targets\", new AddApplicationTargetsProps {\n    Targets = new [] { new LambdaTarget(lambdaFunction) },\n\n    // For Lambda Targets, you need to explicitly enable health checks if you\n    // want them.\n    HealthCheck = new HealthCheck {\n        Enabled = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.lambda.*;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.targets.*;\n\nFunction lambdaFunction;\nApplicationLoadBalancer lb;\n\n\nApplicationListener listener = lb.addListener(\"Listener\", BaseApplicationListenerProps.builder().port(80).build());\nlistener.addTargets(\"Targets\", AddApplicationTargetsProps.builder()\n        .targets(List.of(new LambdaTarget(lambdaFunction)))\n\n        // For Lambda Targets, you need to explicitly enable health checks if you\n        // want them.\n        .healthCheck(HealthCheck.builder()\n                .enabled(true)\n                .build())\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "import lambda \"github.com/aws-samples/dummy/awscdkawslambda\"\nimport targets \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2targets\"\n\nvar lambdaFunction function\nvar lb applicationLoadBalancer\n\n\nlistener := lb.addListener(jsii.String(\"Listener\"), &baseApplicationListenerProps{\n\tport: jsii.Number(80),\n})\nlistener.addTargets(jsii.String(\"Targets\"), &addApplicationTargetsProps{\n\ttargets: []iApplicationLoadBalancerTarget{\n\t\ttargets.NewLambdaTarget(lambdaFunction),\n\t},\n\n\t// For Lambda Targets, you need to explicitly enable health checks if you\n\t// want them.\n\thealthCheck: &healthCheck{\n\t\tenabled: jsii.Boolean(true),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as lambda from '@aws-cdk/aws-lambda';\nimport * as targets from '@aws-cdk/aws-elasticloadbalancingv2-targets';\n\ndeclare const lambdaFunction: lambda.Function;\ndeclare const lb: elbv2.ApplicationLoadBalancer;\n\nconst listener = lb.addListener('Listener', { port: 80 });\nlistener.addTargets('Targets', {\n  targets: [new targets.LambdaTarget(lambdaFunction)],\n\n  // For Lambda Targets, you need to explicitly enable health checks if you\n  // want them.\n  healthCheck: {\n    enabled: true,\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 325
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2-targets.LambdaTarget",
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck",
        "@aws-cdk/aws-lambda.IFunction"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as targets from '@aws-cdk/aws-elasticloadbalancingv2-targets';\n\ndeclare const lambdaFunction: lambda.Function;\ndeclare const lb: elbv2.ApplicationLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst listener = lb.addListener('Listener', { port: 80 });\nlistener.addTargets('Targets', {\n  targets: [new targets.LambdaTarget(lambdaFunction)],\n\n  // For Lambda Targets, you need to explicitly enable health checks if you\n  // want them.\n  healthCheck: {\n    enabled: true,\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 4,
        "75": 20,
        "106": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 3,
        "194": 3,
        "196": 2,
        "197": 1,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "6f7be0fbf05b530e72cf24c28f07192a2817f51d72026b68ef074ae54599f368"
    },
    "ef91646dc03be3b6099611dd518662957c5a1ba72ea0c7460b8fd84b928b481c": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_elasticloadbalancingv2_targets as targets\nimport aws_cdk.aws_ecs as ecs\nimport aws_cdk.aws_ecs_patterns as patterns\n\n# vpc: ec2.Vpc\n\n\ntask = ecs.FargateTaskDefinition(self, \"Task\", cpu=256, memory_limit_mi_b=512)\ntask.add_container(\"nginx\",\n    image=ecs.ContainerImage.from_registry(\"public.ecr.aws/nginx/nginx:latest\"),\n    port_mappings=[ecs.PortMapping(container_port=80)]\n)\n\nsvc = patterns.ApplicationLoadBalancedFargateService(self, \"Service\",\n    vpc=vpc,\n    task_definition=task,\n    public_load_balancer=False\n)\n\nnlb = elbv2.NetworkLoadBalancer(self, \"Nlb\",\n    vpc=vpc,\n    cross_zone_enabled=True,\n    internet_facing=True\n)\n\nlistener = nlb.add_listener(\"listener\", port=80)\n\nlistener.add_targets(\"Targets\",\n    targets=[targets.AlbTarget(svc.load_balancer, 80)],\n    port=80\n)\n\nCfnOutput(self, \"NlbEndpoint\", value=f\"http://{nlb.loadBalancerDnsName}\")",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.ElasticLoadBalancingV2.Targets;\nusing Amazon.CDK.AWS.ECS;\nusing Amazon.CDK.AWS.ECS.Patterns;\n\nVpc vpc;\n\n\nFargateTaskDefinition task = new FargateTaskDefinition(this, \"Task\", new FargateTaskDefinitionProps { Cpu = 256, MemoryLimitMiB = 512 });\ntask.AddContainer(\"nginx\", new ContainerDefinitionOptions {\n    Image = ContainerImage.FromRegistry(\"public.ecr.aws/nginx/nginx:latest\"),\n    PortMappings = new [] { new PortMapping { ContainerPort = 80 } }\n});\n\nApplicationLoadBalancedFargateService svc = new ApplicationLoadBalancedFargateService(this, \"Service\", new ApplicationLoadBalancedFargateServiceProps {\n    Vpc = vpc,\n    TaskDefinition = task,\n    PublicLoadBalancer = false\n});\n\nNetworkLoadBalancer nlb = new NetworkLoadBalancer(this, \"Nlb\", new NetworkLoadBalancerProps {\n    Vpc = vpc,\n    CrossZoneEnabled = true,\n    InternetFacing = true\n});\n\nNetworkListener listener = nlb.AddListener(\"listener\", new BaseNetworkListenerProps { Port = 80 });\n\nlistener.AddTargets(\"Targets\", new AddNetworkTargetsProps {\n    Targets = new [] { new AlbTarget(svc.LoadBalancer, 80) },\n    Port = 80\n});\n\nnew CfnOutput(this, \"NlbEndpoint\", new CfnOutputProps { Value = $\"http://{nlb.loadBalancerDnsName}\" });",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.elasticloadbalancingv2.targets.*;\nimport software.amazon.awscdk.services.ecs.*;\nimport software.amazon.awscdk.services.ecs.patterns.*;\n\nVpc vpc;\n\n\nFargateTaskDefinition task = FargateTaskDefinition.Builder.create(this, \"Task\").cpu(256).memoryLimitMiB(512).build();\ntask.addContainer(\"nginx\", ContainerDefinitionOptions.builder()\n        .image(ContainerImage.fromRegistry(\"public.ecr.aws/nginx/nginx:latest\"))\n        .portMappings(List.of(PortMapping.builder().containerPort(80).build()))\n        .build());\n\nApplicationLoadBalancedFargateService svc = ApplicationLoadBalancedFargateService.Builder.create(this, \"Service\")\n        .vpc(vpc)\n        .taskDefinition(task)\n        .publicLoadBalancer(false)\n        .build();\n\nNetworkLoadBalancer nlb = NetworkLoadBalancer.Builder.create(this, \"Nlb\")\n        .vpc(vpc)\n        .crossZoneEnabled(true)\n        .internetFacing(true)\n        .build();\n\nNetworkListener listener = nlb.addListener(\"listener\", BaseNetworkListenerProps.builder().port(80).build());\n\nlistener.addTargets(\"Targets\", AddNetworkTargetsProps.builder()\n        .targets(List.of(new AlbTarget(svc.getLoadBalancer(), 80)))\n        .port(80)\n        .build());\n\nCfnOutput.Builder.create(this, \"NlbEndpoint\").value(String.format(\"http://%s\", nlb.getLoadBalancerDnsName())).build();",
          "version": "1"
        },
        "go": {
          "source": "import targets \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2targets\"\nimport ecs \"github.com/aws-samples/dummy/awscdkawsecs\"\nimport patterns \"github.com/aws-samples/dummy/awscdkawsecspatterns\"\n\nvar vpc vpc\n\n\ntask := ecs.NewFargateTaskDefinition(this, jsii.String(\"Task\"), &fargateTaskDefinitionProps{\n\tcpu: jsii.Number(256),\n\tmemoryLimitMiB: jsii.Number(512),\n})\ntask.addContainer(jsii.String(\"nginx\"), &containerDefinitionOptions{\n\timage: ecs.containerImage.fromRegistry(jsii.String(\"public.ecr.aws/nginx/nginx:latest\")),\n\tportMappings: []portMapping{\n\t\t&portMapping{\n\t\t\tcontainerPort: jsii.Number(80),\n\t\t},\n\t},\n})\n\nsvc := patterns.NewApplicationLoadBalancedFargateService(this, jsii.String(\"Service\"), &applicationLoadBalancedFargateServiceProps{\n\tvpc: vpc,\n\ttaskDefinition: task,\n\tpublicLoadBalancer: jsii.Boolean(false),\n})\n\nnlb := elbv2.NewNetworkLoadBalancer(this, jsii.String(\"Nlb\"), &networkLoadBalancerProps{\n\tvpc: vpc,\n\tcrossZoneEnabled: jsii.Boolean(true),\n\tinternetFacing: jsii.Boolean(true),\n})\n\nlistener := nlb.addListener(jsii.String(\"listener\"), &baseNetworkListenerProps{\n\tport: jsii.Number(80),\n})\n\nlistener.addTargets(jsii.String(\"Targets\"), &addNetworkTargetsProps{\n\ttargets: []iNetworkLoadBalancerTarget{\n\t\ttargets.NewAlbTarget(svc.loadBalancer, jsii.Number(80)),\n\t},\n\tport: jsii.Number(80),\n})\n\nawscdkcore.NewCfnOutput(this, jsii.String(\"NlbEndpoint\"), &cfnOutputProps{\n\tvalue: fmt.Sprintf(\"http://%v\", nlb.loadBalancerDnsName),\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as targets from '@aws-cdk/aws-elasticloadbalancingv2-targets';\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as patterns from '@aws-cdk/aws-ecs-patterns';\n\ndeclare const vpc: ec2.Vpc;\n\nconst task = new ecs.FargateTaskDefinition(this, 'Task', { cpu: 256, memoryLimitMiB: 512 });\ntask.addContainer('nginx', {\n  image: ecs.ContainerImage.fromRegistry('public.ecr.aws/nginx/nginx:latest'),\n  portMappings: [{ containerPort: 80 }],\n});\n\nconst svc = new patterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  vpc,\n  taskDefinition: task,\n  publicLoadBalancer: false,\n});\n\nconst nlb = new elbv2.NetworkLoadBalancer(this, 'Nlb', {\n  vpc,\n  crossZoneEnabled: true,\n  internetFacing: true,\n});\n\nconst listener = nlb.addListener('listener', { port: 80 });\n\nlistener.addTargets('Targets', {\n  targets: [new targets.AlbTarget(svc.loadBalancer, 80)],\n  port: 80,\n});\n\nnew CfnOutput(this, 'NlbEndpoint', { value: `http://${nlb.loadBalancerDnsName}`})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 351
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedFargateService",
        "@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedFargateServiceProps",
        "@aws-cdk/aws-ecs.ContainerDefinitionOptions",
        "@aws-cdk/aws-ecs.ContainerImage",
        "@aws-cdk/aws-ecs.ContainerImage#fromRegistry",
        "@aws-cdk/aws-ecs.FargateTaskDefinition",
        "@aws-cdk/aws-ecs.FargateTaskDefinitionProps",
        "@aws-cdk/aws-ecs.TaskDefinition#addContainer",
        "@aws-cdk/aws-elasticloadbalancingv2-targets.AlbTarget",
        "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerProps",
        "@aws-cdk/core.CfnOutput",
        "@aws-cdk/core.CfnOutputProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as targets from '@aws-cdk/aws-elasticloadbalancingv2-targets';\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as patterns from '@aws-cdk/aws-ecs-patterns';\n\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst task = new ecs.FargateTaskDefinition(this, 'Task', { cpu: 256, memoryLimitMiB: 512 });\ntask.addContainer('nginx', {\n  image: ecs.ContainerImage.fromRegistry('public.ecr.aws/nginx/nginx:latest'),\n  portMappings: [{ containerPort: 80 }],\n});\n\nconst svc = new patterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  vpc,\n  taskDefinition: task,\n  publicLoadBalancer: false,\n});\n\nconst nlb = new elbv2.NetworkLoadBalancer(this, 'Nlb', {\n  vpc,\n  crossZoneEnabled: true,\n  internetFacing: true,\n});\n\nconst listener = nlb.addListener('listener', { port: 80 });\n\nlistener.addTargets('Targets', {\n  targets: [new targets.AlbTarget(svc.loadBalancer, 80)],\n  port: 80,\n});\n\nnew CfnOutput(this, 'NlbEndpoint', { value: `http://${nlb.loadBalancerDnsName}`})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 6,
        "10": 11,
        "15": 1,
        "17": 1,
        "75": 48,
        "91": 1,
        "104": 4,
        "106": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 8,
        "194": 11,
        "196": 4,
        "197": 5,
        "211": 1,
        "221": 1,
        "225": 5,
        "226": 3,
        "242": 5,
        "243": 5,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 13,
        "282": 2,
        "290": 1
      },
      "fqnsFingerprint": "4259ecea7ec80b5e8a673272a37b4c66b29b0f74961a3bf6f269379d2828a75c"
    },
    "733e970fb460543fc101d429978ecf1b7ec71f7c9faa1e807d8152f2d3db22f6": {
      "translations": {
        "python": {
          "source": "# listener: elbv2.ApplicationListener\n# asg: autoscaling.AutoScalingGroup\n\n\nlistener.add_targets(\"AppFleet\",\n    port=8080,\n    targets=[asg],\n    health_check=elbv2.HealthCheck(\n        path=\"/ping\",\n        interval=Duration.minutes(1)\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ApplicationListener listener;\nAutoScalingGroup asg;\n\n\nlistener.AddTargets(\"AppFleet\", new AddApplicationTargetsProps {\n    Port = 8080,\n    Targets = new [] { asg },\n    HealthCheck = new HealthCheck {\n        Path = \"/ping\",\n        Interval = Duration.Minutes(1)\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "ApplicationListener listener;\nAutoScalingGroup asg;\n\n\nlistener.addTargets(\"AppFleet\", AddApplicationTargetsProps.builder()\n        .port(8080)\n        .targets(List.of(asg))\n        .healthCheck(HealthCheck.builder()\n                .path(\"/ping\")\n                .interval(Duration.minutes(1))\n                .build())\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var listener applicationListener\nvar asg autoScalingGroup\n\n\nlistener.addTargets(jsii.String(\"AppFleet\"), &addApplicationTargetsProps{\n\tport: jsii.Number(8080),\n\ttargets: []iApplicationLoadBalancerTarget{\n\t\tasg,\n\t},\n\thealthCheck: &healthCheck{\n\t\tpath: jsii.String(\"/ping\"),\n\t\tinterval: *awscdkcore.Duration.minutes(jsii.Number(1)),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const listener: elbv2.ApplicationListener;\ndeclare const asg: autoscaling.AutoScalingGroup;\n\nlistener.addTargets('AppFleet', {\n  port: 8080,\n  targets: [asg],\n  healthCheck: {\n    path: '/ping',\n    interval: Duration.minutes(1),\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 392
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const listener: elbv2.ApplicationListener;\ndeclare const asg: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nlistener.addTargets('AppFleet', {\n  port: 8080,\n  targets: [asg],\n  healthCheck: {\n    path: '/ping',\n    interval: Duration.minutes(1),\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 16,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 2,
        "194": 2,
        "196": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "84fc74e81eb6a6b3f7b8e5dc981bd9b27a02f23ade56cb830a902767d8443970"
    },
    "861ec2916073415e1db047eb346320967bcc769a43fe4858367d2273619dd6da": {
      "translations": {
        "python": {
          "source": "# lb: elbv2.ApplicationLoadBalancer\n# listener: elbv2.ApplicationListener\n# asg: autoscaling.AutoScalingGroup\n\n\nlistener.add_targets(\"AppFleet\",\n    port=8080,\n    targets=[asg],\n    health_check=elbv2.HealthCheck(\n        port=\"8088\"\n    )\n)\n\nasg.connections.allow_from(lb, ec2.Port.tcp(8088))",
          "version": "2"
        },
        "csharp": {
          "source": "ApplicationLoadBalancer lb;\nApplicationListener listener;\nAutoScalingGroup asg;\n\n\nlistener.AddTargets(\"AppFleet\", new AddApplicationTargetsProps {\n    Port = 8080,\n    Targets = new [] { asg },\n    HealthCheck = new HealthCheck {\n        Port = \"8088\"\n    }\n});\n\nasg.Connections.AllowFrom(lb, Port.Tcp(8088));",
          "version": "1"
        },
        "java": {
          "source": "ApplicationLoadBalancer lb;\nApplicationListener listener;\nAutoScalingGroup asg;\n\n\nlistener.addTargets(\"AppFleet\", AddApplicationTargetsProps.builder()\n        .port(8080)\n        .targets(List.of(asg))\n        .healthCheck(HealthCheck.builder()\n                .port(\"8088\")\n                .build())\n        .build());\n\nasg.connections.allowFrom(lb, Port.tcp(8088));",
          "version": "1"
        },
        "go": {
          "source": "var lb applicationLoadBalancer\nvar listener applicationListener\nvar asg autoScalingGroup\n\n\nlistener.addTargets(jsii.String(\"AppFleet\"), &addApplicationTargetsProps{\n\tport: jsii.Number(8080),\n\ttargets: []iApplicationLoadBalancerTarget{\n\t\tasg,\n\t},\n\thealthCheck: &healthCheck{\n\t\tport: jsii.String(\"8088\"),\n\t},\n})\n\nasg.connections.allowFrom(lb, ec2.port.tcp(jsii.Number(8088)))",
          "version": "1"
        },
        "$": {
          "source": "declare const lb: elbv2.ApplicationLoadBalancer;\ndeclare const listener: elbv2.ApplicationListener;\ndeclare const asg: autoscaling.AutoScalingGroup;\n\nlistener.addTargets('AppFleet', {\n  port: 8080,\n  targets: [asg],\n  healthCheck: {\n    port: '8088',\n  }\n});\n\nasg.connections.allowFrom(lb, ec2.Port.tcp(8088));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 414
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.Connections#allowFrom",
        "@aws-cdk/aws-ec2.IConnectable",
        "@aws-cdk/aws-ec2.Port",
        "@aws-cdk/aws-ec2.Port#tcp",
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const lb: elbv2.ApplicationLoadBalancer;\ndeclare const listener: elbv2.ApplicationListener;\ndeclare const asg: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nlistener.addTargets('AppFleet', {\n  port: 8080,\n  targets: [asg],\n  healthCheck: {\n    port: '8088',\n  }\n});\n\nasg.connections.allowFrom(lb, ec2.Port.tcp(8088));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 23,
        "130": 3,
        "153": 3,
        "169": 3,
        "192": 1,
        "193": 2,
        "194": 5,
        "196": 3,
        "225": 3,
        "226": 2,
        "242": 3,
        "243": 3,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "38c6cb247a3ae27c37aba62a6875fd8d9b9d262d6e7f894b3a0a9a34a4aff1a6"
    },
    "1f347be06201ecf44d1e0fdbb1deb00a9014361fc32d944659c0e215844c6644": {
      "translations": {
        "python": {
          "source": "class MyTarget(elbv2.IApplicationLoadBalancerTarget):\n    def attach_to_application_target_group(self, target_group):\n        # If we need to add security group rules\n        # targetGroup.registerConnectable(...);\n        return elbv2.LoadBalancerTargetProps(\n            target_type=elbv2.TargetType.IP,\n            target_json={\"id\": \"1.2.3.4\", \"port\": 8080}\n        )",
          "version": "2"
        },
        "csharp": {
          "source": "class MyTarget : IApplicationLoadBalancerTarget\n{\n    public LoadBalancerTargetProps AttachToApplicationTargetGroup(ApplicationTargetGroup targetGroup)\n    {\n        // If we need to add security group rules\n        // targetGroup.registerConnectable(...);\n        return new LoadBalancerTargetProps {\n            TargetType = TargetType.IP,\n            TargetJson = new Struct { Id = \"1.2.3.4\", Port = 8080 }\n        };\n    }\n}",
          "version": "1"
        },
        "java": {
          "source": "public class MyTarget implements IApplicationLoadBalancerTarget {\n    public LoadBalancerTargetProps attachToApplicationTargetGroup(ApplicationTargetGroup targetGroup) {\n        // If we need to add security group rules\n        // targetGroup.registerConnectable(...);\n        return LoadBalancerTargetProps.builder()\n                .targetType(TargetType.IP)\n                .targetJson(Map.of(\"id\", \"1.2.3.4\", \"port\", 8080))\n                .build();\n    }\n}",
          "version": "1"
        },
        "go": {
          "source": "type myTarget struct {\n}\n\nfunc (this *myTarget) attachToApplicationTargetGroup(targetGroup applicationTargetGroup) loadBalancerTargetProps {\n\t// If we need to add security group rules\n\t// targetGroup.registerConnectable(...);\n\treturn &loadBalancerTargetProps{\n\t\ttargetType: elbv2.targetType_IP,\n\t\ttargetJson: map[string]interface{}{\n\t\t\t\"id\": jsii.String(\"1.2.3.4\"),\n\t\t\t\"port\": jsii.Number(8080),\n\t\t},\n\t}\n}",
          "version": "1"
        },
        "$": {
          "source": "class MyTarget implements elbv2.IApplicationLoadBalancerTarget {\n  public attachToApplicationTargetGroup(targetGroup: elbv2.ApplicationTargetGroup): elbv2.LoadBalancerTargetProps {\n    // If we need to add security group rules\n    // targetGroup.registerConnectable(...);\n    return {\n      targetType: elbv2.TargetType.IP,\n      targetJson: { id: '1.2.3.4', port: 8080 },\n    };\n  }\n}",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 454
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType#IP"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nclass MyTarget implements elbv2.IApplicationLoadBalancerTarget {\n  public attachToApplicationTargetGroup(targetGroup: elbv2.ApplicationTargetGroup): elbv2.LoadBalancerTargetProps {\n    // If we need to add security group rules\n    // targetGroup.registerConnectable(...);\n    return {\n      targetType: elbv2.TargetType.IP,\n      targetJson: { id: '1.2.3.4', port: 8080 },\n    };\n  }\n}\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 16,
        "119": 1,
        "153": 2,
        "156": 1,
        "161": 1,
        "169": 2,
        "193": 2,
        "194": 3,
        "216": 1,
        "223": 1,
        "235": 1,
        "245": 1,
        "279": 1,
        "281": 4
      },
      "fqnsFingerprint": "493fd4bc8e6b4376cf95b26a29723bd3805ffd104894cf166d2d6e90ddd85fe8"
    },
    "d3845822b447aed0a76302368c31dfe108ba9f2abc4d62e12055e2c2cbf0678f": {
      "translations": {
        "python": {
          "source": "# resource: Resource\n# target_group: elbv2.ApplicationTargetGroup\n\n\n# Make sure that the listener has been created, and so the TargetGroup\n# has been associated with the LoadBalancer, before 'resource' is created.\n\nNode.of(resource).add_dependency(target_group.load_balancer_attached)",
          "version": "2"
        },
        "csharp": {
          "source": "Resource resource;\nApplicationTargetGroup targetGroup;\n\n\n// Make sure that the listener has been created, and so the TargetGroup\n// has been associated with the LoadBalancer, before 'resource' is created.\n\nNode.Of(resource).AddDependency(targetGroup.LoadBalancerAttached);",
          "version": "1"
        },
        "java": {
          "source": "Resource resource;\nApplicationTargetGroup targetGroup;\n\n\n// Make sure that the listener has been created, and so the TargetGroup\n// has been associated with the LoadBalancer, before 'resource' is created.\n\nNode.of(resource).addDependency(targetGroup.getLoadBalancerAttached());",
          "version": "1"
        },
        "go": {
          "source": "var resource resource\nvar targetGroup applicationTargetGroup\n\n\n// Make sure that the listener has been created, and so the TargetGroup\n// has been associated with the LoadBalancer, before 'resource' is created.\n\nconstructs.Node.of(resource).addDependency(targetGroup.loadBalancerAttached)",
          "version": "1"
        },
        "$": {
          "source": "declare const resource: Resource;\ndeclare const targetGroup: elbv2.ApplicationTargetGroup;\n\n// Make sure that the listener has been created, and so the TargetGroup\n// has been associated with the LoadBalancer, before 'resource' is created.\n\nNode.of(resource).addDependency(targetGroup.loadBalancerAttached);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 481
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "constructs.IConstruct",
        "constructs.Node#addDependency",
        "constructs.Node#of"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const resource: Resource;\ndeclare const targetGroup: elbv2.ApplicationTargetGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// Make sure that the listener has been created, and so the TargetGroup\n// has been associated with the LoadBalancer, before 'resource' is created.\n\nNode.of(resource).addDependency(targetGroup.loadBalancerAttached);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "75": 11,
        "130": 2,
        "153": 1,
        "169": 2,
        "194": 3,
        "196": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "290": 1
      },
      "fqnsFingerprint": "1f7179c2f7ffe314ef6dacbc53004080af5193362f43b19fb6b2a4fcbfe8d35c"
    },
    "525902bc492d2ccc24619b5f89af64f8aa76b3b8337eab40ba6745ad93051557": {
      "translations": {
        "python": {
          "source": "load_balancer = elbv2.ApplicationLoadBalancer.from_lookup(self, \"ALB\",\n    load_balancer_arn=\"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IApplicationLoadBalancer loadBalancer = ApplicationLoadBalancer.FromLookup(this, \"ALB\", new ApplicationLoadBalancerLookupOptions {\n    LoadBalancerArn = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\"\n});",
          "version": "1"
        },
        "java": {
          "source": "IApplicationLoadBalancer loadBalancer = ApplicationLoadBalancer.fromLookup(this, \"ALB\", ApplicationLoadBalancerLookupOptions.builder()\n        .loadBalancerArn(\"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\")\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "loadBalancer := elbv2.applicationLoadBalancer.fromLookup(this, jsii.String(\"ALB\"), &applicationLoadBalancerLookupOptions{\n\tloadBalancerArn: jsii.String(\"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "const loadBalancer = elbv2.ApplicationLoadBalancer.fromLookup(this, 'ALB', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 515
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#fromLookup",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerLookupOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst loadBalancer = elbv2.ApplicationLoadBalancer.fromLookup(this, 'ALB', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 5,
        "104": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "641d332403f71c50f8336dafba17c3c7ce760aa2753c85d20d649e2d94d55e18"
    },
    "7da030b3ef7c3fa89d8c7f8ff3638a94126a3904f81a0d09c24037c6c06f8b2c": {
      "translations": {
        "python": {
          "source": "load_balancer = elbv2.ApplicationLoadBalancer.from_lookup(self, \"ALB\",\n    load_balancer_tags={\n        # Finds a load balancer matching all tags.\n        \"some\": \"tag\",\n        \"someother\": \"tag\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IApplicationLoadBalancer loadBalancer = ApplicationLoadBalancer.FromLookup(this, \"ALB\", new ApplicationLoadBalancerLookupOptions {\n    LoadBalancerTags = new Dictionary<string, string> {\n        // Finds a load balancer matching all tags.\n        { \"some\", \"tag\" },\n        { \"someother\", \"tag\" }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "IApplicationLoadBalancer loadBalancer = ApplicationLoadBalancer.fromLookup(this, \"ALB\", ApplicationLoadBalancerLookupOptions.builder()\n        .loadBalancerTags(Map.of(\n                // Finds a load balancer matching all tags.\n                \"some\", \"tag\",\n                \"someother\", \"tag\"))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "loadBalancer := elbv2.applicationLoadBalancer.fromLookup(this, jsii.String(\"ALB\"), &applicationLoadBalancerLookupOptions{\n\tloadBalancerTags: map[string]*string{\n\t\t// Finds a load balancer matching all tags.\n\t\t\"some\": jsii.String(\"tag\"),\n\t\t\"someother\": jsii.String(\"tag\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const loadBalancer = elbv2.ApplicationLoadBalancer.fromLookup(this, 'ALB', {\n  loadBalancerTags: {\n    // Finds a load balancer matching all tags.\n    some: 'tag',\n    someother: 'tag',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 523
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#fromLookup",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerLookupOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst loadBalancer = elbv2.ApplicationLoadBalancer.fromLookup(this, 'ALB', {\n  loadBalancerTags: {\n    // Finds a load balancer matching all tags.\n    some: 'tag',\n    someother: 'tag',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "104": 1,
        "193": 2,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "641d332403f71c50f8336dafba17c3c7ce760aa2753c85d20d649e2d94d55e18"
    },
    "04a8613cbbccfce188d0a496c1ec6f6621ca45ca63a459a7911897d633045c42": {
      "translations": {
        "python": {
          "source": "listener = elbv2.ApplicationListener.from_lookup(self, \"ALBListener\",\n    load_balancer_arn=\"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\",\n    listener_protocol=elbv2.ApplicationProtocol.HTTPS,\n    listener_port=443\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IApplicationListener listener = ApplicationListener.FromLookup(this, \"ALBListener\", new ApplicationListenerLookupOptions {\n    LoadBalancerArn = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\",\n    ListenerProtocol = ApplicationProtocol.HTTPS,\n    ListenerPort = 443\n});",
          "version": "1"
        },
        "java": {
          "source": "IApplicationListener listener = ApplicationListener.fromLookup(this, \"ALBListener\", ApplicationListenerLookupOptions.builder()\n        .loadBalancerArn(\"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\")\n        .listenerProtocol(ApplicationProtocol.HTTPS)\n        .listenerPort(443)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "listener := elbv2.applicationListener.fromLookup(this, jsii.String(\"ALBListener\"), &applicationListenerLookupOptions{\n\tloadBalancerArn: jsii.String(\"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\"),\n\tlistenerProtocol: elbv2.applicationProtocol_HTTPS,\n\tlistenerPort: jsii.Number(443),\n})",
          "version": "1"
        },
        "$": {
          "source": "const listener = elbv2.ApplicationListener.fromLookup(this, 'ALBListener', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456',\n  listenerProtocol: elbv2.ApplicationProtocol.HTTPS,\n  listenerPort: 443,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 549
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#fromLookup",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerLookupOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol#HTTPS",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst listener = elbv2.ApplicationListener.fromLookup(this, 'ALBListener', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456',\n  listenerProtocol: elbv2.ApplicationProtocol.HTTPS,\n  listenerPort: 443,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 10,
        "104": 1,
        "193": 1,
        "194": 4,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "d27efd30deafbc5f63ba018b2ddfca1dc69ed5b3936c63df0734e8c2afb32c40"
    },
    "1234b7b2460288683746c3e06e5e908f8280980deeafdf65b227a2b91e4225ab": {
      "translations": {
        "python": {
          "source": "listener = elbv2.ApplicationListener.from_lookup(self, \"ALBListener\",\n    load_balancer_tags={\n        \"Cluster\": \"MyClusterName\"\n    },\n    listener_protocol=elbv2.ApplicationProtocol.HTTPS,\n    listener_port=443\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IApplicationListener listener = ApplicationListener.FromLookup(this, \"ALBListener\", new ApplicationListenerLookupOptions {\n    LoadBalancerTags = new Dictionary<string, string> {\n        { \"Cluster\", \"MyClusterName\" }\n    },\n    ListenerProtocol = ApplicationProtocol.HTTPS,\n    ListenerPort = 443\n});",
          "version": "1"
        },
        "java": {
          "source": "IApplicationListener listener = ApplicationListener.fromLookup(this, \"ALBListener\", ApplicationListenerLookupOptions.builder()\n        .loadBalancerTags(Map.of(\n                \"Cluster\", \"MyClusterName\"))\n        .listenerProtocol(ApplicationProtocol.HTTPS)\n        .listenerPort(443)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "listener := elbv2.applicationListener.fromLookup(this, jsii.String(\"ALBListener\"), &applicationListenerLookupOptions{\n\tloadBalancerTags: map[string]*string{\n\t\t\"Cluster\": jsii.String(\"MyClusterName\"),\n\t},\n\tlistenerProtocol: elbv2.applicationProtocol_HTTPS,\n\tlistenerPort: jsii.Number(443),\n})",
          "version": "1"
        },
        "$": {
          "source": "const listener = elbv2.ApplicationListener.fromLookup(this, 'ALBListener', {\n  loadBalancerTags: {\n    Cluster: 'MyClusterName',\n  },\n  listenerProtocol: elbv2.ApplicationProtocol.HTTPS,\n  listenerPort: 443,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 559
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#fromLookup",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerLookupOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol#HTTPS",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst listener = elbv2.ApplicationListener.fromLookup(this, 'ALBListener', {\n  loadBalancerTags: {\n    Cluster: 'MyClusterName',\n  },\n  listenerProtocol: elbv2.ApplicationProtocol.HTTPS,\n  listenerPort: 443,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 11,
        "104": 1,
        "193": 2,
        "194": 4,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 4
      },
      "fqnsFingerprint": "d27efd30deafbc5f63ba018b2ddfca1dc69ed5b3936c63df0734e8c2afb32c40"
    },
    "c457265b5024aa5285d510e40a81039cd7df7ffeda8a432a7562b61f21c313cf": {
      "translations": {
        "python": {
          "source": "listener = elbv2.NetworkListener.from_lookup(self, \"ALBListener\",\n    load_balancer_tags={\n        \"Cluster\": \"MyClusterName\"\n    },\n    listener_protocol=elbv2.Protocol.TCP,\n    listener_port=12345\n)",
          "version": "2"
        },
        "csharp": {
          "source": "INetworkListener listener = NetworkListener.FromLookup(this, \"ALBListener\", new NetworkListenerLookupOptions {\n    LoadBalancerTags = new Dictionary<string, string> {\n        { \"Cluster\", \"MyClusterName\" }\n    },\n    ListenerProtocol = Protocol.TCP,\n    ListenerPort = 12345\n});",
          "version": "1"
        },
        "java": {
          "source": "INetworkListener listener = NetworkListener.fromLookup(this, \"ALBListener\", NetworkListenerLookupOptions.builder()\n        .loadBalancerTags(Map.of(\n                \"Cluster\", \"MyClusterName\"))\n        .listenerProtocol(Protocol.TCP)\n        .listenerPort(12345)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "listener := elbv2.networkListener.fromLookup(this, jsii.String(\"ALBListener\"), &networkListenerLookupOptions{\n\tloadBalancerTags: map[string]*string{\n\t\t\"Cluster\": jsii.String(\"MyClusterName\"),\n\t},\n\tlistenerProtocol: elbv2.protocol_TCP,\n\tlistenerPort: jsii.Number(12345),\n})",
          "version": "1"
        },
        "$": {
          "source": "const listener = elbv2.NetworkListener.fromLookup(this, 'ALBListener', {\n  loadBalancerTags: {\n    Cluster: 'MyClusterName',\n  },\n  listenerProtocol: elbv2.Protocol.TCP,\n  listenerPort: 12345,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "field": {
          "field": "markdown",
          "line": 571
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener#fromLookup",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerLookupOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.Protocol",
        "@aws-cdk/aws-elasticloadbalancingv2.Protocol#TCP",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst listener = elbv2.NetworkListener.fromLookup(this, 'ALBListener', {\n  loadBalancerTags: {\n    Cluster: 'MyClusterName',\n  },\n  listenerProtocol: elbv2.Protocol.TCP,\n  listenerPort: 12345,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 11,
        "104": 1,
        "193": 2,
        "194": 4,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 4
      },
      "fqnsFingerprint": "cea0360562af252024960e29259f755cc84435c93356e75810cc5dfb3e142cb7"
    },
    "7d7938c7db729c5c59e156f5358e732992a4d53164cbe51de5ed6f6985d21bdb": {
      "translations": {
        "python": {
          "source": "# listener: elbv2.ApplicationListener\n\n\nlistener.add_action(\"Fixed\",\n    priority=10,\n    conditions=[\n        elbv2.ListenerCondition.path_patterns([\"/ok\"])\n    ],\n    action=elbv2.ListenerAction.fixed_response(200,\n        content_type=elbv2.ContentType.TEXT_PLAIN,\n        message_body=\"OK\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ApplicationListener listener;\n\n\nlistener.AddAction(\"Fixed\", new AddApplicationActionProps {\n    Priority = 10,\n    Conditions = new [] { ListenerCondition.PathPatterns(new [] { \"/ok\" }) },\n    Action = ListenerAction.FixedResponse(200, new FixedResponseOptions {\n        ContentType = ContentType.TEXT_PLAIN,\n        MessageBody = \"OK\"\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "ApplicationListener listener;\n\n\nlistener.addAction(\"Fixed\", AddApplicationActionProps.builder()\n        .priority(10)\n        .conditions(List.of(ListenerCondition.pathPatterns(List.of(\"/ok\"))))\n        .action(ListenerAction.fixedResponse(200, FixedResponseOptions.builder()\n                .contentType(ContentType.TEXT_PLAIN)\n                .messageBody(\"OK\")\n                .build()))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var listener applicationListener\n\n\nlistener.addAction(jsii.String(\"Fixed\"), &addApplicationActionProps{\n\tpriority: jsii.Number(10),\n\tconditions: []listenerCondition{\n\t\telbv2.*listenerCondition.pathPatterns([]*string{\n\t\t\tjsii.String(\"/ok\"),\n\t\t}),\n\t},\n\taction: elbv2.listenerAction.fixedResponse(jsii.Number(200), &fixedResponseOptions{\n\t\tcontentType: elbv2.contentType_TEXT_PLAIN,\n\t\tmessageBody: jsii.String(\"OK\"),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const listener: elbv2.ApplicationListener;\n\nlistener.addAction('Fixed', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.pathPatterns(['/ok']),\n  ],\n  action: elbv2.ListenerAction.fixedResponse(200, {\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'OK',\n  })\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationActionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationActionProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addAction",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType#TEXT_PLAIN",
        "@aws-cdk/aws-elasticloadbalancingv2.FixedResponseOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction#fixedResponse",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition#pathPatterns"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const listener: elbv2.ApplicationListener;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nlistener.addAction('Fixed', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.pathPatterns(['/ok']),\n  ],\n  action: elbv2.ListenerAction.fixedResponse(200, {\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'OK',\n  })\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 19,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 2,
        "194": 7,
        "196": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "e6ff815ebb6182c25b23317faa5dfc0c7a98c7bd69adec5a852b00aa89cd2040"
    },
    "a15deba3b29b11aaf2eb3abf7ea6fb44c0d55efec04303582a78de693ea32aa0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# application_target_group: elbv2.ApplicationTargetGroup\n# listener_condition: elbv2.ListenerCondition\n\nadd_application_target_groups_props = elbv2.AddApplicationTargetGroupsProps(\n    target_groups=[application_target_group],\n\n    # the properties below are optional\n    conditions=[listener_condition],\n    host_header=\"hostHeader\",\n    path_pattern=\"pathPattern\",\n    path_patterns=[\"pathPatterns\"],\n    priority=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nApplicationTargetGroup applicationTargetGroup;\nListenerCondition listenerCondition;\n\nAddApplicationTargetGroupsProps addApplicationTargetGroupsProps = new AddApplicationTargetGroupsProps {\n    TargetGroups = new [] { applicationTargetGroup },\n\n    // the properties below are optional\n    Conditions = new [] { listenerCondition },\n    HostHeader = \"hostHeader\",\n    PathPattern = \"pathPattern\",\n    PathPatterns = new [] { \"pathPatterns\" },\n    Priority = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nApplicationTargetGroup applicationTargetGroup;\nListenerCondition listenerCondition;\n\nAddApplicationTargetGroupsProps addApplicationTargetGroupsProps = AddApplicationTargetGroupsProps.builder()\n        .targetGroups(List.of(applicationTargetGroup))\n\n        // the properties below are optional\n        .conditions(List.of(listenerCondition))\n        .hostHeader(\"hostHeader\")\n        .pathPattern(\"pathPattern\")\n        .pathPatterns(List.of(\"pathPatterns\"))\n        .priority(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar applicationTargetGroup applicationTargetGroup\nvar listenerCondition listenerCondition\n\naddApplicationTargetGroupsProps := &addApplicationTargetGroupsProps{\n\ttargetGroups: []iApplicationTargetGroup{\n\t\tapplicationTargetGroup,\n\t},\n\n\t// the properties below are optional\n\tconditions: []*listenerCondition{\n\t\tlistenerCondition,\n\t},\n\thostHeader: jsii.String(\"hostHeader\"),\n\tpathPattern: jsii.String(\"pathPattern\"),\n\tpathPatterns: []*string{\n\t\tjsii.String(\"pathPatterns\"),\n\t},\n\tpriority: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\ndeclare const listenerCondition: elbv2.ListenerCondition;\nconst addApplicationTargetGroupsProps: elbv2.AddApplicationTargetGroupsProps = {\n  targetGroups: [applicationTargetGroup],\n\n  // the properties below are optional\n  conditions: [listenerCondition],\n  hostHeader: 'hostHeader',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  priority: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetGroupsProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetGroupsProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\ndeclare const listenerCondition: elbv2.ListenerCondition;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst addApplicationTargetGroupsProps: elbv2.AddApplicationTargetGroupsProps = {\n  targetGroups: [applicationTargetGroup],\n\n  // the properties below are optional\n  conditions: [listenerCondition],\n  hostHeader: 'hostHeader',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  priority: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 4,
        "75": 18,
        "130": 2,
        "153": 3,
        "169": 3,
        "192": 3,
        "193": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "ded13d666489189d153fc7762f0b0a09466a6c86bf75e447f19e1d1570256e43"
    },
    "78265f4993999e1e8c9adf8dc88596bec37470db90cf66d9646603c8e6b8bb3d": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_autoscaling import AutoScalingGroup\n# asg: AutoScalingGroup\n\n# vpc: ec2.Vpc\n\n\n# Create the load balancer in a VPC. 'internetFacing' is 'false'\n# by default, which creates an internal load balancer.\nlb = elbv2.ApplicationLoadBalancer(self, \"LB\",\n    vpc=vpc,\n    internet_facing=True\n)\n\n# Add a listener and open up the load balancer's security group\n# to the world.\nlistener = lb.add_listener(\"Listener\",\n    port=80,\n\n    # 'open: true' is the default, you can leave it out if you want. Set it\n    # to 'false' and use `listener.connections` if you want to be selective\n    # about who can access the load balancer.\n    open=True\n)\n\n# Create an AutoScaling group and add it as a load balancing\n# target to the listener.\nlistener.add_targets(\"ApplicationFleet\",\n    port=8080,\n    targets=[asg]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.AutoScaling;\nAutoScalingGroup asg;\n\nVpc vpc;\n\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nApplicationLoadBalancer lb = new ApplicationLoadBalancer(this, \"LB\", new ApplicationLoadBalancerProps {\n    Vpc = vpc,\n    InternetFacing = true\n});\n\n// Add a listener and open up the load balancer's security group\n// to the world.\nApplicationListener listener = lb.AddListener(\"Listener\", new BaseApplicationListenerProps {\n    Port = 80,\n\n    // 'open: true' is the default, you can leave it out if you want. Set it\n    // to 'false' and use `listener.connections` if you want to be selective\n    // about who can access the load balancer.\n    Open = true\n});\n\n// Create an AutoScaling group and add it as a load balancing\n// target to the listener.\nlistener.AddTargets(\"ApplicationFleet\", new AddApplicationTargetsProps {\n    Port = 8080,\n    Targets = new [] { asg }\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.autoscaling.AutoScalingGroup;\nAutoScalingGroup asg;\n\nVpc vpc;\n\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nApplicationLoadBalancer lb = ApplicationLoadBalancer.Builder.create(this, \"LB\")\n        .vpc(vpc)\n        .internetFacing(true)\n        .build();\n\n// Add a listener and open up the load balancer's security group\n// to the world.\nApplicationListener listener = lb.addListener(\"Listener\", BaseApplicationListenerProps.builder()\n        .port(80)\n\n        // 'open: true' is the default, you can leave it out if you want. Set it\n        // to 'false' and use `listener.connections` if you want to be selective\n        // about who can access the load balancer.\n        .open(true)\n        .build());\n\n// Create an AutoScaling group and add it as a load balancing\n// target to the listener.\nlistener.addTargets(\"ApplicationFleet\", AddApplicationTargetsProps.builder()\n        .port(8080)\n        .targets(List.of(asg))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "import \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nvar asg autoScalingGroup\n\nvar vpc vpc\n\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nlb := elbv2.NewApplicationLoadBalancer(this, jsii.String(\"LB\"), &applicationLoadBalancerProps{\n\tvpc: vpc,\n\tinternetFacing: jsii.Boolean(true),\n})\n\n// Add a listener and open up the load balancer's security group\n// to the world.\nlistener := lb.addListener(jsii.String(\"Listener\"), &baseApplicationListenerProps{\n\tport: jsii.Number(80),\n\n\t// 'open: true' is the default, you can leave it out if you want. Set it\n\t// to 'false' and use `listener.connections` if you want to be selective\n\t// about who can access the load balancer.\n\topen: jsii.Boolean(true),\n})\n\n// Create an AutoScaling group and add it as a load balancing\n// target to the listener.\nlistener.addTargets(jsii.String(\"ApplicationFleet\"), &addApplicationTargetsProps{\n\tport: jsii.Number(8080),\n\ttargets: []iApplicationLoadBalancerTarget{\n\t\tasg,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "import { AutoScalingGroup } from '@aws-cdk/aws-autoscaling';\ndeclare const asg: AutoScalingGroup;\n\ndeclare const vpc: ec2.Vpc;\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true\n});\n\n// Add a listener and open up the load balancer's security group\n// to the world.\nconst listener = lb.addListener('Listener', {\n  port: 80,\n\n  // 'open: true' is the default, you can leave it out if you want. Set it\n  // to 'false' and use `listener.connections` if you want to be selective\n  // about who can access the load balancer.\n  open: true,\n});\n\n// Create an AutoScaling group and add it as a load balancing\n// target to the listener.\nlistener.addTargets('ApplicationFleet', {\n  port: 8080,\n  targets: [asg]\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { AutoScalingGroup } from '@aws-cdk/aws-autoscaling';\ndeclare const asg: AutoScalingGroup;\n\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true\n});\n\n// Add a listener and open up the load balancer's security group\n// to the world.\nconst listener = lb.addListener('Listener', {\n  port: 80,\n\n  // 'open: true' is the default, you can leave it out if you want. Set it\n  // to 'false' and use `listener.connections` if you want to be selective\n  // about who can access the load balancer.\n  open: true,\n});\n\n// Create an AutoScaling group and add it as a load balancing\n// target to the listener.\nlistener.addTargets('ApplicationFleet', {\n  port: 8080,\n  targets: [asg]\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 4,
        "75": 21,
        "104": 1,
        "106": 2,
        "130": 2,
        "153": 1,
        "169": 2,
        "192": 1,
        "193": 3,
        "194": 3,
        "196": 2,
        "197": 1,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 5,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "c569f1f5c0c5781af34437de894440dc417885b18214f453e0229afc0d200930"
    },
    "04e010ebbb0d1f098ed7775e543b83b3189afe31610976034aed9b0310bdf3dd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# listener_condition: elbv2.ListenerCondition\n\nadd_fixed_response_props = elbv2.AddFixedResponseProps(\n    status_code=\"statusCode\",\n\n    # the properties below are optional\n    conditions=[listener_condition],\n    content_type=elbv2.ContentType.TEXT_PLAIN,\n    host_header=\"hostHeader\",\n    message_body=\"messageBody\",\n    path_pattern=\"pathPattern\",\n    path_patterns=[\"pathPatterns\"],\n    priority=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nListenerCondition listenerCondition;\n\nAddFixedResponseProps addFixedResponseProps = new AddFixedResponseProps {\n    StatusCode = \"statusCode\",\n\n    // the properties below are optional\n    Conditions = new [] { listenerCondition },\n    ContentType = ContentType.TEXT_PLAIN,\n    HostHeader = \"hostHeader\",\n    MessageBody = \"messageBody\",\n    PathPattern = \"pathPattern\",\n    PathPatterns = new [] { \"pathPatterns\" },\n    Priority = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nListenerCondition listenerCondition;\n\nAddFixedResponseProps addFixedResponseProps = AddFixedResponseProps.builder()\n        .statusCode(\"statusCode\")\n\n        // the properties below are optional\n        .conditions(List.of(listenerCondition))\n        .contentType(ContentType.TEXT_PLAIN)\n        .hostHeader(\"hostHeader\")\n        .messageBody(\"messageBody\")\n        .pathPattern(\"pathPattern\")\n        .pathPatterns(List.of(\"pathPatterns\"))\n        .priority(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar listenerCondition listenerCondition\n\naddFixedResponseProps := &addFixedResponseProps{\n\tstatusCode: jsii.String(\"statusCode\"),\n\n\t// the properties below are optional\n\tconditions: []*listenerCondition{\n\t\tlistenerCondition,\n\t},\n\tcontentType: elbv2.contentType_TEXT_PLAIN,\n\thostHeader: jsii.String(\"hostHeader\"),\n\tmessageBody: jsii.String(\"messageBody\"),\n\tpathPattern: jsii.String(\"pathPattern\"),\n\tpathPatterns: []*string{\n\t\tjsii.String(\"pathPatterns\"),\n\t},\n\tpriority: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const listenerCondition: elbv2.ListenerCondition;\nconst addFixedResponseProps: elbv2.AddFixedResponseProps = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  conditions: [listenerCondition],\n  contentType: elbv2.ContentType.TEXT_PLAIN,\n  hostHeader: 'hostHeader',\n  messageBody: 'messageBody',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  priority: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddFixedResponseProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddFixedResponseProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType#TEXT_PLAIN"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const listenerCondition: elbv2.ListenerCondition;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst addFixedResponseProps: elbv2.AddFixedResponseProps = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  conditions: [listenerCondition],\n  contentType: elbv2.ContentType.TEXT_PLAIN,\n  hostHeader: 'hostHeader',\n  messageBody: 'messageBody',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  priority: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 6,
        "75": 19,
        "130": 1,
        "153": 2,
        "169": 2,
        "192": 2,
        "193": 1,
        "194": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "3247c1cfa3ead35a694671c18e5743d5ee1b757aac5ba9dcc0664572015e235a"
    },
    "4f314ff84b420a7b21295bde9c5622a0e9aa400f0621f6205a9d169173b44f05": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# network_listener_action: elbv2.NetworkListenerAction\n\nadd_network_action_props = elbv2.AddNetworkActionProps(\n    action=network_listener_action\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nNetworkListenerAction networkListenerAction;\n\nAddNetworkActionProps addNetworkActionProps = new AddNetworkActionProps {\n    Action = networkListenerAction\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nNetworkListenerAction networkListenerAction;\n\nAddNetworkActionProps addNetworkActionProps = AddNetworkActionProps.builder()\n        .action(networkListenerAction)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar networkListenerAction networkListenerAction\n\naddNetworkActionProps := &addNetworkActionProps{\n\taction: networkListenerAction,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const networkListenerAction: elbv2.NetworkListenerAction;\nconst addNetworkActionProps: elbv2.AddNetworkActionProps = {\n  action: networkListenerAction,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkActionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkActionProps",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerAction"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const networkListenerAction: elbv2.NetworkListenerAction;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst addNetworkActionProps: elbv2.AddNetworkActionProps = {\n  action: networkListenerAction,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 9,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "6ea00bb8bff65dcd32953a928067339f973f250f4e8f5e0b55a412ac236ad0ed"
    },
    "41bb5162cd95944af9d3d709af4f9b134b9cbc48ec233f566560a214df941c85": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations import HttpNlbIntegration\n\n\nvpc = ec2.Vpc(self, \"VPC\")\nlb = elbv2.NetworkLoadBalancer(self, \"lb\", vpc=vpc)\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpNlbIntegration(\"DefaultIntegration\", listener)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nNetworkLoadBalancer lb = new NetworkLoadBalancer(this, \"lb\", new NetworkLoadBalancerProps { Vpc = vpc });\nNetworkListener listener = lb.AddListener(\"listener\", new BaseNetworkListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddNetworkTargetsProps {\n    Port = 80\n});\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpNlbIntegration(\"DefaultIntegration\", listener)\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.HttpNlbIntegration;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nNetworkLoadBalancer lb = NetworkLoadBalancer.Builder.create(this, \"lb\").vpc(vpc).build();\nNetworkListener listener = lb.addListener(\"listener\", BaseNetworkListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddNetworkTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(new HttpNlbIntegration(\"DefaultIntegration\", listener))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\n\nvpc := ec2.NewVpc(this, jsii.String(\"VPC\"))\nlb := elbv2.NewNetworkLoadBalancer(this, jsii.String(\"lb\"), &networkLoadBalancerProps{\n\tvpc: vpc,\n})\nlistener := lb.addListener(jsii.String(\"listener\"), &baseNetworkListenerProps{\n\tport: jsii.Number(80),\n})\nlistener.addTargets(jsii.String(\"target\"), &addNetworkTargetsProps{\n\tport: jsii.Number(80),\n})\n\nhttpEndpoint := apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyPrivateApi\"), &httpApiProps{\n\tdefaultIntegration: *awscdkawsapigatewayv2integrations.NewHttpNlbIntegration(jsii.String(\"DefaultIntegration\"), listener),\n})",
          "version": "1"
        },
        "$": {
          "source": "import { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkTargetsProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-integrations.HttpNlbIntegration",
        "@aws-cdk/aws-apigatewayv2.HttpApi",
        "@aws-cdk/aws-apigatewayv2.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.Vpc",
        "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 7,
        "75": 21,
        "104": 3,
        "193": 4,
        "194": 5,
        "196": 2,
        "197": 4,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "a0ee5bc89a740e65e13ba17eaeb8deed11e0b3bfae376bd4a0d561095121d042"
    },
    "ff4c70e156e8ac230041bb580d06e976ec8af3b088b1b9c4f52a7ef8c9bc3f5e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# listener_condition: elbv2.ListenerCondition\n\nadd_redirect_response_props = elbv2.AddRedirectResponseProps(\n    status_code=\"statusCode\",\n\n    # the properties below are optional\n    conditions=[listener_condition],\n    host=\"host\",\n    host_header=\"hostHeader\",\n    path=\"path\",\n    path_pattern=\"pathPattern\",\n    path_patterns=[\"pathPatterns\"],\n    port=\"port\",\n    priority=123,\n    protocol=\"protocol\",\n    query=\"query\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nListenerCondition listenerCondition;\n\nAddRedirectResponseProps addRedirectResponseProps = new AddRedirectResponseProps {\n    StatusCode = \"statusCode\",\n\n    // the properties below are optional\n    Conditions = new [] { listenerCondition },\n    Host = \"host\",\n    HostHeader = \"hostHeader\",\n    Path = \"path\",\n    PathPattern = \"pathPattern\",\n    PathPatterns = new [] { \"pathPatterns\" },\n    Port = \"port\",\n    Priority = 123,\n    Protocol = \"protocol\",\n    Query = \"query\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nListenerCondition listenerCondition;\n\nAddRedirectResponseProps addRedirectResponseProps = AddRedirectResponseProps.builder()\n        .statusCode(\"statusCode\")\n\n        // the properties below are optional\n        .conditions(List.of(listenerCondition))\n        .host(\"host\")\n        .hostHeader(\"hostHeader\")\n        .path(\"path\")\n        .pathPattern(\"pathPattern\")\n        .pathPatterns(List.of(\"pathPatterns\"))\n        .port(\"port\")\n        .priority(123)\n        .protocol(\"protocol\")\n        .query(\"query\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar listenerCondition listenerCondition\n\naddRedirectResponseProps := &addRedirectResponseProps{\n\tstatusCode: jsii.String(\"statusCode\"),\n\n\t// the properties below are optional\n\tconditions: []*listenerCondition{\n\t\tlistenerCondition,\n\t},\n\thost: jsii.String(\"host\"),\n\thostHeader: jsii.String(\"hostHeader\"),\n\tpath: jsii.String(\"path\"),\n\tpathPattern: jsii.String(\"pathPattern\"),\n\tpathPatterns: []*string{\n\t\tjsii.String(\"pathPatterns\"),\n\t},\n\tport: jsii.String(\"port\"),\n\tpriority: jsii.Number(123),\n\tprotocol: jsii.String(\"protocol\"),\n\tquery: jsii.String(\"query\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const listenerCondition: elbv2.ListenerCondition;\nconst addRedirectResponseProps: elbv2.AddRedirectResponseProps = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  conditions: [listenerCondition],\n  host: 'host',\n  hostHeader: 'hostHeader',\n  path: 'path',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  port: 'port',\n  priority: 123,\n  protocol: 'protocol',\n  query: 'query',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddRedirectResponseProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddRedirectResponseProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const listenerCondition: elbv2.ListenerCondition;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst addRedirectResponseProps: elbv2.AddRedirectResponseProps = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  conditions: [listenerCondition],\n  host: 'host',\n  hostHeader: 'hostHeader',\n  path: 'path',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  port: 'port',\n  priority: 123,\n  protocol: 'protocol',\n  query: 'query',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 10,
        "75": 19,
        "130": 1,
        "153": 2,
        "169": 2,
        "192": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "2fe2939ff5a068b56b3c3dadca3d31c14b37bdb553d968ad0ba4ca3538977fb1"
    },
    "3c8d911d7db6923743064c0c34be4cd86260d2a7cec569039e0397a009925b5c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# listener_condition: elbv2.ListenerCondition\n\nadd_rule_props = elbv2.AddRuleProps(\n    conditions=[listener_condition],\n    host_header=\"hostHeader\",\n    path_pattern=\"pathPattern\",\n    path_patterns=[\"pathPatterns\"],\n    priority=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nListenerCondition listenerCondition;\n\nAddRuleProps addRuleProps = new AddRuleProps {\n    Conditions = new [] { listenerCondition },\n    HostHeader = \"hostHeader\",\n    PathPattern = \"pathPattern\",\n    PathPatterns = new [] { \"pathPatterns\" },\n    Priority = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nListenerCondition listenerCondition;\n\nAddRuleProps addRuleProps = AddRuleProps.builder()\n        .conditions(List.of(listenerCondition))\n        .hostHeader(\"hostHeader\")\n        .pathPattern(\"pathPattern\")\n        .pathPatterns(List.of(\"pathPatterns\"))\n        .priority(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar listenerCondition listenerCondition\n\naddRuleProps := &addRuleProps{\n\tconditions: []*listenerCondition{\n\t\tlistenerCondition,\n\t},\n\thostHeader: jsii.String(\"hostHeader\"),\n\tpathPattern: jsii.String(\"pathPattern\"),\n\tpathPatterns: []*string{\n\t\tjsii.String(\"pathPatterns\"),\n\t},\n\tpriority: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const listenerCondition: elbv2.ListenerCondition;\nconst addRuleProps: elbv2.AddRuleProps = {\n  conditions: [listenerCondition],\n  hostHeader: 'hostHeader',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  priority: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const listenerCondition: elbv2.ListenerCondition;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst addRuleProps: elbv2.AddRuleProps = {\n  conditions: [listenerCondition],\n  hostHeader: 'hostHeader',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  priority: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 4,
        "75": 13,
        "130": 1,
        "153": 2,
        "169": 2,
        "192": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "2a7dd5dc59e6d062cd8cd501c3d2d17374c1699bbe99182457d034028b82c62e"
    },
    "3b09273a3376d2b5ec1f245bd870bc49563296752cce7f2ea5050a3865367e28": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# alb: elbv2.ApplicationLoadBalancer\n\nlistener = alb.add_listener(\"Listener\", port=80)\ntarget_group = listener.add_targets(\"Fleet\", port=80)\n\ndeployment_group = codedeploy.ServerDeploymentGroup(self, \"DeploymentGroup\",\n    load_balancer=codedeploy.LoadBalancer.application(target_group)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nApplicationLoadBalancer alb;\n\nApplicationListener listener = alb.AddListener(\"Listener\", new BaseApplicationListenerProps { Port = 80 });\nApplicationTargetGroup targetGroup = listener.AddTargets(\"Fleet\", new AddApplicationTargetsProps { Port = 80 });\n\nServerDeploymentGroup deploymentGroup = new ServerDeploymentGroup(this, \"DeploymentGroup\", new ServerDeploymentGroupProps {\n    LoadBalancer = LoadBalancer.Application(targetGroup)\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nApplicationLoadBalancer alb;\n\nApplicationListener listener = alb.addListener(\"Listener\", BaseApplicationListenerProps.builder().port(80).build());\nApplicationTargetGroup targetGroup = listener.addTargets(\"Fleet\", AddApplicationTargetsProps.builder().port(80).build());\n\nServerDeploymentGroup deploymentGroup = ServerDeploymentGroup.Builder.create(this, \"DeploymentGroup\")\n        .loadBalancer(LoadBalancer.application(targetGroup))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar alb applicationLoadBalancer\n\nlistener := alb.addListener(jsii.String(\"Listener\"), &baseApplicationListenerProps{\n\tport: jsii.Number(80),\n})\ntargetGroup := listener.addTargets(jsii.String(\"Fleet\"), &addApplicationTargetsProps{\n\tport: jsii.Number(80),\n})\n\ndeploymentGroup := codedeploy.NewServerDeploymentGroup(this, jsii.String(\"DeploymentGroup\"), &serverDeploymentGroupProps{\n\tloadBalancer: codedeploy.loadBalancer.application(targetGroup),\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const alb: elbv2.ApplicationLoadBalancer;\nconst listener = alb.addListener('Listener', { port: 80 });\nconst targetGroup = listener.addTargets('Fleet', { port: 80 });\n\nconst deploymentGroup = new codedeploy.ServerDeploymentGroup(this, 'DeploymentGroup', {\n  loadBalancer: codedeploy.LoadBalancer.application(targetGroup),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codedeploy.LoadBalancer",
        "@aws-cdk/aws-codedeploy.LoadBalancer#application",
        "@aws-cdk/aws-codedeploy.ServerDeploymentGroup",
        "@aws-cdk/aws-codedeploy.ServerDeploymentGroupProps",
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const alb: elbv2.ApplicationLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst listener = alb.addListener('Listener', { port: 80 });\nconst targetGroup = listener.addTargets('Fleet', { port: 80 });\n\nconst deploymentGroup = new codedeploy.ServerDeploymentGroup(this, 'DeploymentGroup', {\n  loadBalancer: codedeploy.LoadBalancer.application(targetGroup),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 4,
        "75": 20,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 5,
        "196": 3,
        "197": 1,
        "225": 4,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "42fc2242e3665ba068603046e0f8e8e45705f70d8cb0008dd892d2494e70f901"
    },
    "f16a9e27650404d84b2edd34612aacb564f5f4d217fbac72c1a44c7c26d4591b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# security_group: ec2.SecurityGroup\n\napplication_listener_attributes = elbv2.ApplicationListenerAttributes(\n    listener_arn=\"listenerArn\",\n\n    # the properties below are optional\n    default_port=123,\n    security_group=security_group,\n    security_group_allows_all_outbound=False,\n    security_group_id=\"securityGroupId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nSecurityGroup securityGroup;\n\nApplicationListenerAttributes applicationListenerAttributes = new ApplicationListenerAttributes {\n    ListenerArn = \"listenerArn\",\n\n    // the properties below are optional\n    DefaultPort = 123,\n    SecurityGroup = securityGroup,\n    SecurityGroupAllowsAllOutbound = false,\n    SecurityGroupId = \"securityGroupId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nSecurityGroup securityGroup;\n\nApplicationListenerAttributes applicationListenerAttributes = ApplicationListenerAttributes.builder()\n        .listenerArn(\"listenerArn\")\n\n        // the properties below are optional\n        .defaultPort(123)\n        .securityGroup(securityGroup)\n        .securityGroupAllowsAllOutbound(false)\n        .securityGroupId(\"securityGroupId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar securityGroup securityGroup\n\napplicationListenerAttributes := &applicationListenerAttributes{\n\tlistenerArn: jsii.String(\"listenerArn\"),\n\n\t// the properties below are optional\n\tdefaultPort: jsii.Number(123),\n\tsecurityGroup: securityGroup,\n\tsecurityGroupAllowsAllOutbound: jsii.Boolean(false),\n\tsecurityGroupId: jsii.String(\"securityGroupId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const securityGroup: ec2.SecurityGroup;\nconst applicationListenerAttributes: elbv2.ApplicationListenerAttributes = {\n  listenerArn: 'listenerArn',\n\n  // the properties below are optional\n  defaultPort: 123,\n  securityGroup: securityGroup,\n  securityGroupAllowsAllOutbound: false,\n  securityGroupId: 'securityGroupId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.ISecurityGroup",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerAttributes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const securityGroup: ec2.SecurityGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applicationListenerAttributes: elbv2.ApplicationListenerAttributes = {\n  listenerArn: 'listenerArn',\n\n  // the properties below are optional\n  defaultPort: 123,\n  securityGroup: securityGroup,\n  securityGroupAllowsAllOutbound: false,\n  securityGroupId: 'securityGroupId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 4,
        "75": 14,
        "91": 1,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "170fe34e67318bf42afeab709a17216a228aa99ff81d26d9b4e2476462bd36ab"
    },
    "422834b4abdc5976dad97cfd3fbc33ae72123af7e77d07625db8ca3964a2a262": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# application_listener: elbv2.ApplicationListener\n# listener_certificate: elbv2.ListenerCertificate\n\napplication_listener_certificate = elbv2.ApplicationListenerCertificate(self, \"MyApplicationListenerCertificate\",\n    listener=application_listener,\n\n    # the properties below are optional\n    certificate_arns=[\"certificateArns\"],\n    certificates=[listener_certificate]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nApplicationListener applicationListener;\nListenerCertificate listenerCertificate;\n\nApplicationListenerCertificate applicationListenerCertificate = new ApplicationListenerCertificate(this, \"MyApplicationListenerCertificate\", new ApplicationListenerCertificateProps {\n    Listener = applicationListener,\n\n    // the properties below are optional\n    CertificateArns = new [] { \"certificateArns\" },\n    Certificates = new [] { listenerCertificate }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nApplicationListener applicationListener;\nListenerCertificate listenerCertificate;\n\nApplicationListenerCertificate applicationListenerCertificate = ApplicationListenerCertificate.Builder.create(this, \"MyApplicationListenerCertificate\")\n        .listener(applicationListener)\n\n        // the properties below are optional\n        .certificateArns(List.of(\"certificateArns\"))\n        .certificates(List.of(listenerCertificate))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar applicationListener applicationListener\nvar listenerCertificate listenerCertificate\n\napplicationListenerCertificate := elbv2.NewApplicationListenerCertificate(this, jsii.String(\"MyApplicationListenerCertificate\"), &applicationListenerCertificateProps{\n\tlistener: applicationListener,\n\n\t// the properties below are optional\n\tcertificateArns: []*string{\n\t\tjsii.String(\"certificateArns\"),\n\t},\n\tcertificates: []iListenerCertificate{\n\t\tlistenerCertificate,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationListener: elbv2.ApplicationListener;\ndeclare const listenerCertificate: elbv2.ListenerCertificate;\nconst applicationListenerCertificate = new elbv2.ApplicationListenerCertificate(this, 'MyApplicationListenerCertificate', {\n  listener: applicationListener,\n\n  // the properties below are optional\n  certificateArns: ['certificateArns'],\n  certificates: [listenerCertificate],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerCertificate"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerCertificate",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerCertificateProps",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationListener: elbv2.ApplicationListener;\ndeclare const listenerCertificate: elbv2.ListenerCertificate;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applicationListenerCertificate = new elbv2.ApplicationListenerCertificate(this, 'MyApplicationListenerCertificate', {\n  listener: applicationListener,\n\n  // the properties below are optional\n  certificateArns: ['certificateArns'],\n  certificates: [listenerCertificate],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 15,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 2,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "ebe434e4d2e3df16f43915a182eda552033de343fc2449e15a5a108c4008c6b8"
    },
    "3144a408122aea21669aca469841110731757eadaed47a99cd9083da3457cbb6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# application_listener: elbv2.ApplicationListener\n# listener_certificate: elbv2.ListenerCertificate\n\napplication_listener_certificate_props = elbv2.ApplicationListenerCertificateProps(\n    listener=application_listener,\n\n    # the properties below are optional\n    certificate_arns=[\"certificateArns\"],\n    certificates=[listener_certificate]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nApplicationListener applicationListener;\nListenerCertificate listenerCertificate;\n\nApplicationListenerCertificateProps applicationListenerCertificateProps = new ApplicationListenerCertificateProps {\n    Listener = applicationListener,\n\n    // the properties below are optional\n    CertificateArns = new [] { \"certificateArns\" },\n    Certificates = new [] { listenerCertificate }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nApplicationListener applicationListener;\nListenerCertificate listenerCertificate;\n\nApplicationListenerCertificateProps applicationListenerCertificateProps = ApplicationListenerCertificateProps.builder()\n        .listener(applicationListener)\n\n        // the properties below are optional\n        .certificateArns(List.of(\"certificateArns\"))\n        .certificates(List.of(listenerCertificate))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar applicationListener applicationListener\nvar listenerCertificate listenerCertificate\n\napplicationListenerCertificateProps := &applicationListenerCertificateProps{\n\tlistener: applicationListener,\n\n\t// the properties below are optional\n\tcertificateArns: []*string{\n\t\tjsii.String(\"certificateArns\"),\n\t},\n\tcertificates: []iListenerCertificate{\n\t\tlistenerCertificate,\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationListener: elbv2.ApplicationListener;\ndeclare const listenerCertificate: elbv2.ListenerCertificate;\nconst applicationListenerCertificateProps: elbv2.ApplicationListenerCertificateProps = {\n  listener: applicationListener,\n\n  // the properties below are optional\n  certificateArns: ['certificateArns'],\n  certificates: [listenerCertificate],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerCertificateProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerCertificateProps",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationListener: elbv2.ApplicationListener;\ndeclare const listenerCertificate: elbv2.ListenerCertificate;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applicationListenerCertificateProps: elbv2.ApplicationListenerCertificateProps = {\n  listener: applicationListener,\n\n  // the properties below are optional\n  certificateArns: ['certificateArns'],\n  certificates: [listenerCertificate],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 15,
        "130": 2,
        "153": 3,
        "169": 3,
        "192": 2,
        "193": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "cdf6430113a889a0e44c8a8df72e5d8ef84d9f9e3fe9102083fb5e9460188414"
    },
    "cd4e52e51b6eeeda0df083fd354def09a74fc08b871dce4804bf33d32949c5ee": {
      "translations": {
        "python": {
          "source": "listener = elbv2.ApplicationListener.from_lookup(self, \"ALBListener\",\n    load_balancer_arn=\"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\",\n    listener_protocol=elbv2.ApplicationProtocol.HTTPS,\n    listener_port=443\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IApplicationListener listener = ApplicationListener.FromLookup(this, \"ALBListener\", new ApplicationListenerLookupOptions {\n    LoadBalancerArn = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\",\n    ListenerProtocol = ApplicationProtocol.HTTPS,\n    ListenerPort = 443\n});",
          "version": "1"
        },
        "java": {
          "source": "IApplicationListener listener = ApplicationListener.fromLookup(this, \"ALBListener\", ApplicationListenerLookupOptions.builder()\n        .loadBalancerArn(\"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\")\n        .listenerProtocol(ApplicationProtocol.HTTPS)\n        .listenerPort(443)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "listener := elbv2.applicationListener.fromLookup(this, jsii.String(\"ALBListener\"), &applicationListenerLookupOptions{\n\tloadBalancerArn: jsii.String(\"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\"),\n\tlistenerProtocol: elbv2.applicationProtocol_HTTPS,\n\tlistenerPort: jsii.Number(443),\n})",
          "version": "1"
        },
        "$": {
          "source": "const listener = elbv2.ApplicationListener.fromLookup(this, 'ALBListener', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456',\n  listenerProtocol: elbv2.ApplicationProtocol.HTTPS,\n  listenerPort: 443,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerLookupOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#fromLookup",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerLookupOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol#HTTPS",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst listener = elbv2.ApplicationListener.fromLookup(this, 'ALBListener', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456',\n  listenerProtocol: elbv2.ApplicationProtocol.HTTPS,\n  listenerPort: 443,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 10,
        "104": 1,
        "193": 1,
        "194": 4,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "d27efd30deafbc5f63ba018b2ddfca1dc69ed5b3936c63df0734e8c2afb32c40"
    },
    "2ad8187ec02d3ae877dbec6d93cb74d859b98d1ae4831b31fdd9e3e7eb09b5a4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# application_load_balancer: elbv2.ApplicationLoadBalancer\n# application_target_group: elbv2.ApplicationTargetGroup\n# listener_action: elbv2.ListenerAction\n# listener_certificate: elbv2.ListenerCertificate\n\napplication_listener_props = elbv2.ApplicationListenerProps(\n    load_balancer=application_load_balancer,\n\n    # the properties below are optional\n    certificate_arns=[\"certificateArns\"],\n    certificates=[listener_certificate],\n    default_action=listener_action,\n    default_target_groups=[application_target_group],\n    open=False,\n    port=123,\n    protocol=elbv2.ApplicationProtocol.HTTP,\n    ssl_policy=elbv2.SslPolicy.RECOMMENDED\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nApplicationLoadBalancer applicationLoadBalancer;\nApplicationTargetGroup applicationTargetGroup;\nListenerAction listenerAction;\nListenerCertificate listenerCertificate;\n\nApplicationListenerProps applicationListenerProps = new ApplicationListenerProps {\n    LoadBalancer = applicationLoadBalancer,\n\n    // the properties below are optional\n    CertificateArns = new [] { \"certificateArns\" },\n    Certificates = new [] { listenerCertificate },\n    DefaultAction = listenerAction,\n    DefaultTargetGroups = new [] { applicationTargetGroup },\n    Open = false,\n    Port = 123,\n    Protocol = ApplicationProtocol.HTTP,\n    SslPolicy = SslPolicy.RECOMMENDED\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nApplicationLoadBalancer applicationLoadBalancer;\nApplicationTargetGroup applicationTargetGroup;\nListenerAction listenerAction;\nListenerCertificate listenerCertificate;\n\nApplicationListenerProps applicationListenerProps = ApplicationListenerProps.builder()\n        .loadBalancer(applicationLoadBalancer)\n\n        // the properties below are optional\n        .certificateArns(List.of(\"certificateArns\"))\n        .certificates(List.of(listenerCertificate))\n        .defaultAction(listenerAction)\n        .defaultTargetGroups(List.of(applicationTargetGroup))\n        .open(false)\n        .port(123)\n        .protocol(ApplicationProtocol.HTTP)\n        .sslPolicy(SslPolicy.RECOMMENDED)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar applicationLoadBalancer applicationLoadBalancer\nvar applicationTargetGroup applicationTargetGroup\nvar listenerAction listenerAction\nvar listenerCertificate listenerCertificate\n\napplicationListenerProps := &applicationListenerProps{\n\tloadBalancer: applicationLoadBalancer,\n\n\t// the properties below are optional\n\tcertificateArns: []*string{\n\t\tjsii.String(\"certificateArns\"),\n\t},\n\tcertificates: []iListenerCertificate{\n\t\tlistenerCertificate,\n\t},\n\tdefaultAction: listenerAction,\n\tdefaultTargetGroups: []iApplicationTargetGroup{\n\t\tapplicationTargetGroup,\n\t},\n\topen: jsii.Boolean(false),\n\tport: jsii.Number(123),\n\tprotocol: elbv2.applicationProtocol_HTTP,\n\tsslPolicy: elbv2.sslPolicy_RECOMMENDED,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationLoadBalancer: elbv2.ApplicationLoadBalancer;\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\ndeclare const listenerAction: elbv2.ListenerAction;\ndeclare const listenerCertificate: elbv2.ListenerCertificate;\nconst applicationListenerProps: elbv2.ApplicationListenerProps = {\n  loadBalancer: applicationLoadBalancer,\n\n  // the properties below are optional\n  certificateArns: ['certificateArns'],\n  certificates: [listenerCertificate],\n  defaultAction: listenerAction,\n  defaultTargetGroups: [applicationTargetGroup],\n  open: false,\n  port: 123,\n  protocol: elbv2.ApplicationProtocol.HTTP,\n  sslPolicy: elbv2.SslPolicy.RECOMMENDED,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol#HTTP",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction",
        "@aws-cdk/aws-elasticloadbalancingv2.SslPolicy",
        "@aws-cdk/aws-elasticloadbalancingv2.SslPolicy#RECOMMENDED"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationLoadBalancer: elbv2.ApplicationLoadBalancer;\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\ndeclare const listenerAction: elbv2.ListenerAction;\ndeclare const listenerCertificate: elbv2.ListenerCertificate;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applicationListenerProps: elbv2.ApplicationListenerProps = {\n  loadBalancer: applicationLoadBalancer,\n\n  // the properties below are optional\n  certificateArns: ['certificateArns'],\n  certificates: [listenerCertificate],\n  defaultAction: listenerAction,\n  defaultTargetGroups: [applicationTargetGroup],\n  open: false,\n  port: 123,\n  protocol: elbv2.ApplicationProtocol.HTTP,\n  sslPolicy: elbv2.SslPolicy.RECOMMENDED,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 35,
        "91": 1,
        "130": 4,
        "153": 5,
        "169": 5,
        "192": 3,
        "193": 1,
        "194": 4,
        "225": 5,
        "242": 5,
        "243": 5,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "d2293ff5831e2e0fc0152c411a7da33758ffa0b43569341a77c220e26b02b08f"
    },
    "a769f0ac38427d59d8ec67d99b95db1d708e644f847ae062f73da3454e3e92ee": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# application_listener: elbv2.ApplicationListener\n# application_target_group: elbv2.ApplicationTargetGroup\n# listener_action: elbv2.ListenerAction\n# listener_condition: elbv2.ListenerCondition\n\napplication_listener_rule = elbv2.ApplicationListenerRule(self, \"MyApplicationListenerRule\",\n    listener=application_listener,\n    priority=123,\n\n    # the properties below are optional\n    action=listener_action,\n    conditions=[listener_condition],\n    fixed_response=elbv2.FixedResponse(\n        status_code=\"statusCode\",\n\n        # the properties below are optional\n        content_type=elbv2.ContentType.TEXT_PLAIN,\n        message_body=\"messageBody\"\n    ),\n    host_header=\"hostHeader\",\n    path_pattern=\"pathPattern\",\n    path_patterns=[\"pathPatterns\"],\n    redirect_response=elbv2.RedirectResponse(\n        status_code=\"statusCode\",\n\n        # the properties below are optional\n        host=\"host\",\n        path=\"path\",\n        port=\"port\",\n        protocol=\"protocol\",\n        query=\"query\"\n    ),\n    target_groups=[application_target_group]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nApplicationListener applicationListener;\nApplicationTargetGroup applicationTargetGroup;\nListenerAction listenerAction;\nListenerCondition listenerCondition;\n\nApplicationListenerRule applicationListenerRule = new ApplicationListenerRule(this, \"MyApplicationListenerRule\", new ApplicationListenerRuleProps {\n    Listener = applicationListener,\n    Priority = 123,\n\n    // the properties below are optional\n    Action = listenerAction,\n    Conditions = new [] { listenerCondition },\n    FixedResponse = new FixedResponse {\n        StatusCode = \"statusCode\",\n\n        // the properties below are optional\n        ContentType = ContentType.TEXT_PLAIN,\n        MessageBody = \"messageBody\"\n    },\n    HostHeader = \"hostHeader\",\n    PathPattern = \"pathPattern\",\n    PathPatterns = new [] { \"pathPatterns\" },\n    RedirectResponse = new RedirectResponse {\n        StatusCode = \"statusCode\",\n\n        // the properties below are optional\n        Host = \"host\",\n        Path = \"path\",\n        Port = \"port\",\n        Protocol = \"protocol\",\n        Query = \"query\"\n    },\n    TargetGroups = new [] { applicationTargetGroup }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nApplicationListener applicationListener;\nApplicationTargetGroup applicationTargetGroup;\nListenerAction listenerAction;\nListenerCondition listenerCondition;\n\nApplicationListenerRule applicationListenerRule = ApplicationListenerRule.Builder.create(this, \"MyApplicationListenerRule\")\n        .listener(applicationListener)\n        .priority(123)\n\n        // the properties below are optional\n        .action(listenerAction)\n        .conditions(List.of(listenerCondition))\n        .fixedResponse(FixedResponse.builder()\n                .statusCode(\"statusCode\")\n\n                // the properties below are optional\n                .contentType(ContentType.TEXT_PLAIN)\n                .messageBody(\"messageBody\")\n                .build())\n        .hostHeader(\"hostHeader\")\n        .pathPattern(\"pathPattern\")\n        .pathPatterns(List.of(\"pathPatterns\"))\n        .redirectResponse(RedirectResponse.builder()\n                .statusCode(\"statusCode\")\n\n                // the properties below are optional\n                .host(\"host\")\n                .path(\"path\")\n                .port(\"port\")\n                .protocol(\"protocol\")\n                .query(\"query\")\n                .build())\n        .targetGroups(List.of(applicationTargetGroup))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar applicationListener applicationListener\nvar applicationTargetGroup applicationTargetGroup\nvar listenerAction listenerAction\nvar listenerCondition listenerCondition\n\napplicationListenerRule := elbv2.NewApplicationListenerRule(this, jsii.String(\"MyApplicationListenerRule\"), &applicationListenerRuleProps{\n\tlistener: applicationListener,\n\tpriority: jsii.Number(123),\n\n\t// the properties below are optional\n\taction: listenerAction,\n\tconditions: []*listenerCondition{\n\t\tlistenerCondition,\n\t},\n\tfixedResponse: &fixedResponse{\n\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t// the properties below are optional\n\t\tcontentType: elbv2.contentType_TEXT_PLAIN,\n\t\tmessageBody: jsii.String(\"messageBody\"),\n\t},\n\thostHeader: jsii.String(\"hostHeader\"),\n\tpathPattern: jsii.String(\"pathPattern\"),\n\tpathPatterns: []*string{\n\t\tjsii.String(\"pathPatterns\"),\n\t},\n\tredirectResponse: &redirectResponse{\n\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t// the properties below are optional\n\t\thost: jsii.String(\"host\"),\n\t\tpath: jsii.String(\"path\"),\n\t\tport: jsii.String(\"port\"),\n\t\tprotocol: jsii.String(\"protocol\"),\n\t\tquery: jsii.String(\"query\"),\n\t},\n\ttargetGroups: []iApplicationTargetGroup{\n\t\tapplicationTargetGroup,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationListener: elbv2.ApplicationListener;\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\ndeclare const listenerAction: elbv2.ListenerAction;\ndeclare const listenerCondition: elbv2.ListenerCondition;\nconst applicationListenerRule = new elbv2.ApplicationListenerRule(this, 'MyApplicationListenerRule', {\n  listener: applicationListener,\n  priority: 123,\n\n  // the properties below are optional\n  action: listenerAction,\n  conditions: [listenerCondition],\n  fixedResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'messageBody',\n  },\n  hostHeader: 'hostHeader',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  redirectResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    host: 'host',\n    path: 'path',\n    port: 'port',\n    protocol: 'protocol',\n    query: 'query',\n  },\n  targetGroups: [applicationTargetGroup],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerRule"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerRule",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerRuleProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType#TEXT_PLAIN",
        "@aws-cdk/aws-elasticloadbalancingv2.FixedResponse",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction",
        "@aws-cdk/aws-elasticloadbalancingv2.RedirectResponse",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationListener: elbv2.ApplicationListener;\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\ndeclare const listenerAction: elbv2.ListenerAction;\ndeclare const listenerCondition: elbv2.ListenerCondition;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applicationListenerRule = new elbv2.ApplicationListenerRule(this, 'MyApplicationListenerRule', {\n  listener: applicationListener,\n  priority: 123,\n\n  // the properties below are optional\n  action: listenerAction,\n  conditions: [listenerCondition],\n  fixedResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'messageBody',\n  },\n  hostHeader: 'hostHeader',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  redirectResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    host: 'host',\n    path: 'path',\n    port: 'port',\n    protocol: 'protocol',\n    query: 'query',\n  },\n  targetGroups: [applicationTargetGroup],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 13,
        "75": 42,
        "104": 1,
        "130": 4,
        "153": 4,
        "169": 4,
        "192": 3,
        "193": 3,
        "194": 3,
        "197": 1,
        "225": 5,
        "242": 5,
        "243": 5,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 19,
        "290": 1
      },
      "fqnsFingerprint": "6dbfa5513f98a12f901bc8516a3bb2bde1e3160f823fc4e10d2670b12d246c48"
    },
    "221e556119ff1f0a07aa613acce515df245e1990120f79c89183c705c9284284": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# application_listener: elbv2.ApplicationListener\n# application_target_group: elbv2.ApplicationTargetGroup\n# listener_action: elbv2.ListenerAction\n# listener_condition: elbv2.ListenerCondition\n\napplication_listener_rule_props = elbv2.ApplicationListenerRuleProps(\n    listener=application_listener,\n    priority=123,\n\n    # the properties below are optional\n    action=listener_action,\n    conditions=[listener_condition],\n    fixed_response=elbv2.FixedResponse(\n        status_code=\"statusCode\",\n\n        # the properties below are optional\n        content_type=elbv2.ContentType.TEXT_PLAIN,\n        message_body=\"messageBody\"\n    ),\n    host_header=\"hostHeader\",\n    path_pattern=\"pathPattern\",\n    path_patterns=[\"pathPatterns\"],\n    redirect_response=elbv2.RedirectResponse(\n        status_code=\"statusCode\",\n\n        # the properties below are optional\n        host=\"host\",\n        path=\"path\",\n        port=\"port\",\n        protocol=\"protocol\",\n        query=\"query\"\n    ),\n    target_groups=[application_target_group]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nApplicationListener applicationListener;\nApplicationTargetGroup applicationTargetGroup;\nListenerAction listenerAction;\nListenerCondition listenerCondition;\n\nApplicationListenerRuleProps applicationListenerRuleProps = new ApplicationListenerRuleProps {\n    Listener = applicationListener,\n    Priority = 123,\n\n    // the properties below are optional\n    Action = listenerAction,\n    Conditions = new [] { listenerCondition },\n    FixedResponse = new FixedResponse {\n        StatusCode = \"statusCode\",\n\n        // the properties below are optional\n        ContentType = ContentType.TEXT_PLAIN,\n        MessageBody = \"messageBody\"\n    },\n    HostHeader = \"hostHeader\",\n    PathPattern = \"pathPattern\",\n    PathPatterns = new [] { \"pathPatterns\" },\n    RedirectResponse = new RedirectResponse {\n        StatusCode = \"statusCode\",\n\n        // the properties below are optional\n        Host = \"host\",\n        Path = \"path\",\n        Port = \"port\",\n        Protocol = \"protocol\",\n        Query = \"query\"\n    },\n    TargetGroups = new [] { applicationTargetGroup }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nApplicationListener applicationListener;\nApplicationTargetGroup applicationTargetGroup;\nListenerAction listenerAction;\nListenerCondition listenerCondition;\n\nApplicationListenerRuleProps applicationListenerRuleProps = ApplicationListenerRuleProps.builder()\n        .listener(applicationListener)\n        .priority(123)\n\n        // the properties below are optional\n        .action(listenerAction)\n        .conditions(List.of(listenerCondition))\n        .fixedResponse(FixedResponse.builder()\n                .statusCode(\"statusCode\")\n\n                // the properties below are optional\n                .contentType(ContentType.TEXT_PLAIN)\n                .messageBody(\"messageBody\")\n                .build())\n        .hostHeader(\"hostHeader\")\n        .pathPattern(\"pathPattern\")\n        .pathPatterns(List.of(\"pathPatterns\"))\n        .redirectResponse(RedirectResponse.builder()\n                .statusCode(\"statusCode\")\n\n                // the properties below are optional\n                .host(\"host\")\n                .path(\"path\")\n                .port(\"port\")\n                .protocol(\"protocol\")\n                .query(\"query\")\n                .build())\n        .targetGroups(List.of(applicationTargetGroup))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar applicationListener applicationListener\nvar applicationTargetGroup applicationTargetGroup\nvar listenerAction listenerAction\nvar listenerCondition listenerCondition\n\napplicationListenerRuleProps := &applicationListenerRuleProps{\n\tlistener: applicationListener,\n\tpriority: jsii.Number(123),\n\n\t// the properties below are optional\n\taction: listenerAction,\n\tconditions: []*listenerCondition{\n\t\tlistenerCondition,\n\t},\n\tfixedResponse: &fixedResponse{\n\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t// the properties below are optional\n\t\tcontentType: elbv2.contentType_TEXT_PLAIN,\n\t\tmessageBody: jsii.String(\"messageBody\"),\n\t},\n\thostHeader: jsii.String(\"hostHeader\"),\n\tpathPattern: jsii.String(\"pathPattern\"),\n\tpathPatterns: []*string{\n\t\tjsii.String(\"pathPatterns\"),\n\t},\n\tredirectResponse: &redirectResponse{\n\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t// the properties below are optional\n\t\thost: jsii.String(\"host\"),\n\t\tpath: jsii.String(\"path\"),\n\t\tport: jsii.String(\"port\"),\n\t\tprotocol: jsii.String(\"protocol\"),\n\t\tquery: jsii.String(\"query\"),\n\t},\n\ttargetGroups: []iApplicationTargetGroup{\n\t\tapplicationTargetGroup,\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationListener: elbv2.ApplicationListener;\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\ndeclare const listenerAction: elbv2.ListenerAction;\ndeclare const listenerCondition: elbv2.ListenerCondition;\nconst applicationListenerRuleProps: elbv2.ApplicationListenerRuleProps = {\n  listener: applicationListener,\n  priority: 123,\n\n  // the properties below are optional\n  action: listenerAction,\n  conditions: [listenerCondition],\n  fixedResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'messageBody',\n  },\n  hostHeader: 'hostHeader',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  redirectResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    host: 'host',\n    path: 'path',\n    port: 'port',\n    protocol: 'protocol',\n    query: 'query',\n  },\n  targetGroups: [applicationTargetGroup],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerRuleProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerRuleProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType#TEXT_PLAIN",
        "@aws-cdk/aws-elasticloadbalancingv2.FixedResponse",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction",
        "@aws-cdk/aws-elasticloadbalancingv2.RedirectResponse"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationListener: elbv2.ApplicationListener;\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\ndeclare const listenerAction: elbv2.ListenerAction;\ndeclare const listenerCondition: elbv2.ListenerCondition;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applicationListenerRuleProps: elbv2.ApplicationListenerRuleProps = {\n  listener: applicationListener,\n  priority: 123,\n\n  // the properties below are optional\n  action: listenerAction,\n  conditions: [listenerCondition],\n  fixedResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'messageBody',\n  },\n  hostHeader: 'hostHeader',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  redirectResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    host: 'host',\n    path: 'path',\n    port: 'port',\n    protocol: 'protocol',\n    query: 'query',\n  },\n  targetGroups: [applicationTargetGroup],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 12,
        "75": 42,
        "130": 4,
        "153": 5,
        "169": 5,
        "192": 3,
        "193": 3,
        "194": 2,
        "225": 5,
        "242": 5,
        "243": 5,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 19,
        "290": 1
      },
      "fqnsFingerprint": "e001365f58ff6018d1e2bcbf16ebd6d79f219d99508afef846bb40f8e2737c91"
    },
    "d18f923a795c960e88d4cd2768e70ca8d7bbebba14453a2b42d92106cbacf57c": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations import HttpAlbIntegration\n\n\nvpc = ec2.Vpc(self, \"VPC\")\nlb = elbv2.ApplicationLoadBalancer(self, \"lb\", vpc=vpc)\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpAlbIntegration(\"DefaultIntegration\", listener)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nApplicationLoadBalancer lb = new ApplicationLoadBalancer(this, \"lb\", new ApplicationLoadBalancerProps { Vpc = vpc });\nApplicationListener listener = lb.AddListener(\"listener\", new BaseApplicationListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddApplicationTargetsProps {\n    Port = 80\n});\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpAlbIntegration(\"DefaultIntegration\", listener)\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.HttpAlbIntegration;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nApplicationLoadBalancer lb = ApplicationLoadBalancer.Builder.create(this, \"lb\").vpc(vpc).build();\nApplicationListener listener = lb.addListener(\"listener\", BaseApplicationListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddApplicationTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(new HttpAlbIntegration(\"DefaultIntegration\", listener))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\n\nvpc := ec2.NewVpc(this, jsii.String(\"VPC\"))\nlb := elbv2.NewApplicationLoadBalancer(this, jsii.String(\"lb\"), &applicationLoadBalancerProps{\n\tvpc: vpc,\n})\nlistener := lb.addListener(jsii.String(\"listener\"), &baseApplicationListenerProps{\n\tport: jsii.Number(80),\n})\nlistener.addTargets(jsii.String(\"target\"), &addApplicationTargetsProps{\n\tport: jsii.Number(80),\n})\n\nhttpEndpoint := apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyPrivateApi\"), &httpApiProps{\n\tdefaultIntegration: *awscdkawsapigatewayv2integrations.NewHttpAlbIntegration(jsii.String(\"DefaultIntegration\"), listener),\n})",
          "version": "1"
        },
        "$": {
          "source": "import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegration",
        "@aws-cdk/aws-apigatewayv2.HttpApi",
        "@aws-cdk/aws-apigatewayv2.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.Vpc",
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 7,
        "75": 21,
        "104": 3,
        "193": 4,
        "194": 5,
        "196": 2,
        "197": 4,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "7f3d8bd6cf754c660ff9e689c1438efd1ca7f8dd158b79ebb34427cc4d9ef862"
    },
    "f67282d4d39410372338c324bdb8a0b4d9a59ae4f2162b636e692bfa39e9c218": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# vpc: ec2.Vpc\n\napplication_load_balancer_attributes = elbv2.ApplicationLoadBalancerAttributes(\n    load_balancer_arn=\"loadBalancerArn\",\n    security_group_id=\"securityGroupId\",\n\n    # the properties below are optional\n    load_balancer_canonical_hosted_zone_id=\"loadBalancerCanonicalHostedZoneId\",\n    load_balancer_dns_name=\"loadBalancerDnsName\",\n    security_group_allows_all_outbound=False,\n    vpc=vpc\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nVpc vpc;\n\nApplicationLoadBalancerAttributes applicationLoadBalancerAttributes = new ApplicationLoadBalancerAttributes {\n    LoadBalancerArn = \"loadBalancerArn\",\n    SecurityGroupId = \"securityGroupId\",\n\n    // the properties below are optional\n    LoadBalancerCanonicalHostedZoneId = \"loadBalancerCanonicalHostedZoneId\",\n    LoadBalancerDnsName = \"loadBalancerDnsName\",\n    SecurityGroupAllowsAllOutbound = false,\n    Vpc = vpc\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nVpc vpc;\n\nApplicationLoadBalancerAttributes applicationLoadBalancerAttributes = ApplicationLoadBalancerAttributes.builder()\n        .loadBalancerArn(\"loadBalancerArn\")\n        .securityGroupId(\"securityGroupId\")\n\n        // the properties below are optional\n        .loadBalancerCanonicalHostedZoneId(\"loadBalancerCanonicalHostedZoneId\")\n        .loadBalancerDnsName(\"loadBalancerDnsName\")\n        .securityGroupAllowsAllOutbound(false)\n        .vpc(vpc)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar vpc vpc\n\napplicationLoadBalancerAttributes := &applicationLoadBalancerAttributes{\n\tloadBalancerArn: jsii.String(\"loadBalancerArn\"),\n\tsecurityGroupId: jsii.String(\"securityGroupId\"),\n\n\t// the properties below are optional\n\tloadBalancerCanonicalHostedZoneId: jsii.String(\"loadBalancerCanonicalHostedZoneId\"),\n\tloadBalancerDnsName: jsii.String(\"loadBalancerDnsName\"),\n\tsecurityGroupAllowsAllOutbound: jsii.Boolean(false),\n\tvpc: vpc,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const vpc: ec2.Vpc;\nconst applicationLoadBalancerAttributes: elbv2.ApplicationLoadBalancerAttributes = {\n  loadBalancerArn: 'loadBalancerArn',\n  securityGroupId: 'securityGroupId',\n\n  // the properties below are optional\n  loadBalancerCanonicalHostedZoneId: 'loadBalancerCanonicalHostedZoneId',\n  loadBalancerDnsName: 'loadBalancerDnsName',\n  securityGroupAllowsAllOutbound: false,\n  vpc: vpc,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerAttributes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applicationLoadBalancerAttributes: elbv2.ApplicationLoadBalancerAttributes = {\n  loadBalancerArn: 'loadBalancerArn',\n  securityGroupId: 'securityGroupId',\n\n  // the properties below are optional\n  loadBalancerCanonicalHostedZoneId: 'loadBalancerCanonicalHostedZoneId',\n  loadBalancerDnsName: 'loadBalancerDnsName',\n  securityGroupAllowsAllOutbound: false,\n  vpc: vpc,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 15,
        "91": 1,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "4aef9f2b558babad4040f85df0a5e51d632f77e2ea874da18cc9753d61ef801c"
    },
    "ec5f7757de81b0789ae2fe68fbb8dbd9d480a182992906676610a045888b3ba3": {
      "translations": {
        "python": {
          "source": "load_balancer = elbv2.ApplicationLoadBalancer.from_lookup(self, \"ALB\",\n    load_balancer_arn=\"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IApplicationLoadBalancer loadBalancer = ApplicationLoadBalancer.FromLookup(this, \"ALB\", new ApplicationLoadBalancerLookupOptions {\n    LoadBalancerArn = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\"\n});",
          "version": "1"
        },
        "java": {
          "source": "IApplicationLoadBalancer loadBalancer = ApplicationLoadBalancer.fromLookup(this, \"ALB\", ApplicationLoadBalancerLookupOptions.builder()\n        .loadBalancerArn(\"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\")\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "loadBalancer := elbv2.applicationLoadBalancer.fromLookup(this, jsii.String(\"ALB\"), &applicationLoadBalancerLookupOptions{\n\tloadBalancerArn: jsii.String(\"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "const loadBalancer = elbv2.ApplicationLoadBalancer.fromLookup(this, 'ALB', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerLookupOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#fromLookup",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerLookupOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst loadBalancer = elbv2.ApplicationLoadBalancer.fromLookup(this, 'ALB', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 5,
        "104": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "641d332403f71c50f8336dafba17c3c7ce760aa2753c85d20d649e2d94d55e18"
    },
    "375c67dae7dac9135dcdbbd33d2cacc04b09494928d4ea50ad58d0d09843aa9d": {
      "translations": {
        "python": {
          "source": "# cluster: ecs.Cluster\n# task_definition: ecs.TaskDefinition\n# vpc: ec2.Vpc\n\nservice = ecs.FargateService(self, \"Service\", cluster=cluster, task_definition=task_definition)\n\nlb = elbv2.ApplicationLoadBalancer(self, \"LB\", vpc=vpc, internet_facing=True)\nlistener = lb.add_listener(\"Listener\", port=80)\nservice.register_load_balancer_targets(\n    container_name=\"web\",\n    container_port=80,\n    new_target_group_id=\"ECS\",\n    listener=ecs.ListenerConfig.application_listener(listener,\n        protocol=elbv2.ApplicationProtocol.HTTPS\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Cluster cluster;\nTaskDefinition taskDefinition;\nVpc vpc;\n\nFargateService service = new FargateService(this, \"Service\", new FargateServiceProps { Cluster = cluster, TaskDefinition = taskDefinition });\n\nApplicationLoadBalancer lb = new ApplicationLoadBalancer(this, \"LB\", new ApplicationLoadBalancerProps { Vpc = vpc, InternetFacing = true });\nApplicationListener listener = lb.AddListener(\"Listener\", new BaseApplicationListenerProps { Port = 80 });\nservice.RegisterLoadBalancerTargets(new EcsTarget {\n    ContainerName = \"web\",\n    ContainerPort = 80,\n    NewTargetGroupId = \"ECS\",\n    Listener = ListenerConfig.ApplicationListener(listener, new AddApplicationTargetsProps {\n        Protocol = ApplicationProtocol.HTTPS\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "Cluster cluster;\nTaskDefinition taskDefinition;\nVpc vpc;\n\nFargateService service = FargateService.Builder.create(this, \"Service\").cluster(cluster).taskDefinition(taskDefinition).build();\n\nApplicationLoadBalancer lb = ApplicationLoadBalancer.Builder.create(this, \"LB\").vpc(vpc).internetFacing(true).build();\nApplicationListener listener = lb.addListener(\"Listener\", BaseApplicationListenerProps.builder().port(80).build());\nservice.registerLoadBalancerTargets(EcsTarget.builder()\n        .containerName(\"web\")\n        .containerPort(80)\n        .newTargetGroupId(\"ECS\")\n        .listener(ListenerConfig.applicationListener(listener, AddApplicationTargetsProps.builder()\n                .protocol(ApplicationProtocol.HTTPS)\n                .build()))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var cluster cluster\nvar taskDefinition taskDefinition\nvar vpc vpc\n\nservice := ecs.NewFargateService(this, jsii.String(\"Service\"), &fargateServiceProps{\n\tcluster: cluster,\n\ttaskDefinition: taskDefinition,\n})\n\nlb := elbv2.NewApplicationLoadBalancer(this, jsii.String(\"LB\"), &applicationLoadBalancerProps{\n\tvpc: vpc,\n\tinternetFacing: jsii.Boolean(true),\n})\nlistener := lb.addListener(jsii.String(\"Listener\"), &baseApplicationListenerProps{\n\tport: jsii.Number(80),\n})\nservice.registerLoadBalancerTargets(&ecsTarget{\n\tcontainerName: jsii.String(\"web\"),\n\tcontainerPort: jsii.Number(80),\n\tnewTargetGroupId: jsii.String(\"ECS\"),\n\tlistener: ecs.listenerConfig.applicationListener(listener, &addApplicationTargetsProps{\n\t\tprotocol: elbv2.applicationProtocol_HTTPS,\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const cluster: ecs.Cluster;\ndeclare const taskDefinition: ecs.TaskDefinition;\ndeclare const vpc: ec2.Vpc;\nconst service = new ecs.FargateService(this, 'Service', { cluster, taskDefinition });\n\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', { vpc, internetFacing: true });\nconst listener = lb.addListener('Listener', { port: 80 });\nservice.registerLoadBalancerTargets(\n  {\n    containerName: 'web',\n    containerPort: 80,\n    newTargetGroupId: 'ECS',\n    listener: ecs.ListenerConfig.applicationListener(listener, {\n      protocol: elbv2.ApplicationProtocol.HTTPS\n    }),\n  },\n);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ecs.BaseService#registerLoadBalancerTargets",
        "@aws-cdk/aws-ecs.EcsTarget",
        "@aws-cdk/aws-ecs.FargateService",
        "@aws-cdk/aws-ecs.FargateServiceProps",
        "@aws-cdk/aws-ecs.ICluster",
        "@aws-cdk/aws-ecs.ListenerConfig",
        "@aws-cdk/aws-ecs.ListenerConfig#applicationListener",
        "@aws-cdk/aws-ecs.TaskDefinition",
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol#HTTPS",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const cluster: ecs.Cluster;\ndeclare const taskDefinition: ecs.TaskDefinition;\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { SecretValue, Stack } from '@aws-cdk/core';\nimport autoscaling = require('@aws-cdk/aws-autoscaling');\nimport cloudmap = require('@aws-cdk/aws-servicediscovery');\nimport ecs = require('@aws-cdk/aws-ecs');\nimport ec2 = require('@aws-cdk/aws-ec2');\nimport elb = require('@aws-cdk/aws-elasticloadbalancing');\nimport elbv2 = require('@aws-cdk/aws-elasticloadbalancingv2');\nimport events = require('@aws-cdk/aws-events');\nimport kms = require('@aws-cdk/aws-kms');\nimport logs = require('@aws-cdk/aws-logs');\nimport s3 = require('@aws-cdk/aws-s3');\nimport secretsmanager = require('@aws-cdk/aws-secretsmanager');\nimport ssm = require('@aws-cdk/aws-ssm');\nimport targets = require('@aws-cdk/aws-events-targets');\nimport path = require('path');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst service = new ecs.FargateService(this, 'Service', { cluster, taskDefinition });\n\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', { vpc, internetFacing: true });\nconst listener = lb.addListener('Listener', { port: 80 });\nservice.registerLoadBalancerTargets(\n  {\n    containerName: 'web',\n    containerPort: 80,\n    newTargetGroupId: 'ECS',\n    listener: ecs.ListenerConfig.applicationListener(listener, {\n      protocol: elbv2.ApplicationProtocol.HTTPS\n    }),\n  },\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 5,
        "75": 37,
        "104": 2,
        "106": 1,
        "130": 3,
        "153": 3,
        "169": 3,
        "193": 5,
        "194": 8,
        "196": 3,
        "197": 2,
        "225": 6,
        "226": 1,
        "242": 6,
        "243": 6,
        "281": 7,
        "282": 3,
        "290": 1
      },
      "fqnsFingerprint": "d5502feec7c9fbe02cebb631bb65324d25f0f1e3d8e0590a77da5992e326e2cd"
    },
    "12086c2e4623f341d86448b5dfb4baea1805ebcbeee00ca422074b0d03c2c268": {
      "translations": {
        "python": {
          "source": "# lb: elbv2.ApplicationLoadBalancer\n\n\nlb.add_redirect(\n    source_protocol=elbv2.ApplicationProtocol.HTTPS,\n    source_port=8443,\n    target_protocol=elbv2.ApplicationProtocol.HTTP,\n    target_port=8080\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ApplicationLoadBalancer lb;\n\n\nlb.AddRedirect(new ApplicationLoadBalancerRedirectConfig {\n    SourceProtocol = ApplicationProtocol.HTTPS,\n    SourcePort = 8443,\n    TargetProtocol = ApplicationProtocol.HTTP,\n    TargetPort = 8080\n});",
          "version": "1"
        },
        "java": {
          "source": "ApplicationLoadBalancer lb;\n\n\nlb.addRedirect(ApplicationLoadBalancerRedirectConfig.builder()\n        .sourceProtocol(ApplicationProtocol.HTTPS)\n        .sourcePort(8443)\n        .targetProtocol(ApplicationProtocol.HTTP)\n        .targetPort(8080)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var lb applicationLoadBalancer\n\n\nlb.addRedirect(&applicationLoadBalancerRedirectConfig{\n\tsourceProtocol: elbv2.applicationProtocol_HTTPS,\n\tsourcePort: jsii.Number(8443),\n\ttargetProtocol: elbv2.*applicationProtocol_HTTP,\n\ttargetPort: jsii.Number(8080),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const lb: elbv2.ApplicationLoadBalancer;\n\nlb.addRedirect({\n  sourceProtocol: elbv2.ApplicationProtocol.HTTPS,\n  sourcePort: 8443,\n  targetProtocol: elbv2.ApplicationProtocol.HTTP,\n  targetPort: 8080,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerRedirectConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addRedirect",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerRedirectConfig",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol#HTTP",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol#HTTPS"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const lb: elbv2.ApplicationLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nlb.addRedirect({\n  sourceProtocol: elbv2.ApplicationProtocol.HTTPS,\n  sourcePort: 8443,\n  targetProtocol: elbv2.ApplicationProtocol.HTTP,\n  targetPort: 8080,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "75": 15,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 5,
        "196": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "23538472f40cbdd5f834d1ee2fcc3e53d3c9e074969264a2b4621b7447742403"
    },
    "fa8692e11f613ddfce120a65c13bb24541fa39de16eade15cc8adf54335b791b": {
      "translations": {
        "python": {
          "source": "# listener: elbv2.ApplicationListener\n# service: ecs.BaseService\n\nservice.register_load_balancer_targets(\n    container_name=\"web\",\n    container_port=80,\n    new_target_group_id=\"ECS\",\n    listener=ecs.ListenerConfig.application_listener(listener,\n        protocol=elbv2.ApplicationProtocol.HTTPS\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ApplicationListener listener;\nBaseService service;\n\nservice.RegisterLoadBalancerTargets(new EcsTarget {\n    ContainerName = \"web\",\n    ContainerPort = 80,\n    NewTargetGroupId = \"ECS\",\n    Listener = ListenerConfig.ApplicationListener(listener, new AddApplicationTargetsProps {\n        Protocol = ApplicationProtocol.HTTPS\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "ApplicationListener listener;\nBaseService service;\n\nservice.registerLoadBalancerTargets(EcsTarget.builder()\n        .containerName(\"web\")\n        .containerPort(80)\n        .newTargetGroupId(\"ECS\")\n        .listener(ListenerConfig.applicationListener(listener, AddApplicationTargetsProps.builder()\n                .protocol(ApplicationProtocol.HTTPS)\n                .build()))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var listener applicationListener\nvar service baseService\n\nservice.registerLoadBalancerTargets(&ecsTarget{\n\tcontainerName: jsii.String(\"web\"),\n\tcontainerPort: jsii.Number(80),\n\tnewTargetGroupId: jsii.String(\"ECS\"),\n\tlistener: ecs.listenerConfig.applicationListener(listener, &addApplicationTargetsProps{\n\t\tprotocol: elbv2.applicationProtocol_HTTPS,\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const listener: elbv2.ApplicationListener;\ndeclare const service: ecs.BaseService;\nservice.registerLoadBalancerTargets(\n  {\n    containerName: 'web',\n    containerPort: 80,\n    newTargetGroupId: 'ECS',\n    listener: ecs.ListenerConfig.applicationListener(listener, {\n      protocol: elbv2.ApplicationProtocol.HTTPS\n    }),\n  },\n)",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ecs.BaseService#registerLoadBalancerTargets",
        "@aws-cdk/aws-ecs.EcsTarget",
        "@aws-cdk/aws-ecs.ListenerConfig",
        "@aws-cdk/aws-ecs.ListenerConfig#applicationListener",
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol#HTTPS"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const listener: elbv2.ApplicationListener;\ndeclare const service: ecs.BaseService;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { SecretValue, Stack } from '@aws-cdk/core';\nimport autoscaling = require('@aws-cdk/aws-autoscaling');\nimport cloudmap = require('@aws-cdk/aws-servicediscovery');\nimport ecs = require('@aws-cdk/aws-ecs');\nimport ec2 = require('@aws-cdk/aws-ec2');\nimport elb = require('@aws-cdk/aws-elasticloadbalancing');\nimport elbv2 = require('@aws-cdk/aws-elasticloadbalancingv2');\nimport events = require('@aws-cdk/aws-events');\nimport kms = require('@aws-cdk/aws-kms');\nimport logs = require('@aws-cdk/aws-logs');\nimport s3 = require('@aws-cdk/aws-s3');\nimport secretsmanager = require('@aws-cdk/aws-secretsmanager');\nimport ssm = require('@aws-cdk/aws-ssm');\nimport targets = require('@aws-cdk/aws-events-targets');\nimport path = require('path');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nservice.registerLoadBalancerTargets(\n  {\n    containerName: 'web',\n    containerPort: 80,\n    newTargetGroupId: 'ECS',\n    listener: ecs.ListenerConfig.applicationListener(listener, {\n      protocol: elbv2.ApplicationProtocol.HTTPS\n    }),\n  },\n)\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 20,
        "130": 2,
        "153": 2,
        "169": 2,
        "193": 2,
        "194": 5,
        "196": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "088de07938ccef316d7a01667d64c77d15827d8c722843796b1e7ce491aac0da"
    },
    "8da15628892553d0f895bc61054f6d2518f814c9623ef97bb9aaeeb4f9c4f4de": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\n\ntg = elbv2.ApplicationTargetGroup(self, \"TG\",\n    target_type=elbv2.TargetType.IP,\n    port=50051,\n    protocol=elbv2.ApplicationProtocol.HTTP,\n    protocol_version=elbv2.ApplicationProtocolVersion.GRPC,\n    health_check=elbv2.HealthCheck(\n        enabled=True,\n        healthy_grpc_codes=\"0-99\"\n    ),\n    vpc=vpc\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\n\nApplicationTargetGroup tg = new ApplicationTargetGroup(this, \"TG\", new ApplicationTargetGroupProps {\n    TargetType = TargetType.IP,\n    Port = 50051,\n    Protocol = ApplicationProtocol.HTTP,\n    ProtocolVersion = ApplicationProtocolVersion.GRPC,\n    HealthCheck = new HealthCheck {\n        Enabled = true,\n        HealthyGrpcCodes = \"0-99\"\n    },\n    Vpc = vpc\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\n\nApplicationTargetGroup tg = ApplicationTargetGroup.Builder.create(this, \"TG\")\n        .targetType(TargetType.IP)\n        .port(50051)\n        .protocol(ApplicationProtocol.HTTP)\n        .protocolVersion(ApplicationProtocolVersion.GRPC)\n        .healthCheck(HealthCheck.builder()\n                .enabled(true)\n                .healthyGrpcCodes(\"0-99\")\n                .build())\n        .vpc(vpc)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\n\ntg := elbv2.NewApplicationTargetGroup(this, jsii.String(\"TG\"), &applicationTargetGroupProps{\n\ttargetType: elbv2.targetType_IP,\n\tport: jsii.Number(50051),\n\tprotocol: elbv2.applicationProtocol_HTTP,\n\tprotocolVersion: elbv2.applicationProtocolVersion_GRPC,\n\thealthCheck: &healthCheck{\n\t\tenabled: jsii.Boolean(true),\n\t\thealthyGrpcCodes: jsii.String(\"0-99\"),\n\t},\n\tvpc: vpc,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\n\nconst tg = new elbv2.ApplicationTargetGroup(this, 'TG', {\n  targetType: elbv2.TargetType.IP,\n  port: 50051,\n  protocol: elbv2.ApplicationProtocol.HTTP,\n  protocolVersion: elbv2.ApplicationProtocolVersion.GRPC,\n  healthCheck: {\n    enabled: true,\n    healthyGrpcCodes: '0-99',\n  },\n  vpc,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocolVersion"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol#HTTP",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocolVersion",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocolVersion#GRPC",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroupProps",
        "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType#IP",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst tg = new elbv2.ApplicationTargetGroup(this, 'TG', {\n  targetType: elbv2.TargetType.IP,\n  port: 50051,\n  protocol: elbv2.ApplicationProtocol.HTTP,\n  protocolVersion: elbv2.ApplicationProtocolVersion.GRPC,\n  healthCheck: {\n    enabled: true,\n    healthyGrpcCodes: '0-99',\n  },\n  vpc,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 23,
        "104": 1,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 7,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 7,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "1104efe41e85f5e2e16d4de9fd855d6777e3ca32c6b42806810edb3585eebee5"
    },
    "ba6f4c0b3124af1f044e9c8fa3d892cb3cba31477b04834d88b5cd62764b19a8": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\n\n# Target group with duration-based stickiness with load-balancer generated cookie\ntg1 = elbv2.ApplicationTargetGroup(self, \"TG1\",\n    target_type=elbv2.TargetType.INSTANCE,\n    port=80,\n    stickiness_cookie_duration=Duration.minutes(5),\n    vpc=vpc\n)\n\n# Target group with application-based stickiness\ntg2 = elbv2.ApplicationTargetGroup(self, \"TG2\",\n    target_type=elbv2.TargetType.INSTANCE,\n    port=80,\n    stickiness_cookie_duration=Duration.minutes(5),\n    stickiness_cookie_name=\"MyDeliciousCookie\",\n    vpc=vpc\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\n\n// Target group with duration-based stickiness with load-balancer generated cookie\nApplicationTargetGroup tg1 = new ApplicationTargetGroup(this, \"TG1\", new ApplicationTargetGroupProps {\n    TargetType = TargetType.INSTANCE,\n    Port = 80,\n    StickinessCookieDuration = Duration.Minutes(5),\n    Vpc = vpc\n});\n\n// Target group with application-based stickiness\nApplicationTargetGroup tg2 = new ApplicationTargetGroup(this, \"TG2\", new ApplicationTargetGroupProps {\n    TargetType = TargetType.INSTANCE,\n    Port = 80,\n    StickinessCookieDuration = Duration.Minutes(5),\n    StickinessCookieName = \"MyDeliciousCookie\",\n    Vpc = vpc\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\n\n// Target group with duration-based stickiness with load-balancer generated cookie\nApplicationTargetGroup tg1 = ApplicationTargetGroup.Builder.create(this, \"TG1\")\n        .targetType(TargetType.INSTANCE)\n        .port(80)\n        .stickinessCookieDuration(Duration.minutes(5))\n        .vpc(vpc)\n        .build();\n\n// Target group with application-based stickiness\nApplicationTargetGroup tg2 = ApplicationTargetGroup.Builder.create(this, \"TG2\")\n        .targetType(TargetType.INSTANCE)\n        .port(80)\n        .stickinessCookieDuration(Duration.minutes(5))\n        .stickinessCookieName(\"MyDeliciousCookie\")\n        .vpc(vpc)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\n\n// Target group with duration-based stickiness with load-balancer generated cookie\ntg1 := elbv2.NewApplicationTargetGroup(this, jsii.String(\"TG1\"), &applicationTargetGroupProps{\n\ttargetType: elbv2.targetType_INSTANCE,\n\tport: jsii.Number(80),\n\tstickinessCookieDuration: *awscdkcore.Duration.minutes(jsii.Number(5)),\n\tvpc: vpc,\n})\n\n// Target group with application-based stickiness\ntg2 := elbv2.NewApplicationTargetGroup(this, jsii.String(\"TG2\"), &applicationTargetGroupProps{\n\ttargetType: elbv2.*targetType_INSTANCE,\n\tport: jsii.Number(80),\n\tstickinessCookieDuration: *awscdkcore.Duration.minutes(jsii.Number(5)),\n\tstickinessCookieName: jsii.String(\"MyDeliciousCookie\"),\n\tvpc: vpc,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\n\n// Target group with duration-based stickiness with load-balancer generated cookie\nconst tg1 = new elbv2.ApplicationTargetGroup(this, 'TG1', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  vpc,\n});\n\n// Target group with application-based stickiness\nconst tg2 = new elbv2.ApplicationTargetGroup(this, 'TG2', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  stickinessCookieName: 'MyDeliciousCookie',\n  vpc,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroupProps",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType#INSTANCE",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// Target group with duration-based stickiness with load-balancer generated cookie\nconst tg1 = new elbv2.ApplicationTargetGroup(this, 'TG1', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  vpc,\n});\n\n// Target group with application-based stickiness\nconst tg2 = new elbv2.ApplicationTargetGroup(this, 'TG2', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  stickinessCookieName: 'MyDeliciousCookie',\n  vpc,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 3,
        "75": 28,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 8,
        "196": 2,
        "197": 2,
        "225": 3,
        "242": 3,
        "243": 3,
        "281": 7,
        "282": 2,
        "290": 1
      },
      "fqnsFingerprint": "5f24a8a35923027502ed292feff109cb3dabd4c9a90ad2183d0bdca6bf2b5cbf"
    },
    "a4e9cc41ab82c5f301f3e43d2c43af33798ff796edefe4c3fc08a4a9cf5a7bb7": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\n\n# Target group with duration-based stickiness with load-balancer generated cookie\ntg1 = elbv2.ApplicationTargetGroup(self, \"TG1\",\n    target_type=elbv2.TargetType.INSTANCE,\n    port=80,\n    stickiness_cookie_duration=Duration.minutes(5),\n    vpc=vpc\n)\n\n# Target group with application-based stickiness\ntg2 = elbv2.ApplicationTargetGroup(self, \"TG2\",\n    target_type=elbv2.TargetType.INSTANCE,\n    port=80,\n    stickiness_cookie_duration=Duration.minutes(5),\n    stickiness_cookie_name=\"MyDeliciousCookie\",\n    vpc=vpc\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\n\n// Target group with duration-based stickiness with load-balancer generated cookie\nApplicationTargetGroup tg1 = new ApplicationTargetGroup(this, \"TG1\", new ApplicationTargetGroupProps {\n    TargetType = TargetType.INSTANCE,\n    Port = 80,\n    StickinessCookieDuration = Duration.Minutes(5),\n    Vpc = vpc\n});\n\n// Target group with application-based stickiness\nApplicationTargetGroup tg2 = new ApplicationTargetGroup(this, \"TG2\", new ApplicationTargetGroupProps {\n    TargetType = TargetType.INSTANCE,\n    Port = 80,\n    StickinessCookieDuration = Duration.Minutes(5),\n    StickinessCookieName = \"MyDeliciousCookie\",\n    Vpc = vpc\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\n\n// Target group with duration-based stickiness with load-balancer generated cookie\nApplicationTargetGroup tg1 = ApplicationTargetGroup.Builder.create(this, \"TG1\")\n        .targetType(TargetType.INSTANCE)\n        .port(80)\n        .stickinessCookieDuration(Duration.minutes(5))\n        .vpc(vpc)\n        .build();\n\n// Target group with application-based stickiness\nApplicationTargetGroup tg2 = ApplicationTargetGroup.Builder.create(this, \"TG2\")\n        .targetType(TargetType.INSTANCE)\n        .port(80)\n        .stickinessCookieDuration(Duration.minutes(5))\n        .stickinessCookieName(\"MyDeliciousCookie\")\n        .vpc(vpc)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\n\n// Target group with duration-based stickiness with load-balancer generated cookie\ntg1 := elbv2.NewApplicationTargetGroup(this, jsii.String(\"TG1\"), &applicationTargetGroupProps{\n\ttargetType: elbv2.targetType_INSTANCE,\n\tport: jsii.Number(80),\n\tstickinessCookieDuration: *awscdkcore.Duration.minutes(jsii.Number(5)),\n\tvpc: vpc,\n})\n\n// Target group with application-based stickiness\ntg2 := elbv2.NewApplicationTargetGroup(this, jsii.String(\"TG2\"), &applicationTargetGroupProps{\n\ttargetType: elbv2.*targetType_INSTANCE,\n\tport: jsii.Number(80),\n\tstickinessCookieDuration: *awscdkcore.Duration.minutes(jsii.Number(5)),\n\tstickinessCookieName: jsii.String(\"MyDeliciousCookie\"),\n\tvpc: vpc,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\n\n// Target group with duration-based stickiness with load-balancer generated cookie\nconst tg1 = new elbv2.ApplicationTargetGroup(this, 'TG1', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  vpc,\n});\n\n// Target group with application-based stickiness\nconst tg2 = new elbv2.ApplicationTargetGroup(this, 'TG2', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  stickinessCookieName: 'MyDeliciousCookie',\n  vpc,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroupProps",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType#INSTANCE",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// Target group with duration-based stickiness with load-balancer generated cookie\nconst tg1 = new elbv2.ApplicationTargetGroup(this, 'TG1', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  vpc,\n});\n\n// Target group with application-based stickiness\nconst tg2 = new elbv2.ApplicationTargetGroup(this, 'TG2', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  stickinessCookieName: 'MyDeliciousCookie',\n  vpc,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 3,
        "75": 28,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 8,
        "196": 2,
        "197": 2,
        "225": 3,
        "242": 3,
        "243": 3,
        "281": 7,
        "282": 2,
        "290": 1
      },
      "fqnsFingerprint": "5f24a8a35923027502ed292feff109cb3dabd4c9a90ad2183d0bdca6bf2b5cbf"
    },
    "04a35497b7d74228b5eb4dfed1946ab1e4f6ad8d40d495fb26d364fc4aa956c4": {
      "translations": {
        "python": {
          "source": "# listener: elbv2.ApplicationListener\n# my_target_group: elbv2.ApplicationTargetGroup\n\n\nlistener.add_action(\"DefaultAction\",\n    action=elbv2.ListenerAction.authenticate_oidc(\n        authorization_endpoint=\"https://example.com/openid\",\n        # Other OIDC properties here\n        client_id=\"...\",\n        client_secret=SecretValue.secrets_manager(\"...\"),\n        issuer=\"...\",\n        token_endpoint=\"...\",\n        user_info_endpoint=\"...\",\n\n        # Next\n        next=elbv2.ListenerAction.forward([my_target_group])\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ApplicationListener listener;\nApplicationTargetGroup myTargetGroup;\n\n\nlistener.AddAction(\"DefaultAction\", new AddApplicationActionProps {\n    Action = ListenerAction.AuthenticateOidc(new AuthenticateOidcOptions {\n        AuthorizationEndpoint = \"https://example.com/openid\",\n        // Other OIDC properties here\n        ClientId = \"...\",\n        ClientSecret = SecretValue.SecretsManager(\"...\"),\n        Issuer = \"...\",\n        TokenEndpoint = \"...\",\n        UserInfoEndpoint = \"...\",\n\n        // Next\n        Next = ListenerAction.Forward(new [] { myTargetGroup })\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "ApplicationListener listener;\nApplicationTargetGroup myTargetGroup;\n\n\nlistener.addAction(\"DefaultAction\", AddApplicationActionProps.builder()\n        .action(ListenerAction.authenticateOidc(AuthenticateOidcOptions.builder()\n                .authorizationEndpoint(\"https://example.com/openid\")\n                // Other OIDC properties here\n                .clientId(\"...\")\n                .clientSecret(SecretValue.secretsManager(\"...\"))\n                .issuer(\"...\")\n                .tokenEndpoint(\"...\")\n                .userInfoEndpoint(\"...\")\n\n                // Next\n                .next(ListenerAction.forward(List.of(myTargetGroup)))\n                .build()))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var listener applicationListener\nvar myTargetGroup applicationTargetGroup\n\n\nlistener.addAction(jsii.String(\"DefaultAction\"), &addApplicationActionProps{\n\taction: elbv2.listenerAction.authenticateOidc(&authenticateOidcOptions{\n\t\tauthorizationEndpoint: jsii.String(\"https://example.com/openid\"),\n\t\t// Other OIDC properties here\n\t\tclientId: jsii.String(\"...\"),\n\t\tclientSecret: *awscdkcore.SecretValue.secretsManager(jsii.String(\"...\")),\n\t\tissuer: jsii.String(\"...\"),\n\t\ttokenEndpoint: jsii.String(\"...\"),\n\t\tuserInfoEndpoint: jsii.String(\"...\"),\n\n\t\t// Next\n\t\tnext: elbv2.*listenerAction.forward([]iApplicationTargetGroup{\n\t\t\tmyTargetGroup,\n\t\t}),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const listener: elbv2.ApplicationListener;\ndeclare const myTargetGroup: elbv2.ApplicationTargetGroup;\n\nlistener.addAction('DefaultAction', {\n  action: elbv2.ListenerAction.authenticateOidc({\n    authorizationEndpoint: 'https://example.com/openid',\n    // Other OIDC properties here\n    clientId: '...',\n    clientSecret: SecretValue.secretsManager('...'),\n    issuer: '...',\n    tokenEndpoint: '...',\n    userInfoEndpoint: '...',\n\n    // Next\n    next: elbv2.ListenerAction.forward([myTargetGroup]),\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AuthenticateOidcOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationActionProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addAction",
        "@aws-cdk/aws-elasticloadbalancingv2.AuthenticateOidcOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction#authenticateOidc",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction#forward",
        "@aws-cdk/core.SecretValue",
        "@aws-cdk/core.SecretValue#secretsManager"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const listener: elbv2.ApplicationListener;\ndeclare const myTargetGroup: elbv2.ApplicationTargetGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nlistener.addAction('DefaultAction', {\n  action: elbv2.ListenerAction.authenticateOidc({\n    authorizationEndpoint: 'https://example.com/openid',\n    // Other OIDC properties here\n    clientId: '...',\n    clientSecret: SecretValue.secretsManager('...'),\n    issuer: '...',\n    tokenEndpoint: '...',\n    userInfoEndpoint: '...',\n\n    // Next\n    next: elbv2.ListenerAction.forward([myTargetGroup]),\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 7,
        "75": 25,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 2,
        "194": 6,
        "196": 4,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "fe45b01623fd8ed972322209d809236d1adddb0206a36ce65f4cb23b312dc21d"
    },
    "d90e99910cad8dadc22a22f2606ee93f5416a4b1f265bde37afb60d997d4385b": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations import HttpAlbIntegration\n\n# lb: elbv2.ApplicationLoadBalancer\n\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpAlbIntegration(\"DefaultIntegration\", listener,\n        parameter_mapping=apigwv2.ParameterMapping().append_header(\"header2\", apigwv2.MappingValue.request_header(\"header1\")).remove_header(\"header1\")\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nApplicationLoadBalancer lb;\n\nApplicationListener listener = lb.AddListener(\"listener\", new BaseApplicationListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddApplicationTargetsProps {\n    Port = 80\n});\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpAlbIntegration(\"DefaultIntegration\", listener, new HttpAlbIntegrationProps {\n        ParameterMapping = new ParameterMapping().AppendHeader(\"header2\", MappingValue.RequestHeader(\"header1\")).RemoveHeader(\"header1\")\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.HttpAlbIntegration;\n\nApplicationLoadBalancer lb;\n\nApplicationListener listener = lb.addListener(\"listener\", BaseApplicationListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddApplicationTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(HttpAlbIntegration.Builder.create(\"DefaultIntegration\", listener)\n                .parameterMapping(new ParameterMapping().appendHeader(\"header2\", MappingValue.requestHeader(\"header1\")).removeHeader(\"header1\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar lb applicationLoadBalancer\n\nlistener := lb.addListener(jsii.String(\"listener\"), &baseApplicationListenerProps{\n\tport: jsii.Number(80),\n})\nlistener.addTargets(jsii.String(\"target\"), &addApplicationTargetsProps{\n\tport: jsii.Number(80),\n})\n\nhttpEndpoint := apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyPrivateApi\"), &httpApiProps{\n\tdefaultIntegration: *awscdkawsapigatewayv2integrations.NewHttpAlbIntegration(jsii.String(\"DefaultIntegration\"), listener, &httpAlbIntegrationProps{\n\t\tparameterMapping: apigwv2.NewParameterMapping().appendHeader(jsii.String(\"header2\"), apigwv2.mappingValue.requestHeader(jsii.String(\"header1\"))).removeHeader(jsii.String(\"header1\")),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping()\n      .appendHeader('header2', apigwv2.MappingValue.requestHeader('header1'))\n      .removeHeader('header1'),\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegration",
        "@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegrationProps",
        "@aws-cdk/aws-apigatewayv2.HttpApi",
        "@aws-cdk/aws-apigatewayv2.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
        "@aws-cdk/aws-apigatewayv2.MappingValue",
        "@aws-cdk/aws-apigatewayv2.MappingValue#requestHeader",
        "@aws-cdk/aws-apigatewayv2.ParameterMapping",
        "@aws-cdk/aws-apigatewayv2.ParameterMapping#appendHeader",
        "@aws-cdk/aws-apigatewayv2.ParameterMapping#removeHeader",
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping()\n      .appendHeader('header2', apigwv2.MappingValue.requestHeader('header1'))\n      .removeHeader('header1'),\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 8,
        "75": 25,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 4,
        "194": 8,
        "196": 5,
        "197": 3,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "62ded27d2d975e5286c84d845a735315b9164fb5878102aed3b9d78a38e366ab"
    },
    "f82a42a7855b05f05b860d23758047064ba11aa32da758efdef60a7861086a7e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# application_target_group: elbv2.ApplicationTargetGroup\n# listener_action: elbv2.ListenerAction\n# listener_condition: elbv2.ListenerCondition\n\nbase_application_listener_rule_props = elbv2.BaseApplicationListenerRuleProps(\n    priority=123,\n\n    # the properties below are optional\n    action=listener_action,\n    conditions=[listener_condition],\n    fixed_response=elbv2.FixedResponse(\n        status_code=\"statusCode\",\n\n        # the properties below are optional\n        content_type=elbv2.ContentType.TEXT_PLAIN,\n        message_body=\"messageBody\"\n    ),\n    host_header=\"hostHeader\",\n    path_pattern=\"pathPattern\",\n    path_patterns=[\"pathPatterns\"],\n    redirect_response=elbv2.RedirectResponse(\n        status_code=\"statusCode\",\n\n        # the properties below are optional\n        host=\"host\",\n        path=\"path\",\n        port=\"port\",\n        protocol=\"protocol\",\n        query=\"query\"\n    ),\n    target_groups=[application_target_group]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nApplicationTargetGroup applicationTargetGroup;\nListenerAction listenerAction;\nListenerCondition listenerCondition;\n\nBaseApplicationListenerRuleProps baseApplicationListenerRuleProps = new BaseApplicationListenerRuleProps {\n    Priority = 123,\n\n    // the properties below are optional\n    Action = listenerAction,\n    Conditions = new [] { listenerCondition },\n    FixedResponse = new FixedResponse {\n        StatusCode = \"statusCode\",\n\n        // the properties below are optional\n        ContentType = ContentType.TEXT_PLAIN,\n        MessageBody = \"messageBody\"\n    },\n    HostHeader = \"hostHeader\",\n    PathPattern = \"pathPattern\",\n    PathPatterns = new [] { \"pathPatterns\" },\n    RedirectResponse = new RedirectResponse {\n        StatusCode = \"statusCode\",\n\n        // the properties below are optional\n        Host = \"host\",\n        Path = \"path\",\n        Port = \"port\",\n        Protocol = \"protocol\",\n        Query = \"query\"\n    },\n    TargetGroups = new [] { applicationTargetGroup }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nApplicationTargetGroup applicationTargetGroup;\nListenerAction listenerAction;\nListenerCondition listenerCondition;\n\nBaseApplicationListenerRuleProps baseApplicationListenerRuleProps = BaseApplicationListenerRuleProps.builder()\n        .priority(123)\n\n        // the properties below are optional\n        .action(listenerAction)\n        .conditions(List.of(listenerCondition))\n        .fixedResponse(FixedResponse.builder()\n                .statusCode(\"statusCode\")\n\n                // the properties below are optional\n                .contentType(ContentType.TEXT_PLAIN)\n                .messageBody(\"messageBody\")\n                .build())\n        .hostHeader(\"hostHeader\")\n        .pathPattern(\"pathPattern\")\n        .pathPatterns(List.of(\"pathPatterns\"))\n        .redirectResponse(RedirectResponse.builder()\n                .statusCode(\"statusCode\")\n\n                // the properties below are optional\n                .host(\"host\")\n                .path(\"path\")\n                .port(\"port\")\n                .protocol(\"protocol\")\n                .query(\"query\")\n                .build())\n        .targetGroups(List.of(applicationTargetGroup))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar applicationTargetGroup applicationTargetGroup\nvar listenerAction listenerAction\nvar listenerCondition listenerCondition\n\nbaseApplicationListenerRuleProps := &baseApplicationListenerRuleProps{\n\tpriority: jsii.Number(123),\n\n\t// the properties below are optional\n\taction: listenerAction,\n\tconditions: []*listenerCondition{\n\t\tlistenerCondition,\n\t},\n\tfixedResponse: &fixedResponse{\n\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t// the properties below are optional\n\t\tcontentType: elbv2.contentType_TEXT_PLAIN,\n\t\tmessageBody: jsii.String(\"messageBody\"),\n\t},\n\thostHeader: jsii.String(\"hostHeader\"),\n\tpathPattern: jsii.String(\"pathPattern\"),\n\tpathPatterns: []*string{\n\t\tjsii.String(\"pathPatterns\"),\n\t},\n\tredirectResponse: &redirectResponse{\n\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t// the properties below are optional\n\t\thost: jsii.String(\"host\"),\n\t\tpath: jsii.String(\"path\"),\n\t\tport: jsii.String(\"port\"),\n\t\tprotocol: jsii.String(\"protocol\"),\n\t\tquery: jsii.String(\"query\"),\n\t},\n\ttargetGroups: []iApplicationTargetGroup{\n\t\tapplicationTargetGroup,\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\ndeclare const listenerAction: elbv2.ListenerAction;\ndeclare const listenerCondition: elbv2.ListenerCondition;\nconst baseApplicationListenerRuleProps: elbv2.BaseApplicationListenerRuleProps = {\n  priority: 123,\n\n  // the properties below are optional\n  action: listenerAction,\n  conditions: [listenerCondition],\n  fixedResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'messageBody',\n  },\n  hostHeader: 'hostHeader',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  redirectResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    host: 'host',\n    path: 'path',\n    port: 'port',\n    protocol: 'protocol',\n    query: 'query',\n  },\n  targetGroups: [applicationTargetGroup],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerRuleProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerRuleProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType#TEXT_PLAIN",
        "@aws-cdk/aws-elasticloadbalancingv2.FixedResponse",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction",
        "@aws-cdk/aws-elasticloadbalancingv2.RedirectResponse"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\ndeclare const listenerAction: elbv2.ListenerAction;\ndeclare const listenerCondition: elbv2.ListenerCondition;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst baseApplicationListenerRuleProps: elbv2.BaseApplicationListenerRuleProps = {\n  priority: 123,\n\n  // the properties below are optional\n  action: listenerAction,\n  conditions: [listenerCondition],\n  fixedResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'messageBody',\n  },\n  hostHeader: 'hostHeader',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  redirectResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    host: 'host',\n    path: 'path',\n    port: 'port',\n    protocol: 'protocol',\n    query: 'query',\n  },\n  targetGroups: [applicationTargetGroup],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 12,
        "75": 37,
        "130": 3,
        "153": 4,
        "169": 4,
        "192": 3,
        "193": 3,
        "194": 2,
        "225": 4,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 18,
        "290": 1
      },
      "fqnsFingerprint": "9c93e44a985521ef93d1e7ac06e69e32f23c7b758712ec5b920ca2bb5e701ca0"
    },
    "721c3207eead87d0db46274b88d16139ece2f03870b43b7eb128108d1c263d50": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nbase_listener_lookup_options = elbv2.BaseListenerLookupOptions(\n    listener_port=123,\n    load_balancer_arn=\"loadBalancerArn\",\n    load_balancer_tags={\n        \"load_balancer_tags_key\": \"loadBalancerTags\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nBaseListenerLookupOptions baseListenerLookupOptions = new BaseListenerLookupOptions {\n    ListenerPort = 123,\n    LoadBalancerArn = \"loadBalancerArn\",\n    LoadBalancerTags = new Dictionary<string, string> {\n        { \"loadBalancerTagsKey\", \"loadBalancerTags\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nBaseListenerLookupOptions baseListenerLookupOptions = BaseListenerLookupOptions.builder()\n        .listenerPort(123)\n        .loadBalancerArn(\"loadBalancerArn\")\n        .loadBalancerTags(Map.of(\n                \"loadBalancerTagsKey\", \"loadBalancerTags\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nbaseListenerLookupOptions := &baseListenerLookupOptions{\n\tlistenerPort: jsii.Number(123),\n\tloadBalancerArn: jsii.String(\"loadBalancerArn\"),\n\tloadBalancerTags: map[string]*string{\n\t\t\"loadBalancerTagsKey\": jsii.String(\"loadBalancerTags\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst baseListenerLookupOptions: elbv2.BaseListenerLookupOptions = {\n  listenerPort: 123,\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerTags: {\n    loadBalancerTagsKey: 'loadBalancerTags',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseListenerLookupOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.BaseListenerLookupOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst baseListenerLookupOptions: elbv2.BaseListenerLookupOptions = {\n  listenerPort: 123,\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerTags: {\n    loadBalancerTagsKey: 'loadBalancerTags',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 8,
        "153": 1,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "2414a27a6c4f105046bbb76e9f777e71eada997b92f91ff989f58b574fff443d"
    },
    "a9c55a9dff7d29e2d4626e0f7d342db565974b39e9399ca7756bb391bb41470d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nbase_load_balancer_lookup_options = elbv2.BaseLoadBalancerLookupOptions(\n    load_balancer_arn=\"loadBalancerArn\",\n    load_balancer_tags={\n        \"load_balancer_tags_key\": \"loadBalancerTags\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nBaseLoadBalancerLookupOptions baseLoadBalancerLookupOptions = new BaseLoadBalancerLookupOptions {\n    LoadBalancerArn = \"loadBalancerArn\",\n    LoadBalancerTags = new Dictionary<string, string> {\n        { \"loadBalancerTagsKey\", \"loadBalancerTags\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nBaseLoadBalancerLookupOptions baseLoadBalancerLookupOptions = BaseLoadBalancerLookupOptions.builder()\n        .loadBalancerArn(\"loadBalancerArn\")\n        .loadBalancerTags(Map.of(\n                \"loadBalancerTagsKey\", \"loadBalancerTags\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nbaseLoadBalancerLookupOptions := &baseLoadBalancerLookupOptions{\n\tloadBalancerArn: jsii.String(\"loadBalancerArn\"),\n\tloadBalancerTags: map[string]*string{\n\t\t\"loadBalancerTagsKey\": jsii.String(\"loadBalancerTags\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst baseLoadBalancerLookupOptions: elbv2.BaseLoadBalancerLookupOptions = {\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerTags: {\n    loadBalancerTagsKey: 'loadBalancerTags',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerLookupOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerLookupOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst baseLoadBalancerLookupOptions: elbv2.BaseLoadBalancerLookupOptions = {\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerTags: {\n    loadBalancerTagsKey: 'loadBalancerTags',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "0aefc9eaa7cbe06d6ca34c27dbfcc60b6169869bb12784951dfa1f6af1d8f87b"
    },
    "0d26398498568f8f077ff3bbd0bee90c31fce295a46427cc62fc73e26206d75a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# subnet: ec2.Subnet\n# subnet_filter: ec2.SubnetFilter\n# vpc: ec2.Vpc\n\nbase_load_balancer_props = elbv2.BaseLoadBalancerProps(\n    vpc=vpc,\n\n    # the properties below are optional\n    deletion_protection=False,\n    internet_facing=False,\n    load_balancer_name=\"loadBalancerName\",\n    vpc_subnets=ec2.SubnetSelection(\n        availability_zones=[\"availabilityZones\"],\n        one_per_az=False,\n        subnet_filters=[subnet_filter],\n        subnet_group_name=\"subnetGroupName\",\n        subnet_name=\"subnetName\",\n        subnets=[subnet],\n        subnet_type=ec2.SubnetType.ISOLATED\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nSubnet subnet;\nSubnetFilter subnetFilter;\nVpc vpc;\n\nBaseLoadBalancerProps baseLoadBalancerProps = new BaseLoadBalancerProps {\n    Vpc = vpc,\n\n    // the properties below are optional\n    DeletionProtection = false,\n    InternetFacing = false,\n    LoadBalancerName = \"loadBalancerName\",\n    VpcSubnets = new SubnetSelection {\n        AvailabilityZones = new [] { \"availabilityZones\" },\n        OnePerAz = false,\n        SubnetFilters = new [] { subnetFilter },\n        SubnetGroupName = \"subnetGroupName\",\n        SubnetName = \"subnetName\",\n        Subnets = new [] { subnet },\n        SubnetType = SubnetType.ISOLATED\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nSubnet subnet;\nSubnetFilter subnetFilter;\nVpc vpc;\n\nBaseLoadBalancerProps baseLoadBalancerProps = BaseLoadBalancerProps.builder()\n        .vpc(vpc)\n\n        // the properties below are optional\n        .deletionProtection(false)\n        .internetFacing(false)\n        .loadBalancerName(\"loadBalancerName\")\n        .vpcSubnets(SubnetSelection.builder()\n                .availabilityZones(List.of(\"availabilityZones\"))\n                .onePerAz(false)\n                .subnetFilters(List.of(subnetFilter))\n                .subnetGroupName(\"subnetGroupName\")\n                .subnetName(\"subnetName\")\n                .subnets(List.of(subnet))\n                .subnetType(SubnetType.ISOLATED)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar subnet subnet\nvar subnetFilter subnetFilter\nvar vpc vpc\n\nbaseLoadBalancerProps := &baseLoadBalancerProps{\n\tvpc: vpc,\n\n\t// the properties below are optional\n\tdeletionProtection: jsii.Boolean(false),\n\tinternetFacing: jsii.Boolean(false),\n\tloadBalancerName: jsii.String(\"loadBalancerName\"),\n\tvpcSubnets: &subnetSelection{\n\t\tavailabilityZones: []*string{\n\t\t\tjsii.String(\"availabilityZones\"),\n\t\t},\n\t\tonePerAz: jsii.Boolean(false),\n\t\tsubnetFilters: []*subnetFilter{\n\t\t\tsubnetFilter,\n\t\t},\n\t\tsubnetGroupName: jsii.String(\"subnetGroupName\"),\n\t\tsubnetName: jsii.String(\"subnetName\"),\n\t\tsubnets: []iSubnet{\n\t\t\tsubnet,\n\t\t},\n\t\tsubnetType: ec2.subnetType_ISOLATED,\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\nconst baseLoadBalancerProps: elbv2.BaseLoadBalancerProps = {\n  vpc: vpc,\n\n  // the properties below are optional\n  deletionProtection: false,\n  internetFacing: false,\n  loadBalancerName: 'loadBalancerName',\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.SubnetSelection",
        "@aws-cdk/aws-ec2.SubnetType",
        "@aws-cdk/aws-ec2.SubnetType#ISOLATED",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst baseLoadBalancerProps: elbv2.BaseLoadBalancerProps = {\n  vpc: vpc,\n\n  // the properties below are optional\n  deletionProtection: false,\n  internetFacing: false,\n  loadBalancerName: 'loadBalancerName',\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 32,
        "91": 3,
        "130": 3,
        "153": 4,
        "169": 4,
        "192": 3,
        "193": 2,
        "194": 2,
        "225": 4,
        "242": 4,
        "243": 4,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "ee8590c3dc19674dd375e4d75c98d8a283a4740d76b00679e89c53cf13e1c791"
    },
    "896dc5705339a3ed6bb634ed954ea30b29a8dc2fff6616ff55ba02d1a18c7bc7": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations import HttpNlbIntegration\n\n\nvpc = ec2.Vpc(self, \"VPC\")\nlb = elbv2.NetworkLoadBalancer(self, \"lb\", vpc=vpc)\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpNlbIntegration(\"DefaultIntegration\", listener)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nNetworkLoadBalancer lb = new NetworkLoadBalancer(this, \"lb\", new NetworkLoadBalancerProps { Vpc = vpc });\nNetworkListener listener = lb.AddListener(\"listener\", new BaseNetworkListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddNetworkTargetsProps {\n    Port = 80\n});\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpNlbIntegration(\"DefaultIntegration\", listener)\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.HttpNlbIntegration;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nNetworkLoadBalancer lb = NetworkLoadBalancer.Builder.create(this, \"lb\").vpc(vpc).build();\nNetworkListener listener = lb.addListener(\"listener\", BaseNetworkListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddNetworkTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(new HttpNlbIntegration(\"DefaultIntegration\", listener))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\n\nvpc := ec2.NewVpc(this, jsii.String(\"VPC\"))\nlb := elbv2.NewNetworkLoadBalancer(this, jsii.String(\"lb\"), &networkLoadBalancerProps{\n\tvpc: vpc,\n})\nlistener := lb.addListener(jsii.String(\"listener\"), &baseNetworkListenerProps{\n\tport: jsii.Number(80),\n})\nlistener.addTargets(jsii.String(\"target\"), &addNetworkTargetsProps{\n\tport: jsii.Number(80),\n})\n\nhttpEndpoint := apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyPrivateApi\"), &httpApiProps{\n\tdefaultIntegration: *awscdkawsapigatewayv2integrations.NewHttpNlbIntegration(jsii.String(\"DefaultIntegration\"), listener),\n})",
          "version": "1"
        },
        "$": {
          "source": "import { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-integrations.HttpNlbIntegration",
        "@aws-cdk/aws-apigatewayv2.HttpApi",
        "@aws-cdk/aws-apigatewayv2.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.Vpc",
        "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 7,
        "75": 21,
        "104": 3,
        "193": 4,
        "194": 5,
        "196": 2,
        "197": 4,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "a0ee5bc89a740e65e13ba17eaeb8deed11e0b3bfae376bd4a0d561095121d042"
    },
    "b2b9871a4115094b40b84e7e4e78112617eefda1b8e8bf0d2f30c97f3a2d7d12": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\nimport aws_cdk.core as cdk\n\n# vpc: ec2.Vpc\n\nbase_target_group_props = elbv2.BaseTargetGroupProps(\n    deregistration_delay=cdk.Duration.minutes(30),\n    health_check=elbv2.HealthCheck(\n        enabled=False,\n        healthy_grpc_codes=\"healthyGrpcCodes\",\n        healthy_http_codes=\"healthyHttpCodes\",\n        healthy_threshold_count=123,\n        interval=cdk.Duration.minutes(30),\n        path=\"path\",\n        port=\"port\",\n        protocol=elbv2.Protocol.HTTP,\n        timeout=cdk.Duration.minutes(30),\n        unhealthy_threshold_count=123\n    ),\n    target_group_name=\"targetGroupName\",\n    target_type=elbv2.TargetType.INSTANCE,\n    vpc=vpc\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\nusing Amazon.CDK;\n\nVpc vpc;\nBaseTargetGroupProps baseTargetGroupProps = new BaseTargetGroupProps {\n    DeregistrationDelay = Duration.Minutes(30),\n    HealthCheck = new HealthCheck {\n        Enabled = false,\n        HealthyGrpcCodes = \"healthyGrpcCodes\",\n        HealthyHttpCodes = \"healthyHttpCodes\",\n        HealthyThresholdCount = 123,\n        Interval = Duration.Minutes(30),\n        Path = \"path\",\n        Port = \"port\",\n        Protocol = Protocol.HTTP,\n        Timeout = Duration.Minutes(30),\n        UnhealthyThresholdCount = 123\n    },\n    TargetGroupName = \"targetGroupName\",\n    TargetType = TargetType.INSTANCE,\n    Vpc = vpc\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\nimport software.amazon.awscdk.core.*;\n\nVpc vpc;\n\nBaseTargetGroupProps baseTargetGroupProps = BaseTargetGroupProps.builder()\n        .deregistrationDelay(Duration.minutes(30))\n        .healthCheck(HealthCheck.builder()\n                .enabled(false)\n                .healthyGrpcCodes(\"healthyGrpcCodes\")\n                .healthyHttpCodes(\"healthyHttpCodes\")\n                .healthyThresholdCount(123)\n                .interval(Duration.minutes(30))\n                .path(\"path\")\n                .port(\"port\")\n                .protocol(Protocol.HTTP)\n                .timeout(Duration.minutes(30))\n                .unhealthyThresholdCount(123)\n                .build())\n        .targetGroupName(\"targetGroupName\")\n        .targetType(TargetType.INSTANCE)\n        .vpc(vpc)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar vpc vpc\n\nbaseTargetGroupProps := &baseTargetGroupProps{\n\tderegistrationDelay: cdk.duration.minutes(jsii.Number(30)),\n\thealthCheck: &healthCheck{\n\t\tenabled: jsii.Boolean(false),\n\t\thealthyGrpcCodes: jsii.String(\"healthyGrpcCodes\"),\n\t\thealthyHttpCodes: jsii.String(\"healthyHttpCodes\"),\n\t\thealthyThresholdCount: jsii.Number(123),\n\t\tinterval: cdk.*duration.minutes(jsii.Number(30)),\n\t\tpath: jsii.String(\"path\"),\n\t\tport: jsii.String(\"port\"),\n\t\tprotocol: elbv2.protocol_HTTP,\n\t\ttimeout: cdk.*duration.minutes(jsii.Number(30)),\n\t\tunhealthyThresholdCount: jsii.Number(123),\n\t},\n\ttargetGroupName: jsii.String(\"targetGroupName\"),\n\ttargetType: elbv2.targetType_INSTANCE,\n\tvpc: vpc,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const vpc: ec2.Vpc;\nconst baseTargetGroupProps: elbv2.BaseTargetGroupProps = {\n  deregistrationDelay: cdk.Duration.minutes(30),\n  healthCheck: {\n    enabled: false,\n    healthyGrpcCodes: 'healthyGrpcCodes',\n    healthyHttpCodes: 'healthyHttpCodes',\n    healthyThresholdCount: 123,\n    interval: cdk.Duration.minutes(30),\n    path: 'path',\n    port: 'port',\n    protocol: elbv2.Protocol.HTTP,\n    timeout: cdk.Duration.minutes(30),\n    unhealthyThresholdCount: 123,\n  },\n  targetGroupName: 'targetGroupName',\n  targetType: elbv2.TargetType.INSTANCE,\n  vpc: vpc,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps",
        "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck",
        "@aws-cdk/aws-elasticloadbalancingv2.Protocol",
        "@aws-cdk/aws-elasticloadbalancingv2.Protocol#HTTP",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType#INSTANCE",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst baseTargetGroupProps: elbv2.BaseTargetGroupProps = {\n  deregistrationDelay: cdk.Duration.minutes(30),\n  healthCheck: {\n    enabled: false,\n    healthyGrpcCodes: 'healthyGrpcCodes',\n    healthyHttpCodes: 'healthyHttpCodes',\n    healthyThresholdCount: 123,\n    interval: cdk.Duration.minutes(30),\n    path: 'path',\n    port: 'port',\n    protocol: elbv2.Protocol.HTTP,\n    timeout: cdk.Duration.minutes(30),\n    unhealthyThresholdCount: 123,\n  },\n  targetGroupName: 'targetGroupName',\n  targetType: elbv2.TargetType.INSTANCE,\n  vpc: vpc,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 8,
        "75": 40,
        "91": 1,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 2,
        "194": 10,
        "196": 3,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 15,
        "290": 1
      },
      "fqnsFingerprint": "3ff156ec1f7b03d87997dd9a2cee84ac655d667e580ae2516f0bf7e97a47051b"
    },
    "3c7005b1b178431fdbe70aff5f1291fb5839ac92170a69750e2644e07c787caf": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ncfn_listener = elbv2.CfnListener(self, \"MyCfnListener\",\n    default_actions=[elbv2.CfnListener.ActionProperty(\n        type=\"type\",\n\n        # the properties below are optional\n        authenticate_cognito_config=elbv2.CfnListener.AuthenticateCognitoConfigProperty(\n            user_pool_arn=\"userPoolArn\",\n            user_pool_client_id=\"userPoolClientId\",\n            user_pool_domain=\"userPoolDomain\",\n\n            # the properties below are optional\n            authentication_request_extra_params={\n                \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n            },\n            on_unauthenticated_request=\"onUnauthenticatedRequest\",\n            scope=\"scope\",\n            session_cookie_name=\"sessionCookieName\",\n            session_timeout=\"sessionTimeout\"\n        ),\n        authenticate_oidc_config=elbv2.CfnListener.AuthenticateOidcConfigProperty(\n            authorization_endpoint=\"authorizationEndpoint\",\n            client_id=\"clientId\",\n            issuer=\"issuer\",\n            token_endpoint=\"tokenEndpoint\",\n            user_info_endpoint=\"userInfoEndpoint\",\n\n            # the properties below are optional\n            authentication_request_extra_params={\n                \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n            },\n            client_secret=\"clientSecret\",\n            on_unauthenticated_request=\"onUnauthenticatedRequest\",\n            scope=\"scope\",\n            session_cookie_name=\"sessionCookieName\",\n            session_timeout=\"sessionTimeout\",\n            use_existing_client_secret=False\n        ),\n        fixed_response_config=elbv2.CfnListener.FixedResponseConfigProperty(\n            status_code=\"statusCode\",\n\n            # the properties below are optional\n            content_type=\"contentType\",\n            message_body=\"messageBody\"\n        ),\n        forward_config=elbv2.CfnListener.ForwardConfigProperty(\n            target_groups=[elbv2.CfnListener.TargetGroupTupleProperty(\n                target_group_arn=\"targetGroupArn\",\n                weight=123\n            )],\n            target_group_stickiness_config=elbv2.CfnListener.TargetGroupStickinessConfigProperty(\n                duration_seconds=123,\n                enabled=False\n            )\n        ),\n        order=123,\n        redirect_config=elbv2.CfnListener.RedirectConfigProperty(\n            status_code=\"statusCode\",\n\n            # the properties below are optional\n            host=\"host\",\n            path=\"path\",\n            port=\"port\",\n            protocol=\"protocol\",\n            query=\"query\"\n        ),\n        target_group_arn=\"targetGroupArn\"\n    )],\n    load_balancer_arn=\"loadBalancerArn\",\n\n    # the properties below are optional\n    alpn_policy=[\"alpnPolicy\"],\n    certificates=[elbv2.CfnListener.CertificateProperty(\n        certificate_arn=\"certificateArn\"\n    )],\n    port=123,\n    protocol=\"protocol\",\n    ssl_policy=\"sslPolicy\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nCfnListener cfnListener = new CfnListener(this, \"MyCfnListener\", new CfnListenerProps {\n    DefaultActions = new [] { new ActionProperty {\n        Type = \"type\",\n\n        // the properties below are optional\n        AuthenticateCognitoConfig = new AuthenticateCognitoConfigProperty {\n            UserPoolArn = \"userPoolArn\",\n            UserPoolClientId = \"userPoolClientId\",\n            UserPoolDomain = \"userPoolDomain\",\n\n            // the properties below are optional\n            AuthenticationRequestExtraParams = new Dictionary<string, string> {\n                { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n            },\n            OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n            Scope = \"scope\",\n            SessionCookieName = \"sessionCookieName\",\n            SessionTimeout = \"sessionTimeout\"\n        },\n        AuthenticateOidcConfig = new AuthenticateOidcConfigProperty {\n            AuthorizationEndpoint = \"authorizationEndpoint\",\n            ClientId = \"clientId\",\n            Issuer = \"issuer\",\n            TokenEndpoint = \"tokenEndpoint\",\n            UserInfoEndpoint = \"userInfoEndpoint\",\n\n            // the properties below are optional\n            AuthenticationRequestExtraParams = new Dictionary<string, string> {\n                { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n            },\n            ClientSecret = \"clientSecret\",\n            OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n            Scope = \"scope\",\n            SessionCookieName = \"sessionCookieName\",\n            SessionTimeout = \"sessionTimeout\",\n            UseExistingClientSecret = false\n        },\n        FixedResponseConfig = new FixedResponseConfigProperty {\n            StatusCode = \"statusCode\",\n\n            // the properties below are optional\n            ContentType = \"contentType\",\n            MessageBody = \"messageBody\"\n        },\n        ForwardConfig = new ForwardConfigProperty {\n            TargetGroups = new [] { new TargetGroupTupleProperty {\n                TargetGroupArn = \"targetGroupArn\",\n                Weight = 123\n            } },\n            TargetGroupStickinessConfig = new TargetGroupStickinessConfigProperty {\n                DurationSeconds = 123,\n                Enabled = false\n            }\n        },\n        Order = 123,\n        RedirectConfig = new RedirectConfigProperty {\n            StatusCode = \"statusCode\",\n\n            // the properties below are optional\n            Host = \"host\",\n            Path = \"path\",\n            Port = \"port\",\n            Protocol = \"protocol\",\n            Query = \"query\"\n        },\n        TargetGroupArn = \"targetGroupArn\"\n    } },\n    LoadBalancerArn = \"loadBalancerArn\",\n\n    // the properties below are optional\n    AlpnPolicy = new [] { \"alpnPolicy\" },\n    Certificates = new [] { new CertificateProperty {\n        CertificateArn = \"certificateArn\"\n    } },\n    Port = 123,\n    Protocol = \"protocol\",\n    SslPolicy = \"sslPolicy\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nCfnListener cfnListener = CfnListener.Builder.create(this, \"MyCfnListener\")\n        .defaultActions(List.of(ActionProperty.builder()\n                .type(\"type\")\n\n                // the properties below are optional\n                .authenticateCognitoConfig(AuthenticateCognitoConfigProperty.builder()\n                        .userPoolArn(\"userPoolArn\")\n                        .userPoolClientId(\"userPoolClientId\")\n                        .userPoolDomain(\"userPoolDomain\")\n\n                        // the properties below are optional\n                        .authenticationRequestExtraParams(Map.of(\n                                \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n                        .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n                        .scope(\"scope\")\n                        .sessionCookieName(\"sessionCookieName\")\n                        .sessionTimeout(\"sessionTimeout\")\n                        .build())\n                .authenticateOidcConfig(AuthenticateOidcConfigProperty.builder()\n                        .authorizationEndpoint(\"authorizationEndpoint\")\n                        .clientId(\"clientId\")\n                        .issuer(\"issuer\")\n                        .tokenEndpoint(\"tokenEndpoint\")\n                        .userInfoEndpoint(\"userInfoEndpoint\")\n\n                        // the properties below are optional\n                        .authenticationRequestExtraParams(Map.of(\n                                \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n                        .clientSecret(\"clientSecret\")\n                        .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n                        .scope(\"scope\")\n                        .sessionCookieName(\"sessionCookieName\")\n                        .sessionTimeout(\"sessionTimeout\")\n                        .useExistingClientSecret(false)\n                        .build())\n                .fixedResponseConfig(FixedResponseConfigProperty.builder()\n                        .statusCode(\"statusCode\")\n\n                        // the properties below are optional\n                        .contentType(\"contentType\")\n                        .messageBody(\"messageBody\")\n                        .build())\n                .forwardConfig(ForwardConfigProperty.builder()\n                        .targetGroups(List.of(TargetGroupTupleProperty.builder()\n                                .targetGroupArn(\"targetGroupArn\")\n                                .weight(123)\n                                .build()))\n                        .targetGroupStickinessConfig(TargetGroupStickinessConfigProperty.builder()\n                                .durationSeconds(123)\n                                .enabled(false)\n                                .build())\n                        .build())\n                .order(123)\n                .redirectConfig(RedirectConfigProperty.builder()\n                        .statusCode(\"statusCode\")\n\n                        // the properties below are optional\n                        .host(\"host\")\n                        .path(\"path\")\n                        .port(\"port\")\n                        .protocol(\"protocol\")\n                        .query(\"query\")\n                        .build())\n                .targetGroupArn(\"targetGroupArn\")\n                .build()))\n        .loadBalancerArn(\"loadBalancerArn\")\n\n        // the properties below are optional\n        .alpnPolicy(List.of(\"alpnPolicy\"))\n        .certificates(List.of(CertificateProperty.builder()\n                .certificateArn(\"certificateArn\")\n                .build()))\n        .port(123)\n        .protocol(\"protocol\")\n        .sslPolicy(\"sslPolicy\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ncfnListener := elbv2.NewCfnListener(this, jsii.String(\"MyCfnListener\"), &cfnListenerProps{\n\tdefaultActions: []interface{}{\n\t\t&actionProperty{\n\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t// the properties below are optional\n\t\t\tauthenticateCognitoConfig: &authenticateCognitoConfigProperty{\n\t\t\t\tuserPoolArn: jsii.String(\"userPoolArn\"),\n\t\t\t\tuserPoolClientId: jsii.String(\"userPoolClientId\"),\n\t\t\t\tuserPoolDomain: jsii.String(\"userPoolDomain\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\t\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t\t\t\t},\n\t\t\t\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\t\t\t\tsessionTimeout: jsii.String(\"sessionTimeout\"),\n\t\t\t},\n\t\t\tauthenticateOidcConfig: &authenticateOidcConfigProperty{\n\t\t\t\tauthorizationEndpoint: jsii.String(\"authorizationEndpoint\"),\n\t\t\t\tclientId: jsii.String(\"clientId\"),\n\t\t\t\tissuer: jsii.String(\"issuer\"),\n\t\t\t\ttokenEndpoint: jsii.String(\"tokenEndpoint\"),\n\t\t\t\tuserInfoEndpoint: jsii.String(\"userInfoEndpoint\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\t\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t\t\t\t},\n\t\t\t\tclientSecret: jsii.String(\"clientSecret\"),\n\t\t\t\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\t\t\t\tsessionTimeout: jsii.String(\"sessionTimeout\"),\n\t\t\t\tuseExistingClientSecret: jsii.Boolean(false),\n\t\t\t},\n\t\t\tfixedResponseConfig: &fixedResponseConfigProperty{\n\t\t\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcontentType: jsii.String(\"contentType\"),\n\t\t\t\tmessageBody: jsii.String(\"messageBody\"),\n\t\t\t},\n\t\t\tforwardConfig: &forwardConfigProperty{\n\t\t\t\ttargetGroups: []interface{}{\n\t\t\t\t\t&targetGroupTupleProperty{\n\t\t\t\t\t\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\t\t\t\t\t\tweight: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttargetGroupStickinessConfig: &targetGroupStickinessConfigProperty{\n\t\t\t\t\tdurationSeconds: jsii.Number(123),\n\t\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t},\n\t\t\torder: jsii.Number(123),\n\t\t\tredirectConfig: &redirectConfigProperty{\n\t\t\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\thost: jsii.String(\"host\"),\n\t\t\t\tpath: jsii.String(\"path\"),\n\t\t\t\tport: jsii.String(\"port\"),\n\t\t\t\tprotocol: jsii.String(\"protocol\"),\n\t\t\t\tquery: jsii.String(\"query\"),\n\t\t\t},\n\t\t\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\t\t},\n\t},\n\tloadBalancerArn: jsii.String(\"loadBalancerArn\"),\n\n\t// the properties below are optional\n\talpnPolicy: []*string{\n\t\tjsii.String(\"alpnPolicy\"),\n\t},\n\tcertificates: []interface{}{\n\t\t&certificateProperty{\n\t\t\tcertificateArn: jsii.String(\"certificateArn\"),\n\t\t},\n\t},\n\tport: jsii.Number(123),\n\tprotocol: jsii.String(\"protocol\"),\n\tsslPolicy: jsii.String(\"sslPolicy\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnListener = new elbv2.CfnListener(this, 'MyCfnListener', {\n  defaultActions: [{\n    type: 'type',\n\n    // the properties below are optional\n    authenticateCognitoConfig: {\n      userPoolArn: 'userPoolArn',\n      userPoolClientId: 'userPoolClientId',\n      userPoolDomain: 'userPoolDomain',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 'sessionTimeout',\n    },\n    authenticateOidcConfig: {\n      authorizationEndpoint: 'authorizationEndpoint',\n      clientId: 'clientId',\n      issuer: 'issuer',\n      tokenEndpoint: 'tokenEndpoint',\n      userInfoEndpoint: 'userInfoEndpoint',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      clientSecret: 'clientSecret',\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 'sessionTimeout',\n      useExistingClientSecret: false,\n    },\n    fixedResponseConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      contentType: 'contentType',\n      messageBody: 'messageBody',\n    },\n    forwardConfig: {\n      targetGroups: [{\n        targetGroupArn: 'targetGroupArn',\n        weight: 123,\n      }],\n      targetGroupStickinessConfig: {\n        durationSeconds: 123,\n        enabled: false,\n      },\n    },\n    order: 123,\n    redirectConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      host: 'host',\n      path: 'path',\n      port: 'port',\n      protocol: 'protocol',\n      query: 'query',\n    },\n    targetGroupArn: 'targetGroupArn',\n  }],\n  loadBalancerArn: 'loadBalancerArn',\n\n  // the properties below are optional\n  alpnPolicy: ['alpnPolicy'],\n  certificates: [{\n    certificateArn: 'certificateArn',\n  }],\n  port: 123,\n  protocol: 'protocol',\n  sslPolicy: 'sslPolicy',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListener",
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnListener = new elbv2.CfnListener(this, 'MyCfnListener', {\n  defaultActions: [{\n    type: 'type',\n\n    // the properties below are optional\n    authenticateCognitoConfig: {\n      userPoolArn: 'userPoolArn',\n      userPoolClientId: 'userPoolClientId',\n      userPoolDomain: 'userPoolDomain',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 'sessionTimeout',\n    },\n    authenticateOidcConfig: {\n      authorizationEndpoint: 'authorizationEndpoint',\n      clientId: 'clientId',\n      issuer: 'issuer',\n      tokenEndpoint: 'tokenEndpoint',\n      userInfoEndpoint: 'userInfoEndpoint',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      clientSecret: 'clientSecret',\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 'sessionTimeout',\n      useExistingClientSecret: false,\n    },\n    fixedResponseConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      contentType: 'contentType',\n      messageBody: 'messageBody',\n    },\n    forwardConfig: {\n      targetGroups: [{\n        targetGroupArn: 'targetGroupArn',\n        weight: 123,\n      }],\n      targetGroupStickinessConfig: {\n        durationSeconds: 123,\n        enabled: false,\n      },\n    },\n    order: 123,\n    redirectConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      host: 'host',\n      path: 'path',\n      port: 'port',\n      protocol: 'protocol',\n      query: 'query',\n    },\n    targetGroupArn: 'targetGroupArn',\n  }],\n  loadBalancerArn: 'loadBalancerArn',\n\n  // the properties below are optional\n  alpnPolicy: ['alpnPolicy'],\n  certificates: [{\n    certificateArn: 'certificateArn',\n  }],\n  port: 123,\n  protocol: 'protocol',\n  sslPolicy: 'sslPolicy',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 38,
        "75": 57,
        "91": 2,
        "104": 1,
        "192": 4,
        "193": 12,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 53,
        "290": 1
      },
      "fqnsFingerprint": "ccaf45d79ab33031beddd6e9377bfcc79899ccb87b4ffafeea825c87971f4685"
    },
    "56c79d278cc4107a96e63c3b5f4effd45301c3cff6b5e27184bef2b04f1346f1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\naction_property = elbv2.CfnListener.ActionProperty(\n    type=\"type\",\n\n    # the properties below are optional\n    authenticate_cognito_config=elbv2.CfnListener.AuthenticateCognitoConfigProperty(\n        user_pool_arn=\"userPoolArn\",\n        user_pool_client_id=\"userPoolClientId\",\n        user_pool_domain=\"userPoolDomain\",\n\n        # the properties below are optional\n        authentication_request_extra_params={\n            \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n        },\n        on_unauthenticated_request=\"onUnauthenticatedRequest\",\n        scope=\"scope\",\n        session_cookie_name=\"sessionCookieName\",\n        session_timeout=\"sessionTimeout\"\n    ),\n    authenticate_oidc_config=elbv2.CfnListener.AuthenticateOidcConfigProperty(\n        authorization_endpoint=\"authorizationEndpoint\",\n        client_id=\"clientId\",\n        issuer=\"issuer\",\n        token_endpoint=\"tokenEndpoint\",\n        user_info_endpoint=\"userInfoEndpoint\",\n\n        # the properties below are optional\n        authentication_request_extra_params={\n            \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n        },\n        client_secret=\"clientSecret\",\n        on_unauthenticated_request=\"onUnauthenticatedRequest\",\n        scope=\"scope\",\n        session_cookie_name=\"sessionCookieName\",\n        session_timeout=\"sessionTimeout\",\n        use_existing_client_secret=False\n    ),\n    fixed_response_config=elbv2.CfnListener.FixedResponseConfigProperty(\n        status_code=\"statusCode\",\n\n        # the properties below are optional\n        content_type=\"contentType\",\n        message_body=\"messageBody\"\n    ),\n    forward_config=elbv2.CfnListener.ForwardConfigProperty(\n        target_groups=[elbv2.CfnListener.TargetGroupTupleProperty(\n            target_group_arn=\"targetGroupArn\",\n            weight=123\n        )],\n        target_group_stickiness_config=elbv2.CfnListener.TargetGroupStickinessConfigProperty(\n            duration_seconds=123,\n            enabled=False\n        )\n    ),\n    order=123,\n    redirect_config=elbv2.CfnListener.RedirectConfigProperty(\n        status_code=\"statusCode\",\n\n        # the properties below are optional\n        host=\"host\",\n        path=\"path\",\n        port=\"port\",\n        protocol=\"protocol\",\n        query=\"query\"\n    ),\n    target_group_arn=\"targetGroupArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nActionProperty actionProperty = new ActionProperty {\n    Type = \"type\",\n\n    // the properties below are optional\n    AuthenticateCognitoConfig = new AuthenticateCognitoConfigProperty {\n        UserPoolArn = \"userPoolArn\",\n        UserPoolClientId = \"userPoolClientId\",\n        UserPoolDomain = \"userPoolDomain\",\n\n        // the properties below are optional\n        AuthenticationRequestExtraParams = new Dictionary<string, string> {\n            { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n        },\n        OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n        Scope = \"scope\",\n        SessionCookieName = \"sessionCookieName\",\n        SessionTimeout = \"sessionTimeout\"\n    },\n    AuthenticateOidcConfig = new AuthenticateOidcConfigProperty {\n        AuthorizationEndpoint = \"authorizationEndpoint\",\n        ClientId = \"clientId\",\n        Issuer = \"issuer\",\n        TokenEndpoint = \"tokenEndpoint\",\n        UserInfoEndpoint = \"userInfoEndpoint\",\n\n        // the properties below are optional\n        AuthenticationRequestExtraParams = new Dictionary<string, string> {\n            { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n        },\n        ClientSecret = \"clientSecret\",\n        OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n        Scope = \"scope\",\n        SessionCookieName = \"sessionCookieName\",\n        SessionTimeout = \"sessionTimeout\",\n        UseExistingClientSecret = false\n    },\n    FixedResponseConfig = new FixedResponseConfigProperty {\n        StatusCode = \"statusCode\",\n\n        // the properties below are optional\n        ContentType = \"contentType\",\n        MessageBody = \"messageBody\"\n    },\n    ForwardConfig = new ForwardConfigProperty {\n        TargetGroups = new [] { new TargetGroupTupleProperty {\n            TargetGroupArn = \"targetGroupArn\",\n            Weight = 123\n        } },\n        TargetGroupStickinessConfig = new TargetGroupStickinessConfigProperty {\n            DurationSeconds = 123,\n            Enabled = false\n        }\n    },\n    Order = 123,\n    RedirectConfig = new RedirectConfigProperty {\n        StatusCode = \"statusCode\",\n\n        // the properties below are optional\n        Host = \"host\",\n        Path = \"path\",\n        Port = \"port\",\n        Protocol = \"protocol\",\n        Query = \"query\"\n    },\n    TargetGroupArn = \"targetGroupArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nActionProperty actionProperty = ActionProperty.builder()\n        .type(\"type\")\n\n        // the properties below are optional\n        .authenticateCognitoConfig(AuthenticateCognitoConfigProperty.builder()\n                .userPoolArn(\"userPoolArn\")\n                .userPoolClientId(\"userPoolClientId\")\n                .userPoolDomain(\"userPoolDomain\")\n\n                // the properties below are optional\n                .authenticationRequestExtraParams(Map.of(\n                        \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n                .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n                .scope(\"scope\")\n                .sessionCookieName(\"sessionCookieName\")\n                .sessionTimeout(\"sessionTimeout\")\n                .build())\n        .authenticateOidcConfig(AuthenticateOidcConfigProperty.builder()\n                .authorizationEndpoint(\"authorizationEndpoint\")\n                .clientId(\"clientId\")\n                .issuer(\"issuer\")\n                .tokenEndpoint(\"tokenEndpoint\")\n                .userInfoEndpoint(\"userInfoEndpoint\")\n\n                // the properties below are optional\n                .authenticationRequestExtraParams(Map.of(\n                        \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n                .clientSecret(\"clientSecret\")\n                .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n                .scope(\"scope\")\n                .sessionCookieName(\"sessionCookieName\")\n                .sessionTimeout(\"sessionTimeout\")\n                .useExistingClientSecret(false)\n                .build())\n        .fixedResponseConfig(FixedResponseConfigProperty.builder()\n                .statusCode(\"statusCode\")\n\n                // the properties below are optional\n                .contentType(\"contentType\")\n                .messageBody(\"messageBody\")\n                .build())\n        .forwardConfig(ForwardConfigProperty.builder()\n                .targetGroups(List.of(TargetGroupTupleProperty.builder()\n                        .targetGroupArn(\"targetGroupArn\")\n                        .weight(123)\n                        .build()))\n                .targetGroupStickinessConfig(TargetGroupStickinessConfigProperty.builder()\n                        .durationSeconds(123)\n                        .enabled(false)\n                        .build())\n                .build())\n        .order(123)\n        .redirectConfig(RedirectConfigProperty.builder()\n                .statusCode(\"statusCode\")\n\n                // the properties below are optional\n                .host(\"host\")\n                .path(\"path\")\n                .port(\"port\")\n                .protocol(\"protocol\")\n                .query(\"query\")\n                .build())\n        .targetGroupArn(\"targetGroupArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nactionProperty := &actionProperty{\n\ttype: jsii.String(\"type\"),\n\n\t// the properties below are optional\n\tauthenticateCognitoConfig: &authenticateCognitoConfigProperty{\n\t\tuserPoolArn: jsii.String(\"userPoolArn\"),\n\t\tuserPoolClientId: jsii.String(\"userPoolClientId\"),\n\t\tuserPoolDomain: jsii.String(\"userPoolDomain\"),\n\n\t\t// the properties below are optional\n\t\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t\t},\n\t\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\t\tscope: jsii.String(\"scope\"),\n\t\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\t\tsessionTimeout: jsii.String(\"sessionTimeout\"),\n\t},\n\tauthenticateOidcConfig: &authenticateOidcConfigProperty{\n\t\tauthorizationEndpoint: jsii.String(\"authorizationEndpoint\"),\n\t\tclientId: jsii.String(\"clientId\"),\n\t\tissuer: jsii.String(\"issuer\"),\n\t\ttokenEndpoint: jsii.String(\"tokenEndpoint\"),\n\t\tuserInfoEndpoint: jsii.String(\"userInfoEndpoint\"),\n\n\t\t// the properties below are optional\n\t\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t\t},\n\t\tclientSecret: jsii.String(\"clientSecret\"),\n\t\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\t\tscope: jsii.String(\"scope\"),\n\t\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\t\tsessionTimeout: jsii.String(\"sessionTimeout\"),\n\t\tuseExistingClientSecret: jsii.Boolean(false),\n\t},\n\tfixedResponseConfig: &fixedResponseConfigProperty{\n\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t// the properties below are optional\n\t\tcontentType: jsii.String(\"contentType\"),\n\t\tmessageBody: jsii.String(\"messageBody\"),\n\t},\n\tforwardConfig: &forwardConfigProperty{\n\t\ttargetGroups: []interface{}{\n\t\t\t&targetGroupTupleProperty{\n\t\t\t\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\t\t\t\tweight: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t\ttargetGroupStickinessConfig: &targetGroupStickinessConfigProperty{\n\t\t\tdurationSeconds: jsii.Number(123),\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t},\n\torder: jsii.Number(123),\n\tredirectConfig: &redirectConfigProperty{\n\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t// the properties below are optional\n\t\thost: jsii.String(\"host\"),\n\t\tpath: jsii.String(\"path\"),\n\t\tport: jsii.String(\"port\"),\n\t\tprotocol: jsii.String(\"protocol\"),\n\t\tquery: jsii.String(\"query\"),\n\t},\n\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst actionProperty: elbv2.CfnListener.ActionProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  authenticateCognitoConfig: {\n    userPoolArn: 'userPoolArn',\n    userPoolClientId: 'userPoolClientId',\n    userPoolDomain: 'userPoolDomain',\n\n    // the properties below are optional\n    authenticationRequestExtraParams: {\n      authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n    },\n    onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n    scope: 'scope',\n    sessionCookieName: 'sessionCookieName',\n    sessionTimeout: 'sessionTimeout',\n  },\n  authenticateOidcConfig: {\n    authorizationEndpoint: 'authorizationEndpoint',\n    clientId: 'clientId',\n    issuer: 'issuer',\n    tokenEndpoint: 'tokenEndpoint',\n    userInfoEndpoint: 'userInfoEndpoint',\n\n    // the properties below are optional\n    authenticationRequestExtraParams: {\n      authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n    },\n    clientSecret: 'clientSecret',\n    onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n    scope: 'scope',\n    sessionCookieName: 'sessionCookieName',\n    sessionTimeout: 'sessionTimeout',\n    useExistingClientSecret: false,\n  },\n  fixedResponseConfig: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    contentType: 'contentType',\n    messageBody: 'messageBody',\n  },\n  forwardConfig: {\n    targetGroups: [{\n      targetGroupArn: 'targetGroupArn',\n      weight: 123,\n    }],\n    targetGroupStickinessConfig: {\n      durationSeconds: 123,\n      enabled: false,\n    },\n  },\n  order: 123,\n  redirectConfig: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    host: 'host',\n    path: 'path',\n    port: 'port',\n    protocol: 'protocol',\n    query: 'query',\n  },\n  targetGroupArn: 'targetGroupArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst actionProperty: elbv2.CfnListener.ActionProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  authenticateCognitoConfig: {\n    userPoolArn: 'userPoolArn',\n    userPoolClientId: 'userPoolClientId',\n    userPoolDomain: 'userPoolDomain',\n\n    // the properties below are optional\n    authenticationRequestExtraParams: {\n      authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n    },\n    onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n    scope: 'scope',\n    sessionCookieName: 'sessionCookieName',\n    sessionTimeout: 'sessionTimeout',\n  },\n  authenticateOidcConfig: {\n    authorizationEndpoint: 'authorizationEndpoint',\n    clientId: 'clientId',\n    issuer: 'issuer',\n    tokenEndpoint: 'tokenEndpoint',\n    userInfoEndpoint: 'userInfoEndpoint',\n\n    // the properties below are optional\n    authenticationRequestExtraParams: {\n      authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n    },\n    clientSecret: 'clientSecret',\n    onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n    scope: 'scope',\n    sessionCookieName: 'sessionCookieName',\n    sessionTimeout: 'sessionTimeout',\n    useExistingClientSecret: false,\n  },\n  fixedResponseConfig: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    contentType: 'contentType',\n    messageBody: 'messageBody',\n  },\n  forwardConfig: {\n    targetGroups: [{\n      targetGroupArn: 'targetGroupArn',\n      weight: 123,\n    }],\n    targetGroupStickinessConfig: {\n      durationSeconds: 123,\n      enabled: false,\n    },\n  },\n  order: 123,\n  redirectConfig: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    host: 'host',\n    path: 'path',\n    port: 'port',\n    protocol: 'protocol',\n    query: 'query',\n  },\n  targetGroupArn: 'targetGroupArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 32,
        "75": 50,
        "91": 2,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 10,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 45,
        "290": 1
      },
      "fqnsFingerprint": "87873fdb8173ebd7f48503c26b0a0b766f7709e80d5bc76469fc973282142435"
    },
    "ac6249840c443de06a5a94b4cbba3acc917fc00a892529796a1dd9bd67140390": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nauthenticate_cognito_config_property = elbv2.CfnListener.AuthenticateCognitoConfigProperty(\n    user_pool_arn=\"userPoolArn\",\n    user_pool_client_id=\"userPoolClientId\",\n    user_pool_domain=\"userPoolDomain\",\n\n    # the properties below are optional\n    authentication_request_extra_params={\n        \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n    },\n    on_unauthenticated_request=\"onUnauthenticatedRequest\",\n    scope=\"scope\",\n    session_cookie_name=\"sessionCookieName\",\n    session_timeout=\"sessionTimeout\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nAuthenticateCognitoConfigProperty authenticateCognitoConfigProperty = new AuthenticateCognitoConfigProperty {\n    UserPoolArn = \"userPoolArn\",\n    UserPoolClientId = \"userPoolClientId\",\n    UserPoolDomain = \"userPoolDomain\",\n\n    // the properties below are optional\n    AuthenticationRequestExtraParams = new Dictionary<string, string> {\n        { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n    },\n    OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n    Scope = \"scope\",\n    SessionCookieName = \"sessionCookieName\",\n    SessionTimeout = \"sessionTimeout\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nAuthenticateCognitoConfigProperty authenticateCognitoConfigProperty = AuthenticateCognitoConfigProperty.builder()\n        .userPoolArn(\"userPoolArn\")\n        .userPoolClientId(\"userPoolClientId\")\n        .userPoolDomain(\"userPoolDomain\")\n\n        // the properties below are optional\n        .authenticationRequestExtraParams(Map.of(\n                \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n        .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n        .scope(\"scope\")\n        .sessionCookieName(\"sessionCookieName\")\n        .sessionTimeout(\"sessionTimeout\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nauthenticateCognitoConfigProperty := &authenticateCognitoConfigProperty{\n\tuserPoolArn: jsii.String(\"userPoolArn\"),\n\tuserPoolClientId: jsii.String(\"userPoolClientId\"),\n\tuserPoolDomain: jsii.String(\"userPoolDomain\"),\n\n\t// the properties below are optional\n\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t},\n\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\tscope: jsii.String(\"scope\"),\n\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\tsessionTimeout: jsii.String(\"sessionTimeout\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst authenticateCognitoConfigProperty: elbv2.CfnListener.AuthenticateCognitoConfigProperty = {\n  userPoolArn: 'userPoolArn',\n  userPoolClientId: 'userPoolClientId',\n  userPoolDomain: 'userPoolDomain',\n\n  // the properties below are optional\n  authenticationRequestExtraParams: {\n    authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n  },\n  onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n  scope: 'scope',\n  sessionCookieName: 'sessionCookieName',\n  sessionTimeout: 'sessionTimeout',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.AuthenticateCognitoConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.AuthenticateCognitoConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst authenticateCognitoConfigProperty: elbv2.CfnListener.AuthenticateCognitoConfigProperty = {\n  userPoolArn: 'userPoolArn',\n  userPoolClientId: 'userPoolClientId',\n  userPoolDomain: 'userPoolDomain',\n\n  // the properties below are optional\n  authenticationRequestExtraParams: {\n    authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n  },\n  onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n  scope: 'scope',\n  sessionCookieName: 'sessionCookieName',\n  sessionTimeout: 'sessionTimeout',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 14,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "d59daed2d1878114f416f65a1cd305961d80c92c704b99eeafd80df9c447db03"
    },
    "f7cf28436e6b5128e4b5ba64331a382cb198c3d67381024390983bc7da5bd0a8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nauthenticate_oidc_config_property = elbv2.CfnListener.AuthenticateOidcConfigProperty(\n    authorization_endpoint=\"authorizationEndpoint\",\n    client_id=\"clientId\",\n    issuer=\"issuer\",\n    token_endpoint=\"tokenEndpoint\",\n    user_info_endpoint=\"userInfoEndpoint\",\n\n    # the properties below are optional\n    authentication_request_extra_params={\n        \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n    },\n    client_secret=\"clientSecret\",\n    on_unauthenticated_request=\"onUnauthenticatedRequest\",\n    scope=\"scope\",\n    session_cookie_name=\"sessionCookieName\",\n    session_timeout=\"sessionTimeout\",\n    use_existing_client_secret=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nAuthenticateOidcConfigProperty authenticateOidcConfigProperty = new AuthenticateOidcConfigProperty {\n    AuthorizationEndpoint = \"authorizationEndpoint\",\n    ClientId = \"clientId\",\n    Issuer = \"issuer\",\n    TokenEndpoint = \"tokenEndpoint\",\n    UserInfoEndpoint = \"userInfoEndpoint\",\n\n    // the properties below are optional\n    AuthenticationRequestExtraParams = new Dictionary<string, string> {\n        { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n    },\n    ClientSecret = \"clientSecret\",\n    OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n    Scope = \"scope\",\n    SessionCookieName = \"sessionCookieName\",\n    SessionTimeout = \"sessionTimeout\",\n    UseExistingClientSecret = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nAuthenticateOidcConfigProperty authenticateOidcConfigProperty = AuthenticateOidcConfigProperty.builder()\n        .authorizationEndpoint(\"authorizationEndpoint\")\n        .clientId(\"clientId\")\n        .issuer(\"issuer\")\n        .tokenEndpoint(\"tokenEndpoint\")\n        .userInfoEndpoint(\"userInfoEndpoint\")\n\n        // the properties below are optional\n        .authenticationRequestExtraParams(Map.of(\n                \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n        .clientSecret(\"clientSecret\")\n        .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n        .scope(\"scope\")\n        .sessionCookieName(\"sessionCookieName\")\n        .sessionTimeout(\"sessionTimeout\")\n        .useExistingClientSecret(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nauthenticateOidcConfigProperty := &authenticateOidcConfigProperty{\n\tauthorizationEndpoint: jsii.String(\"authorizationEndpoint\"),\n\tclientId: jsii.String(\"clientId\"),\n\tissuer: jsii.String(\"issuer\"),\n\ttokenEndpoint: jsii.String(\"tokenEndpoint\"),\n\tuserInfoEndpoint: jsii.String(\"userInfoEndpoint\"),\n\n\t// the properties below are optional\n\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t},\n\tclientSecret: jsii.String(\"clientSecret\"),\n\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\tscope: jsii.String(\"scope\"),\n\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\tsessionTimeout: jsii.String(\"sessionTimeout\"),\n\tuseExistingClientSecret: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst authenticateOidcConfigProperty: elbv2.CfnListener.AuthenticateOidcConfigProperty = {\n  authorizationEndpoint: 'authorizationEndpoint',\n  clientId: 'clientId',\n  issuer: 'issuer',\n  tokenEndpoint: 'tokenEndpoint',\n  userInfoEndpoint: 'userInfoEndpoint',\n\n  // the properties below are optional\n  authenticationRequestExtraParams: {\n    authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n  },\n  clientSecret: 'clientSecret',\n  onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n  scope: 'scope',\n  sessionCookieName: 'sessionCookieName',\n  sessionTimeout: 'sessionTimeout',\n  useExistingClientSecret: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.AuthenticateOidcConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.AuthenticateOidcConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst authenticateOidcConfigProperty: elbv2.CfnListener.AuthenticateOidcConfigProperty = {\n  authorizationEndpoint: 'authorizationEndpoint',\n  clientId: 'clientId',\n  issuer: 'issuer',\n  tokenEndpoint: 'tokenEndpoint',\n  userInfoEndpoint: 'userInfoEndpoint',\n\n  // the properties below are optional\n  authenticationRequestExtraParams: {\n    authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n  },\n  clientSecret: 'clientSecret',\n  onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n  scope: 'scope',\n  sessionCookieName: 'sessionCookieName',\n  sessionTimeout: 'sessionTimeout',\n  useExistingClientSecret: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 12,
        "75": 18,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "dcebc1b1ea54f698906b2d15044fc611a01694bc623adb30ada8375d9e9f4ae4"
    },
    "ea9013dab7e7ce934859631f387b31ee65e1de993eaae6e8b33b56388411637b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ncertificate_property = elbv2.CfnListener.CertificateProperty(\n    certificate_arn=\"certificateArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nCertificateProperty certificateProperty = new CertificateProperty {\n    CertificateArn = \"certificateArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nCertificateProperty certificateProperty = CertificateProperty.builder()\n        .certificateArn(\"certificateArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ncertificateProperty := &certificateProperty{\n\tcertificateArn: jsii.String(\"certificateArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst certificateProperty: elbv2.CfnListener.CertificateProperty = {\n  certificateArn: 'certificateArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.CertificateProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.CertificateProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst certificateProperty: elbv2.CfnListener.CertificateProperty = {\n  certificateArn: 'certificateArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "425f7b2fff7d0f20004830476c8a70866ec636145fa6b47ad64549167b46f709"
    },
    "9765bbecf087d190eb9efd22ec22f544521f534c91b3f07d79fc365b9397411b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nfixed_response_config_property = elbv2.CfnListener.FixedResponseConfigProperty(\n    status_code=\"statusCode\",\n\n    # the properties below are optional\n    content_type=\"contentType\",\n    message_body=\"messageBody\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nFixedResponseConfigProperty fixedResponseConfigProperty = new FixedResponseConfigProperty {\n    StatusCode = \"statusCode\",\n\n    // the properties below are optional\n    ContentType = \"contentType\",\n    MessageBody = \"messageBody\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nFixedResponseConfigProperty fixedResponseConfigProperty = FixedResponseConfigProperty.builder()\n        .statusCode(\"statusCode\")\n\n        // the properties below are optional\n        .contentType(\"contentType\")\n        .messageBody(\"messageBody\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nfixedResponseConfigProperty := &fixedResponseConfigProperty{\n\tstatusCode: jsii.String(\"statusCode\"),\n\n\t// the properties below are optional\n\tcontentType: jsii.String(\"contentType\"),\n\tmessageBody: jsii.String(\"messageBody\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst fixedResponseConfigProperty: elbv2.CfnListener.FixedResponseConfigProperty = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  contentType: 'contentType',\n  messageBody: 'messageBody',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.FixedResponseConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.FixedResponseConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst fixedResponseConfigProperty: elbv2.CfnListener.FixedResponseConfigProperty = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  contentType: 'contentType',\n  messageBody: 'messageBody',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "36d49968a3a0c346fe1befaca93f9b7b423782f9c2d401cf5d4d83422fe5ef32"
    },
    "1c645bc6844260c8de568e0562bacc2877e9a0a639b96962d72b76e8bfe6cbe2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nforward_config_property = elbv2.CfnListener.ForwardConfigProperty(\n    target_groups=[elbv2.CfnListener.TargetGroupTupleProperty(\n        target_group_arn=\"targetGroupArn\",\n        weight=123\n    )],\n    target_group_stickiness_config=elbv2.CfnListener.TargetGroupStickinessConfigProperty(\n        duration_seconds=123,\n        enabled=False\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nForwardConfigProperty forwardConfigProperty = new ForwardConfigProperty {\n    TargetGroups = new [] { new TargetGroupTupleProperty {\n        TargetGroupArn = \"targetGroupArn\",\n        Weight = 123\n    } },\n    TargetGroupStickinessConfig = new TargetGroupStickinessConfigProperty {\n        DurationSeconds = 123,\n        Enabled = false\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nForwardConfigProperty forwardConfigProperty = ForwardConfigProperty.builder()\n        .targetGroups(List.of(TargetGroupTupleProperty.builder()\n                .targetGroupArn(\"targetGroupArn\")\n                .weight(123)\n                .build()))\n        .targetGroupStickinessConfig(TargetGroupStickinessConfigProperty.builder()\n                .durationSeconds(123)\n                .enabled(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nforwardConfigProperty := &forwardConfigProperty{\n\ttargetGroups: []interface{}{\n\t\t&targetGroupTupleProperty{\n\t\t\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\t\t\tweight: jsii.Number(123),\n\t\t},\n\t},\n\ttargetGroupStickinessConfig: &targetGroupStickinessConfigProperty{\n\t\tdurationSeconds: jsii.Number(123),\n\t\tenabled: jsii.Boolean(false),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst forwardConfigProperty: elbv2.CfnListener.ForwardConfigProperty = {\n  targetGroups: [{\n    targetGroupArn: 'targetGroupArn',\n    weight: 123,\n  }],\n  targetGroupStickinessConfig: {\n    durationSeconds: 123,\n    enabled: false,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ForwardConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ForwardConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst forwardConfigProperty: elbv2.CfnListener.ForwardConfigProperty = {\n  targetGroups: [{\n    targetGroupArn: 'targetGroupArn',\n    weight: 123,\n  }],\n  targetGroupStickinessConfig: {\n    durationSeconds: 123,\n    enabled: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 11,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "4fdba60f8ce2e86fde675cb1bc6dcdac1477398f5fa31a8f6e77fb2416a06dd9"
    },
    "fe109ea789f0449a6aa3df6ddc93e722bc7c3a6db5b485b2b1c95325e41fee01": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nredirect_config_property = elbv2.CfnListener.RedirectConfigProperty(\n    status_code=\"statusCode\",\n\n    # the properties below are optional\n    host=\"host\",\n    path=\"path\",\n    port=\"port\",\n    protocol=\"protocol\",\n    query=\"query\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nRedirectConfigProperty redirectConfigProperty = new RedirectConfigProperty {\n    StatusCode = \"statusCode\",\n\n    // the properties below are optional\n    Host = \"host\",\n    Path = \"path\",\n    Port = \"port\",\n    Protocol = \"protocol\",\n    Query = \"query\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nRedirectConfigProperty redirectConfigProperty = RedirectConfigProperty.builder()\n        .statusCode(\"statusCode\")\n\n        // the properties below are optional\n        .host(\"host\")\n        .path(\"path\")\n        .port(\"port\")\n        .protocol(\"protocol\")\n        .query(\"query\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nredirectConfigProperty := &redirectConfigProperty{\n\tstatusCode: jsii.String(\"statusCode\"),\n\n\t// the properties below are optional\n\thost: jsii.String(\"host\"),\n\tpath: jsii.String(\"path\"),\n\tport: jsii.String(\"port\"),\n\tprotocol: jsii.String(\"protocol\"),\n\tquery: jsii.String(\"query\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst redirectConfigProperty: elbv2.CfnListener.RedirectConfigProperty = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  host: 'host',\n  path: 'path',\n  port: 'port',\n  protocol: 'protocol',\n  query: 'query',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.RedirectConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.RedirectConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst redirectConfigProperty: elbv2.CfnListener.RedirectConfigProperty = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  host: 'host',\n  path: 'path',\n  port: 'port',\n  protocol: 'protocol',\n  query: 'query',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 11,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "d27a88a60a56ace7ffe3a0c5d359372abf1457c9d190d075e6c04aa6a36bc410"
    },
    "32bd4e57bc262570919ee932167d49b6f01f135038ba66aa1f53f40bfaa72efc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ntarget_group_stickiness_config_property = elbv2.CfnListener.TargetGroupStickinessConfigProperty(\n    duration_seconds=123,\n    enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nTargetGroupStickinessConfigProperty targetGroupStickinessConfigProperty = new TargetGroupStickinessConfigProperty {\n    DurationSeconds = 123,\n    Enabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nTargetGroupStickinessConfigProperty targetGroupStickinessConfigProperty = TargetGroupStickinessConfigProperty.builder()\n        .durationSeconds(123)\n        .enabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ntargetGroupStickinessConfigProperty := &targetGroupStickinessConfigProperty{\n\tdurationSeconds: jsii.Number(123),\n\tenabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetGroupStickinessConfigProperty: elbv2.CfnListener.TargetGroupStickinessConfigProperty = {\n  durationSeconds: 123,\n  enabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.TargetGroupStickinessConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.TargetGroupStickinessConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetGroupStickinessConfigProperty: elbv2.CfnListener.TargetGroupStickinessConfigProperty = {\n  durationSeconds: 123,\n  enabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1104222f3bf84aed53fb647f41e5598d364245ab5f4f918436d6b8b77660b0c5"
    },
    "92628833505da4fac183e399f261639e3d16592d61e91ef30b831a58b2430d0c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ntarget_group_tuple_property = elbv2.CfnListener.TargetGroupTupleProperty(\n    target_group_arn=\"targetGroupArn\",\n    weight=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nTargetGroupTupleProperty targetGroupTupleProperty = new TargetGroupTupleProperty {\n    TargetGroupArn = \"targetGroupArn\",\n    Weight = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nTargetGroupTupleProperty targetGroupTupleProperty = TargetGroupTupleProperty.builder()\n        .targetGroupArn(\"targetGroupArn\")\n        .weight(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ntargetGroupTupleProperty := &targetGroupTupleProperty{\n\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\tweight: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetGroupTupleProperty: elbv2.CfnListener.TargetGroupTupleProperty = {\n  targetGroupArn: 'targetGroupArn',\n  weight: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.TargetGroupTupleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.TargetGroupTupleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetGroupTupleProperty: elbv2.CfnListener.TargetGroupTupleProperty = {\n  targetGroupArn: 'targetGroupArn',\n  weight: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "32b41eb6ba640f3221074ffd0eec468ef2b5fd19170dfe4e0132fd341e8f44a3"
    },
    "31e4d7e2dd913c7d3fd7fa42644a14148b47c86e8fe045ef10d21ac4b90db5ae": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ncfn_listener_certificate = elbv2.CfnListenerCertificate(self, \"MyCfnListenerCertificate\",\n    certificates=[elbv2.CfnListenerCertificate.CertificateProperty(\n        certificate_arn=\"certificateArn\"\n    )],\n    listener_arn=\"listenerArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nCfnListenerCertificate cfnListenerCertificate = new CfnListenerCertificate(this, \"MyCfnListenerCertificate\", new CfnListenerCertificateProps {\n    Certificates = new [] { new CertificateProperty {\n        CertificateArn = \"certificateArn\"\n    } },\n    ListenerArn = \"listenerArn\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nCfnListenerCertificate cfnListenerCertificate = CfnListenerCertificate.Builder.create(this, \"MyCfnListenerCertificate\")\n        .certificates(List.of(CertificateProperty.builder()\n                .certificateArn(\"certificateArn\")\n                .build()))\n        .listenerArn(\"listenerArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ncfnListenerCertificate := elbv2.NewCfnListenerCertificate(this, jsii.String(\"MyCfnListenerCertificate\"), &cfnListenerCertificateProps{\n\tcertificates: []interface{}{\n\t\t&certificateProperty{\n\t\t\tcertificateArn: jsii.String(\"certificateArn\"),\n\t\t},\n\t},\n\tlistenerArn: jsii.String(\"listenerArn\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnListenerCertificate = new elbv2.CfnListenerCertificate(this, 'MyCfnListenerCertificate', {\n  certificates: [{\n    certificateArn: 'certificateArn',\n  }],\n  listenerArn: 'listenerArn',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificate"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificate",
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificateProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnListenerCertificate = new elbv2.CfnListenerCertificate(this, 'MyCfnListenerCertificate', {\n  certificates: [{\n    certificateArn: 'certificateArn',\n  }],\n  listenerArn: 'listenerArn',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 7,
        "104": 1,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "34d52bc9d292f45258138d2eee2d44f0c37cdcfa2b2f08405c6a43165eae8827"
    },
    "fc0edc010bcd0c840f77b899e35f31723bc378476feb35e9872d31653aa23b28": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ncertificate_property = elbv2.CfnListenerCertificate.CertificateProperty(\n    certificate_arn=\"certificateArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nCertificateProperty certificateProperty = new CertificateProperty {\n    CertificateArn = \"certificateArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nCertificateProperty certificateProperty = CertificateProperty.builder()\n        .certificateArn(\"certificateArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ncertificateProperty := &certificateProperty{\n\tcertificateArn: jsii.String(\"certificateArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst certificateProperty: elbv2.CfnListenerCertificate.CertificateProperty = {\n  certificateArn: 'certificateArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificate.CertificateProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificate.CertificateProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst certificateProperty: elbv2.CfnListenerCertificate.CertificateProperty = {\n  certificateArn: 'certificateArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "5b4f3b551429f1522a49cf5af5b56dc7166c45be6d1123d4b6750e80c5635827"
    },
    "9af70fa5b51127fbd364d88f06bd950c040a6386dd8da9b14ab8aba86ce8154e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ncfn_listener_certificate_props = elbv2.CfnListenerCertificateProps(\n    certificates=[elbv2.CfnListenerCertificate.CertificateProperty(\n        certificate_arn=\"certificateArn\"\n    )],\n    listener_arn=\"listenerArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nCfnListenerCertificateProps cfnListenerCertificateProps = new CfnListenerCertificateProps {\n    Certificates = new [] { new CertificateProperty {\n        CertificateArn = \"certificateArn\"\n    } },\n    ListenerArn = \"listenerArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nCfnListenerCertificateProps cfnListenerCertificateProps = CfnListenerCertificateProps.builder()\n        .certificates(List.of(CertificateProperty.builder()\n                .certificateArn(\"certificateArn\")\n                .build()))\n        .listenerArn(\"listenerArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ncfnListenerCertificateProps := &cfnListenerCertificateProps{\n\tcertificates: []interface{}{\n\t\t&certificateProperty{\n\t\t\tcertificateArn: jsii.String(\"certificateArn\"),\n\t\t},\n\t},\n\tlistenerArn: jsii.String(\"listenerArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnListenerCertificateProps: elbv2.CfnListenerCertificateProps = {\n  certificates: [{\n    certificateArn: 'certificateArn',\n  }],\n  listenerArn: 'listenerArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificateProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificateProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnListenerCertificateProps: elbv2.CfnListenerCertificateProps = {\n  certificates: [{\n    certificateArn: 'certificateArn',\n  }],\n  listenerArn: 'listenerArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "fcea24fd8e8ad55ea8507993f3e02c5183e45e25c2f4b1202118f9b29757987e"
    },
    "9839f51b50cc143fe901d45819223b55427bad636c59897a5eddda57194f1c63": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ncfn_listener_props = elbv2.CfnListenerProps(\n    default_actions=[elbv2.CfnListener.ActionProperty(\n        type=\"type\",\n\n        # the properties below are optional\n        authenticate_cognito_config=elbv2.CfnListener.AuthenticateCognitoConfigProperty(\n            user_pool_arn=\"userPoolArn\",\n            user_pool_client_id=\"userPoolClientId\",\n            user_pool_domain=\"userPoolDomain\",\n\n            # the properties below are optional\n            authentication_request_extra_params={\n                \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n            },\n            on_unauthenticated_request=\"onUnauthenticatedRequest\",\n            scope=\"scope\",\n            session_cookie_name=\"sessionCookieName\",\n            session_timeout=\"sessionTimeout\"\n        ),\n        authenticate_oidc_config=elbv2.CfnListener.AuthenticateOidcConfigProperty(\n            authorization_endpoint=\"authorizationEndpoint\",\n            client_id=\"clientId\",\n            issuer=\"issuer\",\n            token_endpoint=\"tokenEndpoint\",\n            user_info_endpoint=\"userInfoEndpoint\",\n\n            # the properties below are optional\n            authentication_request_extra_params={\n                \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n            },\n            client_secret=\"clientSecret\",\n            on_unauthenticated_request=\"onUnauthenticatedRequest\",\n            scope=\"scope\",\n            session_cookie_name=\"sessionCookieName\",\n            session_timeout=\"sessionTimeout\",\n            use_existing_client_secret=False\n        ),\n        fixed_response_config=elbv2.CfnListener.FixedResponseConfigProperty(\n            status_code=\"statusCode\",\n\n            # the properties below are optional\n            content_type=\"contentType\",\n            message_body=\"messageBody\"\n        ),\n        forward_config=elbv2.CfnListener.ForwardConfigProperty(\n            target_groups=[elbv2.CfnListener.TargetGroupTupleProperty(\n                target_group_arn=\"targetGroupArn\",\n                weight=123\n            )],\n            target_group_stickiness_config=elbv2.CfnListener.TargetGroupStickinessConfigProperty(\n                duration_seconds=123,\n                enabled=False\n            )\n        ),\n        order=123,\n        redirect_config=elbv2.CfnListener.RedirectConfigProperty(\n            status_code=\"statusCode\",\n\n            # the properties below are optional\n            host=\"host\",\n            path=\"path\",\n            port=\"port\",\n            protocol=\"protocol\",\n            query=\"query\"\n        ),\n        target_group_arn=\"targetGroupArn\"\n    )],\n    load_balancer_arn=\"loadBalancerArn\",\n\n    # the properties below are optional\n    alpn_policy=[\"alpnPolicy\"],\n    certificates=[elbv2.CfnListener.CertificateProperty(\n        certificate_arn=\"certificateArn\"\n    )],\n    port=123,\n    protocol=\"protocol\",\n    ssl_policy=\"sslPolicy\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nCfnListenerProps cfnListenerProps = new CfnListenerProps {\n    DefaultActions = new [] { new ActionProperty {\n        Type = \"type\",\n\n        // the properties below are optional\n        AuthenticateCognitoConfig = new AuthenticateCognitoConfigProperty {\n            UserPoolArn = \"userPoolArn\",\n            UserPoolClientId = \"userPoolClientId\",\n            UserPoolDomain = \"userPoolDomain\",\n\n            // the properties below are optional\n            AuthenticationRequestExtraParams = new Dictionary<string, string> {\n                { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n            },\n            OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n            Scope = \"scope\",\n            SessionCookieName = \"sessionCookieName\",\n            SessionTimeout = \"sessionTimeout\"\n        },\n        AuthenticateOidcConfig = new AuthenticateOidcConfigProperty {\n            AuthorizationEndpoint = \"authorizationEndpoint\",\n            ClientId = \"clientId\",\n            Issuer = \"issuer\",\n            TokenEndpoint = \"tokenEndpoint\",\n            UserInfoEndpoint = \"userInfoEndpoint\",\n\n            // the properties below are optional\n            AuthenticationRequestExtraParams = new Dictionary<string, string> {\n                { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n            },\n            ClientSecret = \"clientSecret\",\n            OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n            Scope = \"scope\",\n            SessionCookieName = \"sessionCookieName\",\n            SessionTimeout = \"sessionTimeout\",\n            UseExistingClientSecret = false\n        },\n        FixedResponseConfig = new FixedResponseConfigProperty {\n            StatusCode = \"statusCode\",\n\n            // the properties below are optional\n            ContentType = \"contentType\",\n            MessageBody = \"messageBody\"\n        },\n        ForwardConfig = new ForwardConfigProperty {\n            TargetGroups = new [] { new TargetGroupTupleProperty {\n                TargetGroupArn = \"targetGroupArn\",\n                Weight = 123\n            } },\n            TargetGroupStickinessConfig = new TargetGroupStickinessConfigProperty {\n                DurationSeconds = 123,\n                Enabled = false\n            }\n        },\n        Order = 123,\n        RedirectConfig = new RedirectConfigProperty {\n            StatusCode = \"statusCode\",\n\n            // the properties below are optional\n            Host = \"host\",\n            Path = \"path\",\n            Port = \"port\",\n            Protocol = \"protocol\",\n            Query = \"query\"\n        },\n        TargetGroupArn = \"targetGroupArn\"\n    } },\n    LoadBalancerArn = \"loadBalancerArn\",\n\n    // the properties below are optional\n    AlpnPolicy = new [] { \"alpnPolicy\" },\n    Certificates = new [] { new CertificateProperty {\n        CertificateArn = \"certificateArn\"\n    } },\n    Port = 123,\n    Protocol = \"protocol\",\n    SslPolicy = \"sslPolicy\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nCfnListenerProps cfnListenerProps = CfnListenerProps.builder()\n        .defaultActions(List.of(ActionProperty.builder()\n                .type(\"type\")\n\n                // the properties below are optional\n                .authenticateCognitoConfig(AuthenticateCognitoConfigProperty.builder()\n                        .userPoolArn(\"userPoolArn\")\n                        .userPoolClientId(\"userPoolClientId\")\n                        .userPoolDomain(\"userPoolDomain\")\n\n                        // the properties below are optional\n                        .authenticationRequestExtraParams(Map.of(\n                                \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n                        .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n                        .scope(\"scope\")\n                        .sessionCookieName(\"sessionCookieName\")\n                        .sessionTimeout(\"sessionTimeout\")\n                        .build())\n                .authenticateOidcConfig(AuthenticateOidcConfigProperty.builder()\n                        .authorizationEndpoint(\"authorizationEndpoint\")\n                        .clientId(\"clientId\")\n                        .issuer(\"issuer\")\n                        .tokenEndpoint(\"tokenEndpoint\")\n                        .userInfoEndpoint(\"userInfoEndpoint\")\n\n                        // the properties below are optional\n                        .authenticationRequestExtraParams(Map.of(\n                                \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n                        .clientSecret(\"clientSecret\")\n                        .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n                        .scope(\"scope\")\n                        .sessionCookieName(\"sessionCookieName\")\n                        .sessionTimeout(\"sessionTimeout\")\n                        .useExistingClientSecret(false)\n                        .build())\n                .fixedResponseConfig(FixedResponseConfigProperty.builder()\n                        .statusCode(\"statusCode\")\n\n                        // the properties below are optional\n                        .contentType(\"contentType\")\n                        .messageBody(\"messageBody\")\n                        .build())\n                .forwardConfig(ForwardConfigProperty.builder()\n                        .targetGroups(List.of(TargetGroupTupleProperty.builder()\n                                .targetGroupArn(\"targetGroupArn\")\n                                .weight(123)\n                                .build()))\n                        .targetGroupStickinessConfig(TargetGroupStickinessConfigProperty.builder()\n                                .durationSeconds(123)\n                                .enabled(false)\n                                .build())\n                        .build())\n                .order(123)\n                .redirectConfig(RedirectConfigProperty.builder()\n                        .statusCode(\"statusCode\")\n\n                        // the properties below are optional\n                        .host(\"host\")\n                        .path(\"path\")\n                        .port(\"port\")\n                        .protocol(\"protocol\")\n                        .query(\"query\")\n                        .build())\n                .targetGroupArn(\"targetGroupArn\")\n                .build()))\n        .loadBalancerArn(\"loadBalancerArn\")\n\n        // the properties below are optional\n        .alpnPolicy(List.of(\"alpnPolicy\"))\n        .certificates(List.of(CertificateProperty.builder()\n                .certificateArn(\"certificateArn\")\n                .build()))\n        .port(123)\n        .protocol(\"protocol\")\n        .sslPolicy(\"sslPolicy\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ncfnListenerProps := &cfnListenerProps{\n\tdefaultActions: []interface{}{\n\t\t&actionProperty{\n\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t// the properties below are optional\n\t\t\tauthenticateCognitoConfig: &authenticateCognitoConfigProperty{\n\t\t\t\tuserPoolArn: jsii.String(\"userPoolArn\"),\n\t\t\t\tuserPoolClientId: jsii.String(\"userPoolClientId\"),\n\t\t\t\tuserPoolDomain: jsii.String(\"userPoolDomain\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\t\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t\t\t\t},\n\t\t\t\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\t\t\t\tsessionTimeout: jsii.String(\"sessionTimeout\"),\n\t\t\t},\n\t\t\tauthenticateOidcConfig: &authenticateOidcConfigProperty{\n\t\t\t\tauthorizationEndpoint: jsii.String(\"authorizationEndpoint\"),\n\t\t\t\tclientId: jsii.String(\"clientId\"),\n\t\t\t\tissuer: jsii.String(\"issuer\"),\n\t\t\t\ttokenEndpoint: jsii.String(\"tokenEndpoint\"),\n\t\t\t\tuserInfoEndpoint: jsii.String(\"userInfoEndpoint\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\t\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t\t\t\t},\n\t\t\t\tclientSecret: jsii.String(\"clientSecret\"),\n\t\t\t\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\t\t\t\tsessionTimeout: jsii.String(\"sessionTimeout\"),\n\t\t\t\tuseExistingClientSecret: jsii.Boolean(false),\n\t\t\t},\n\t\t\tfixedResponseConfig: &fixedResponseConfigProperty{\n\t\t\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcontentType: jsii.String(\"contentType\"),\n\t\t\t\tmessageBody: jsii.String(\"messageBody\"),\n\t\t\t},\n\t\t\tforwardConfig: &forwardConfigProperty{\n\t\t\t\ttargetGroups: []interface{}{\n\t\t\t\t\t&targetGroupTupleProperty{\n\t\t\t\t\t\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\t\t\t\t\t\tweight: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttargetGroupStickinessConfig: &targetGroupStickinessConfigProperty{\n\t\t\t\t\tdurationSeconds: jsii.Number(123),\n\t\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t},\n\t\t\torder: jsii.Number(123),\n\t\t\tredirectConfig: &redirectConfigProperty{\n\t\t\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\thost: jsii.String(\"host\"),\n\t\t\t\tpath: jsii.String(\"path\"),\n\t\t\t\tport: jsii.String(\"port\"),\n\t\t\t\tprotocol: jsii.String(\"protocol\"),\n\t\t\t\tquery: jsii.String(\"query\"),\n\t\t\t},\n\t\t\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\t\t},\n\t},\n\tloadBalancerArn: jsii.String(\"loadBalancerArn\"),\n\n\t// the properties below are optional\n\talpnPolicy: []*string{\n\t\tjsii.String(\"alpnPolicy\"),\n\t},\n\tcertificates: []interface{}{\n\t\t&certificateProperty{\n\t\t\tcertificateArn: jsii.String(\"certificateArn\"),\n\t\t},\n\t},\n\tport: jsii.Number(123),\n\tprotocol: jsii.String(\"protocol\"),\n\tsslPolicy: jsii.String(\"sslPolicy\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnListenerProps: elbv2.CfnListenerProps = {\n  defaultActions: [{\n    type: 'type',\n\n    // the properties below are optional\n    authenticateCognitoConfig: {\n      userPoolArn: 'userPoolArn',\n      userPoolClientId: 'userPoolClientId',\n      userPoolDomain: 'userPoolDomain',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 'sessionTimeout',\n    },\n    authenticateOidcConfig: {\n      authorizationEndpoint: 'authorizationEndpoint',\n      clientId: 'clientId',\n      issuer: 'issuer',\n      tokenEndpoint: 'tokenEndpoint',\n      userInfoEndpoint: 'userInfoEndpoint',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      clientSecret: 'clientSecret',\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 'sessionTimeout',\n      useExistingClientSecret: false,\n    },\n    fixedResponseConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      contentType: 'contentType',\n      messageBody: 'messageBody',\n    },\n    forwardConfig: {\n      targetGroups: [{\n        targetGroupArn: 'targetGroupArn',\n        weight: 123,\n      }],\n      targetGroupStickinessConfig: {\n        durationSeconds: 123,\n        enabled: false,\n      },\n    },\n    order: 123,\n    redirectConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      host: 'host',\n      path: 'path',\n      port: 'port',\n      protocol: 'protocol',\n      query: 'query',\n    },\n    targetGroupArn: 'targetGroupArn',\n  }],\n  loadBalancerArn: 'loadBalancerArn',\n\n  // the properties below are optional\n  alpnPolicy: ['alpnPolicy'],\n  certificates: [{\n    certificateArn: 'certificateArn',\n  }],\n  port: 123,\n  protocol: 'protocol',\n  sslPolicy: 'sslPolicy',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnListenerProps: elbv2.CfnListenerProps = {\n  defaultActions: [{\n    type: 'type',\n\n    // the properties below are optional\n    authenticateCognitoConfig: {\n      userPoolArn: 'userPoolArn',\n      userPoolClientId: 'userPoolClientId',\n      userPoolDomain: 'userPoolDomain',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 'sessionTimeout',\n    },\n    authenticateOidcConfig: {\n      authorizationEndpoint: 'authorizationEndpoint',\n      clientId: 'clientId',\n      issuer: 'issuer',\n      tokenEndpoint: 'tokenEndpoint',\n      userInfoEndpoint: 'userInfoEndpoint',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      clientSecret: 'clientSecret',\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 'sessionTimeout',\n      useExistingClientSecret: false,\n    },\n    fixedResponseConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      contentType: 'contentType',\n      messageBody: 'messageBody',\n    },\n    forwardConfig: {\n      targetGroups: [{\n        targetGroupArn: 'targetGroupArn',\n        weight: 123,\n      }],\n      targetGroupStickinessConfig: {\n        durationSeconds: 123,\n        enabled: false,\n      },\n    },\n    order: 123,\n    redirectConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      host: 'host',\n      path: 'path',\n      port: 'port',\n      protocol: 'protocol',\n      query: 'query',\n    },\n    targetGroupArn: 'targetGroupArn',\n  }],\n  loadBalancerArn: 'loadBalancerArn',\n\n  // the properties below are optional\n  alpnPolicy: ['alpnPolicy'],\n  certificates: [{\n    certificateArn: 'certificateArn',\n  }],\n  port: 123,\n  protocol: 'protocol',\n  sslPolicy: 'sslPolicy',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 37,
        "75": 57,
        "91": 2,
        "153": 1,
        "169": 1,
        "192": 4,
        "193": 12,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 53,
        "290": 1
      },
      "fqnsFingerprint": "51a0728d709c46a5153f2186b5fccbd37ad22e2d4896678aa28eb74faa700e64"
    },
    "7a15685a290185a56e8ac56569dd527565489b4d33cf1a7c00ac37dd41738f5a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ncfn_listener_rule = elbv2.CfnListenerRule(self, \"MyCfnListenerRule\",\n    actions=[elbv2.CfnListenerRule.ActionProperty(\n        type=\"type\",\n\n        # the properties below are optional\n        authenticate_cognito_config=elbv2.CfnListenerRule.AuthenticateCognitoConfigProperty(\n            user_pool_arn=\"userPoolArn\",\n            user_pool_client_id=\"userPoolClientId\",\n            user_pool_domain=\"userPoolDomain\",\n\n            # the properties below are optional\n            authentication_request_extra_params={\n                \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n            },\n            on_unauthenticated_request=\"onUnauthenticatedRequest\",\n            scope=\"scope\",\n            session_cookie_name=\"sessionCookieName\",\n            session_timeout=123\n        ),\n        authenticate_oidc_config=elbv2.CfnListenerRule.AuthenticateOidcConfigProperty(\n            authorization_endpoint=\"authorizationEndpoint\",\n            client_id=\"clientId\",\n            issuer=\"issuer\",\n            token_endpoint=\"tokenEndpoint\",\n            user_info_endpoint=\"userInfoEndpoint\",\n\n            # the properties below are optional\n            authentication_request_extra_params={\n                \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n            },\n            client_secret=\"clientSecret\",\n            on_unauthenticated_request=\"onUnauthenticatedRequest\",\n            scope=\"scope\",\n            session_cookie_name=\"sessionCookieName\",\n            session_timeout=123,\n            use_existing_client_secret=False\n        ),\n        fixed_response_config=elbv2.CfnListenerRule.FixedResponseConfigProperty(\n            status_code=\"statusCode\",\n\n            # the properties below are optional\n            content_type=\"contentType\",\n            message_body=\"messageBody\"\n        ),\n        forward_config=elbv2.CfnListenerRule.ForwardConfigProperty(\n            target_groups=[elbv2.CfnListenerRule.TargetGroupTupleProperty(\n                target_group_arn=\"targetGroupArn\",\n                weight=123\n            )],\n            target_group_stickiness_config=elbv2.CfnListenerRule.TargetGroupStickinessConfigProperty(\n                duration_seconds=123,\n                enabled=False\n            )\n        ),\n        order=123,\n        redirect_config=elbv2.CfnListenerRule.RedirectConfigProperty(\n            status_code=\"statusCode\",\n\n            # the properties below are optional\n            host=\"host\",\n            path=\"path\",\n            port=\"port\",\n            protocol=\"protocol\",\n            query=\"query\"\n        ),\n        target_group_arn=\"targetGroupArn\"\n    )],\n    conditions=[elbv2.CfnListenerRule.RuleConditionProperty(\n        field=\"field\",\n        host_header_config=elbv2.CfnListenerRule.HostHeaderConfigProperty(\n            values=[\"values\"]\n        ),\n        http_header_config=elbv2.CfnListenerRule.HttpHeaderConfigProperty(\n            http_header_name=\"httpHeaderName\",\n            values=[\"values\"]\n        ),\n        http_request_method_config=elbv2.CfnListenerRule.HttpRequestMethodConfigProperty(\n            values=[\"values\"]\n        ),\n        path_pattern_config=elbv2.CfnListenerRule.PathPatternConfigProperty(\n            values=[\"values\"]\n        ),\n        query_string_config=elbv2.CfnListenerRule.QueryStringConfigProperty(\n            values=[elbv2.CfnListenerRule.QueryStringKeyValueProperty(\n                key=\"key\",\n                value=\"value\"\n            )]\n        ),\n        source_ip_config=elbv2.CfnListenerRule.SourceIpConfigProperty(\n            values=[\"values\"]\n        ),\n        values=[\"values\"]\n    )],\n    listener_arn=\"listenerArn\",\n    priority=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nCfnListenerRule cfnListenerRule = new CfnListenerRule(this, \"MyCfnListenerRule\", new CfnListenerRuleProps {\n    Actions = new [] { new ActionProperty {\n        Type = \"type\",\n\n        // the properties below are optional\n        AuthenticateCognitoConfig = new AuthenticateCognitoConfigProperty {\n            UserPoolArn = \"userPoolArn\",\n            UserPoolClientId = \"userPoolClientId\",\n            UserPoolDomain = \"userPoolDomain\",\n\n            // the properties below are optional\n            AuthenticationRequestExtraParams = new Dictionary<string, string> {\n                { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n            },\n            OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n            Scope = \"scope\",\n            SessionCookieName = \"sessionCookieName\",\n            SessionTimeout = 123\n        },\n        AuthenticateOidcConfig = new AuthenticateOidcConfigProperty {\n            AuthorizationEndpoint = \"authorizationEndpoint\",\n            ClientId = \"clientId\",\n            Issuer = \"issuer\",\n            TokenEndpoint = \"tokenEndpoint\",\n            UserInfoEndpoint = \"userInfoEndpoint\",\n\n            // the properties below are optional\n            AuthenticationRequestExtraParams = new Dictionary<string, string> {\n                { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n            },\n            ClientSecret = \"clientSecret\",\n            OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n            Scope = \"scope\",\n            SessionCookieName = \"sessionCookieName\",\n            SessionTimeout = 123,\n            UseExistingClientSecret = false\n        },\n        FixedResponseConfig = new FixedResponseConfigProperty {\n            StatusCode = \"statusCode\",\n\n            // the properties below are optional\n            ContentType = \"contentType\",\n            MessageBody = \"messageBody\"\n        },\n        ForwardConfig = new ForwardConfigProperty {\n            TargetGroups = new [] { new TargetGroupTupleProperty {\n                TargetGroupArn = \"targetGroupArn\",\n                Weight = 123\n            } },\n            TargetGroupStickinessConfig = new TargetGroupStickinessConfigProperty {\n                DurationSeconds = 123,\n                Enabled = false\n            }\n        },\n        Order = 123,\n        RedirectConfig = new RedirectConfigProperty {\n            StatusCode = \"statusCode\",\n\n            // the properties below are optional\n            Host = \"host\",\n            Path = \"path\",\n            Port = \"port\",\n            Protocol = \"protocol\",\n            Query = \"query\"\n        },\n        TargetGroupArn = \"targetGroupArn\"\n    } },\n    Conditions = new [] { new RuleConditionProperty {\n        Field = \"field\",\n        HostHeaderConfig = new HostHeaderConfigProperty {\n            Values = new [] { \"values\" }\n        },\n        HttpHeaderConfig = new HttpHeaderConfigProperty {\n            HttpHeaderName = \"httpHeaderName\",\n            Values = new [] { \"values\" }\n        },\n        HttpRequestMethodConfig = new HttpRequestMethodConfigProperty {\n            Values = new [] { \"values\" }\n        },\n        PathPatternConfig = new PathPatternConfigProperty {\n            Values = new [] { \"values\" }\n        },\n        QueryStringConfig = new QueryStringConfigProperty {\n            Values = new [] { new QueryStringKeyValueProperty {\n                Key = \"key\",\n                Value = \"value\"\n            } }\n        },\n        SourceIpConfig = new SourceIpConfigProperty {\n            Values = new [] { \"values\" }\n        },\n        Values = new [] { \"values\" }\n    } },\n    ListenerArn = \"listenerArn\",\n    Priority = 123\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nCfnListenerRule cfnListenerRule = CfnListenerRule.Builder.create(this, \"MyCfnListenerRule\")\n        .actions(List.of(ActionProperty.builder()\n                .type(\"type\")\n\n                // the properties below are optional\n                .authenticateCognitoConfig(AuthenticateCognitoConfigProperty.builder()\n                        .userPoolArn(\"userPoolArn\")\n                        .userPoolClientId(\"userPoolClientId\")\n                        .userPoolDomain(\"userPoolDomain\")\n\n                        // the properties below are optional\n                        .authenticationRequestExtraParams(Map.of(\n                                \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n                        .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n                        .scope(\"scope\")\n                        .sessionCookieName(\"sessionCookieName\")\n                        .sessionTimeout(123)\n                        .build())\n                .authenticateOidcConfig(AuthenticateOidcConfigProperty.builder()\n                        .authorizationEndpoint(\"authorizationEndpoint\")\n                        .clientId(\"clientId\")\n                        .issuer(\"issuer\")\n                        .tokenEndpoint(\"tokenEndpoint\")\n                        .userInfoEndpoint(\"userInfoEndpoint\")\n\n                        // the properties below are optional\n                        .authenticationRequestExtraParams(Map.of(\n                                \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n                        .clientSecret(\"clientSecret\")\n                        .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n                        .scope(\"scope\")\n                        .sessionCookieName(\"sessionCookieName\")\n                        .sessionTimeout(123)\n                        .useExistingClientSecret(false)\n                        .build())\n                .fixedResponseConfig(FixedResponseConfigProperty.builder()\n                        .statusCode(\"statusCode\")\n\n                        // the properties below are optional\n                        .contentType(\"contentType\")\n                        .messageBody(\"messageBody\")\n                        .build())\n                .forwardConfig(ForwardConfigProperty.builder()\n                        .targetGroups(List.of(TargetGroupTupleProperty.builder()\n                                .targetGroupArn(\"targetGroupArn\")\n                                .weight(123)\n                                .build()))\n                        .targetGroupStickinessConfig(TargetGroupStickinessConfigProperty.builder()\n                                .durationSeconds(123)\n                                .enabled(false)\n                                .build())\n                        .build())\n                .order(123)\n                .redirectConfig(RedirectConfigProperty.builder()\n                        .statusCode(\"statusCode\")\n\n                        // the properties below are optional\n                        .host(\"host\")\n                        .path(\"path\")\n                        .port(\"port\")\n                        .protocol(\"protocol\")\n                        .query(\"query\")\n                        .build())\n                .targetGroupArn(\"targetGroupArn\")\n                .build()))\n        .conditions(List.of(RuleConditionProperty.builder()\n                .field(\"field\")\n                .hostHeaderConfig(HostHeaderConfigProperty.builder()\n                        .values(List.of(\"values\"))\n                        .build())\n                .httpHeaderConfig(HttpHeaderConfigProperty.builder()\n                        .httpHeaderName(\"httpHeaderName\")\n                        .values(List.of(\"values\"))\n                        .build())\n                .httpRequestMethodConfig(HttpRequestMethodConfigProperty.builder()\n                        .values(List.of(\"values\"))\n                        .build())\n                .pathPatternConfig(PathPatternConfigProperty.builder()\n                        .values(List.of(\"values\"))\n                        .build())\n                .queryStringConfig(QueryStringConfigProperty.builder()\n                        .values(List.of(QueryStringKeyValueProperty.builder()\n                                .key(\"key\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .sourceIpConfig(SourceIpConfigProperty.builder()\n                        .values(List.of(\"values\"))\n                        .build())\n                .values(List.of(\"values\"))\n                .build()))\n        .listenerArn(\"listenerArn\")\n        .priority(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ncfnListenerRule := elbv2.NewCfnListenerRule(this, jsii.String(\"MyCfnListenerRule\"), &cfnListenerRuleProps{\n\tactions: []interface{}{\n\t\t&actionProperty{\n\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t// the properties below are optional\n\t\t\tauthenticateCognitoConfig: &authenticateCognitoConfigProperty{\n\t\t\t\tuserPoolArn: jsii.String(\"userPoolArn\"),\n\t\t\t\tuserPoolClientId: jsii.String(\"userPoolClientId\"),\n\t\t\t\tuserPoolDomain: jsii.String(\"userPoolDomain\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\t\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t\t\t\t},\n\t\t\t\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\t\t\t\tsessionTimeout: jsii.Number(123),\n\t\t\t},\n\t\t\tauthenticateOidcConfig: &authenticateOidcConfigProperty{\n\t\t\t\tauthorizationEndpoint: jsii.String(\"authorizationEndpoint\"),\n\t\t\t\tclientId: jsii.String(\"clientId\"),\n\t\t\t\tissuer: jsii.String(\"issuer\"),\n\t\t\t\ttokenEndpoint: jsii.String(\"tokenEndpoint\"),\n\t\t\t\tuserInfoEndpoint: jsii.String(\"userInfoEndpoint\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\t\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t\t\t\t},\n\t\t\t\tclientSecret: jsii.String(\"clientSecret\"),\n\t\t\t\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\t\t\t\tsessionTimeout: jsii.Number(123),\n\t\t\t\tuseExistingClientSecret: jsii.Boolean(false),\n\t\t\t},\n\t\t\tfixedResponseConfig: &fixedResponseConfigProperty{\n\t\t\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcontentType: jsii.String(\"contentType\"),\n\t\t\t\tmessageBody: jsii.String(\"messageBody\"),\n\t\t\t},\n\t\t\tforwardConfig: &forwardConfigProperty{\n\t\t\t\ttargetGroups: []interface{}{\n\t\t\t\t\t&targetGroupTupleProperty{\n\t\t\t\t\t\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\t\t\t\t\t\tweight: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttargetGroupStickinessConfig: &targetGroupStickinessConfigProperty{\n\t\t\t\t\tdurationSeconds: jsii.Number(123),\n\t\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t},\n\t\t\torder: jsii.Number(123),\n\t\t\tredirectConfig: &redirectConfigProperty{\n\t\t\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\thost: jsii.String(\"host\"),\n\t\t\t\tpath: jsii.String(\"path\"),\n\t\t\t\tport: jsii.String(\"port\"),\n\t\t\t\tprotocol: jsii.String(\"protocol\"),\n\t\t\t\tquery: jsii.String(\"query\"),\n\t\t\t},\n\t\t\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\t\t},\n\t},\n\tconditions: []interface{}{\n\t\t&ruleConditionProperty{\n\t\t\tfield: jsii.String(\"field\"),\n\t\t\thostHeaderConfig: &hostHeaderConfigProperty{\n\t\t\t\tvalues: []*string{\n\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\thttpHeaderConfig: &httpHeaderConfigProperty{\n\t\t\t\thttpHeaderName: jsii.String(\"httpHeaderName\"),\n\t\t\t\tvalues: []*string{\n\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\thttpRequestMethodConfig: &httpRequestMethodConfigProperty{\n\t\t\t\tvalues: []*string{\n\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tpathPatternConfig: &pathPatternConfigProperty{\n\t\t\t\tvalues: []*string{\n\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tqueryStringConfig: &queryStringConfigProperty{\n\t\t\t\tvalues: []interface{}{\n\t\t\t\t\t&queryStringKeyValueProperty{\n\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsourceIpConfig: &sourceIpConfigProperty{\n\t\t\t\tvalues: []*string{\n\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tvalues: []*string{\n\t\t\t\tjsii.String(\"values\"),\n\t\t\t},\n\t\t},\n\t},\n\tlistenerArn: jsii.String(\"listenerArn\"),\n\tpriority: jsii.Number(123),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnListenerRule = new elbv2.CfnListenerRule(this, 'MyCfnListenerRule', {\n  actions: [{\n    type: 'type',\n\n    // the properties below are optional\n    authenticateCognitoConfig: {\n      userPoolArn: 'userPoolArn',\n      userPoolClientId: 'userPoolClientId',\n      userPoolDomain: 'userPoolDomain',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 123,\n    },\n    authenticateOidcConfig: {\n      authorizationEndpoint: 'authorizationEndpoint',\n      clientId: 'clientId',\n      issuer: 'issuer',\n      tokenEndpoint: 'tokenEndpoint',\n      userInfoEndpoint: 'userInfoEndpoint',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      clientSecret: 'clientSecret',\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 123,\n      useExistingClientSecret: false,\n    },\n    fixedResponseConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      contentType: 'contentType',\n      messageBody: 'messageBody',\n    },\n    forwardConfig: {\n      targetGroups: [{\n        targetGroupArn: 'targetGroupArn',\n        weight: 123,\n      }],\n      targetGroupStickinessConfig: {\n        durationSeconds: 123,\n        enabled: false,\n      },\n    },\n    order: 123,\n    redirectConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      host: 'host',\n      path: 'path',\n      port: 'port',\n      protocol: 'protocol',\n      query: 'query',\n    },\n    targetGroupArn: 'targetGroupArn',\n  }],\n  conditions: [{\n    field: 'field',\n    hostHeaderConfig: {\n      values: ['values'],\n    },\n    httpHeaderConfig: {\n      httpHeaderName: 'httpHeaderName',\n      values: ['values'],\n    },\n    httpRequestMethodConfig: {\n      values: ['values'],\n    },\n    pathPatternConfig: {\n      values: ['values'],\n    },\n    queryStringConfig: {\n      values: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    sourceIpConfig: {\n      values: ['values'],\n    },\n    values: ['values'],\n  }],\n  listenerArn: 'listenerArn',\n  priority: 123,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule",
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRuleProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnListenerRule = new elbv2.CfnListenerRule(this, 'MyCfnListenerRule', {\n  actions: [{\n    type: 'type',\n\n    // the properties below are optional\n    authenticateCognitoConfig: {\n      userPoolArn: 'userPoolArn',\n      userPoolClientId: 'userPoolClientId',\n      userPoolDomain: 'userPoolDomain',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 123,\n    },\n    authenticateOidcConfig: {\n      authorizationEndpoint: 'authorizationEndpoint',\n      clientId: 'clientId',\n      issuer: 'issuer',\n      tokenEndpoint: 'tokenEndpoint',\n      userInfoEndpoint: 'userInfoEndpoint',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      clientSecret: 'clientSecret',\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 123,\n      useExistingClientSecret: false,\n    },\n    fixedResponseConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      contentType: 'contentType',\n      messageBody: 'messageBody',\n    },\n    forwardConfig: {\n      targetGroups: [{\n        targetGroupArn: 'targetGroupArn',\n        weight: 123,\n      }],\n      targetGroupStickinessConfig: {\n        durationSeconds: 123,\n        enabled: false,\n      },\n    },\n    order: 123,\n    redirectConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      host: 'host',\n      path: 'path',\n      port: 'port',\n      protocol: 'protocol',\n      query: 'query',\n    },\n    targetGroupArn: 'targetGroupArn',\n  }],\n  conditions: [{\n    field: 'field',\n    hostHeaderConfig: {\n      values: ['values'],\n    },\n    httpHeaderConfig: {\n      httpHeaderName: 'httpHeaderName',\n      values: ['values'],\n    },\n    httpRequestMethodConfig: {\n      values: ['values'],\n    },\n    pathPatternConfig: {\n      values: ['values'],\n    },\n    queryStringConfig: {\n      values: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    sourceIpConfig: {\n      values: ['values'],\n    },\n    values: ['values'],\n  }],\n  listenerArn: 'listenerArn',\n  priority: 123,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 42,
        "75": 70,
        "91": 2,
        "104": 1,
        "192": 10,
        "193": 19,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 66,
        "290": 1
      },
      "fqnsFingerprint": "81d386f34670272d3f3e592c5a6e84609785c7521663b1548d45c0295130c155"
    },
    "2707518878505ff5ccd2c27538ba785fc9eeff24bb6ff6e6f3ad0d9921c0aadd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\naction_property = elbv2.CfnListenerRule.ActionProperty(\n    type=\"type\",\n\n    # the properties below are optional\n    authenticate_cognito_config=elbv2.CfnListenerRule.AuthenticateCognitoConfigProperty(\n        user_pool_arn=\"userPoolArn\",\n        user_pool_client_id=\"userPoolClientId\",\n        user_pool_domain=\"userPoolDomain\",\n\n        # the properties below are optional\n        authentication_request_extra_params={\n            \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n        },\n        on_unauthenticated_request=\"onUnauthenticatedRequest\",\n        scope=\"scope\",\n        session_cookie_name=\"sessionCookieName\",\n        session_timeout=123\n    ),\n    authenticate_oidc_config=elbv2.CfnListenerRule.AuthenticateOidcConfigProperty(\n        authorization_endpoint=\"authorizationEndpoint\",\n        client_id=\"clientId\",\n        issuer=\"issuer\",\n        token_endpoint=\"tokenEndpoint\",\n        user_info_endpoint=\"userInfoEndpoint\",\n\n        # the properties below are optional\n        authentication_request_extra_params={\n            \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n        },\n        client_secret=\"clientSecret\",\n        on_unauthenticated_request=\"onUnauthenticatedRequest\",\n        scope=\"scope\",\n        session_cookie_name=\"sessionCookieName\",\n        session_timeout=123,\n        use_existing_client_secret=False\n    ),\n    fixed_response_config=elbv2.CfnListenerRule.FixedResponseConfigProperty(\n        status_code=\"statusCode\",\n\n        # the properties below are optional\n        content_type=\"contentType\",\n        message_body=\"messageBody\"\n    ),\n    forward_config=elbv2.CfnListenerRule.ForwardConfigProperty(\n        target_groups=[elbv2.CfnListenerRule.TargetGroupTupleProperty(\n            target_group_arn=\"targetGroupArn\",\n            weight=123\n        )],\n        target_group_stickiness_config=elbv2.CfnListenerRule.TargetGroupStickinessConfigProperty(\n            duration_seconds=123,\n            enabled=False\n        )\n    ),\n    order=123,\n    redirect_config=elbv2.CfnListenerRule.RedirectConfigProperty(\n        status_code=\"statusCode\",\n\n        # the properties below are optional\n        host=\"host\",\n        path=\"path\",\n        port=\"port\",\n        protocol=\"protocol\",\n        query=\"query\"\n    ),\n    target_group_arn=\"targetGroupArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nActionProperty actionProperty = new ActionProperty {\n    Type = \"type\",\n\n    // the properties below are optional\n    AuthenticateCognitoConfig = new AuthenticateCognitoConfigProperty {\n        UserPoolArn = \"userPoolArn\",\n        UserPoolClientId = \"userPoolClientId\",\n        UserPoolDomain = \"userPoolDomain\",\n\n        // the properties below are optional\n        AuthenticationRequestExtraParams = new Dictionary<string, string> {\n            { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n        },\n        OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n        Scope = \"scope\",\n        SessionCookieName = \"sessionCookieName\",\n        SessionTimeout = 123\n    },\n    AuthenticateOidcConfig = new AuthenticateOidcConfigProperty {\n        AuthorizationEndpoint = \"authorizationEndpoint\",\n        ClientId = \"clientId\",\n        Issuer = \"issuer\",\n        TokenEndpoint = \"tokenEndpoint\",\n        UserInfoEndpoint = \"userInfoEndpoint\",\n\n        // the properties below are optional\n        AuthenticationRequestExtraParams = new Dictionary<string, string> {\n            { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n        },\n        ClientSecret = \"clientSecret\",\n        OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n        Scope = \"scope\",\n        SessionCookieName = \"sessionCookieName\",\n        SessionTimeout = 123,\n        UseExistingClientSecret = false\n    },\n    FixedResponseConfig = new FixedResponseConfigProperty {\n        StatusCode = \"statusCode\",\n\n        // the properties below are optional\n        ContentType = \"contentType\",\n        MessageBody = \"messageBody\"\n    },\n    ForwardConfig = new ForwardConfigProperty {\n        TargetGroups = new [] { new TargetGroupTupleProperty {\n            TargetGroupArn = \"targetGroupArn\",\n            Weight = 123\n        } },\n        TargetGroupStickinessConfig = new TargetGroupStickinessConfigProperty {\n            DurationSeconds = 123,\n            Enabled = false\n        }\n    },\n    Order = 123,\n    RedirectConfig = new RedirectConfigProperty {\n        StatusCode = \"statusCode\",\n\n        // the properties below are optional\n        Host = \"host\",\n        Path = \"path\",\n        Port = \"port\",\n        Protocol = \"protocol\",\n        Query = \"query\"\n    },\n    TargetGroupArn = \"targetGroupArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nActionProperty actionProperty = ActionProperty.builder()\n        .type(\"type\")\n\n        // the properties below are optional\n        .authenticateCognitoConfig(AuthenticateCognitoConfigProperty.builder()\n                .userPoolArn(\"userPoolArn\")\n                .userPoolClientId(\"userPoolClientId\")\n                .userPoolDomain(\"userPoolDomain\")\n\n                // the properties below are optional\n                .authenticationRequestExtraParams(Map.of(\n                        \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n                .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n                .scope(\"scope\")\n                .sessionCookieName(\"sessionCookieName\")\n                .sessionTimeout(123)\n                .build())\n        .authenticateOidcConfig(AuthenticateOidcConfigProperty.builder()\n                .authorizationEndpoint(\"authorizationEndpoint\")\n                .clientId(\"clientId\")\n                .issuer(\"issuer\")\n                .tokenEndpoint(\"tokenEndpoint\")\n                .userInfoEndpoint(\"userInfoEndpoint\")\n\n                // the properties below are optional\n                .authenticationRequestExtraParams(Map.of(\n                        \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n                .clientSecret(\"clientSecret\")\n                .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n                .scope(\"scope\")\n                .sessionCookieName(\"sessionCookieName\")\n                .sessionTimeout(123)\n                .useExistingClientSecret(false)\n                .build())\n        .fixedResponseConfig(FixedResponseConfigProperty.builder()\n                .statusCode(\"statusCode\")\n\n                // the properties below are optional\n                .contentType(\"contentType\")\n                .messageBody(\"messageBody\")\n                .build())\n        .forwardConfig(ForwardConfigProperty.builder()\n                .targetGroups(List.of(TargetGroupTupleProperty.builder()\n                        .targetGroupArn(\"targetGroupArn\")\n                        .weight(123)\n                        .build()))\n                .targetGroupStickinessConfig(TargetGroupStickinessConfigProperty.builder()\n                        .durationSeconds(123)\n                        .enabled(false)\n                        .build())\n                .build())\n        .order(123)\n        .redirectConfig(RedirectConfigProperty.builder()\n                .statusCode(\"statusCode\")\n\n                // the properties below are optional\n                .host(\"host\")\n                .path(\"path\")\n                .port(\"port\")\n                .protocol(\"protocol\")\n                .query(\"query\")\n                .build())\n        .targetGroupArn(\"targetGroupArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nactionProperty := &actionProperty{\n\ttype: jsii.String(\"type\"),\n\n\t// the properties below are optional\n\tauthenticateCognitoConfig: &authenticateCognitoConfigProperty{\n\t\tuserPoolArn: jsii.String(\"userPoolArn\"),\n\t\tuserPoolClientId: jsii.String(\"userPoolClientId\"),\n\t\tuserPoolDomain: jsii.String(\"userPoolDomain\"),\n\n\t\t// the properties below are optional\n\t\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t\t},\n\t\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\t\tscope: jsii.String(\"scope\"),\n\t\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\t\tsessionTimeout: jsii.Number(123),\n\t},\n\tauthenticateOidcConfig: &authenticateOidcConfigProperty{\n\t\tauthorizationEndpoint: jsii.String(\"authorizationEndpoint\"),\n\t\tclientId: jsii.String(\"clientId\"),\n\t\tissuer: jsii.String(\"issuer\"),\n\t\ttokenEndpoint: jsii.String(\"tokenEndpoint\"),\n\t\tuserInfoEndpoint: jsii.String(\"userInfoEndpoint\"),\n\n\t\t// the properties below are optional\n\t\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t\t},\n\t\tclientSecret: jsii.String(\"clientSecret\"),\n\t\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\t\tscope: jsii.String(\"scope\"),\n\t\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\t\tsessionTimeout: jsii.Number(123),\n\t\tuseExistingClientSecret: jsii.Boolean(false),\n\t},\n\tfixedResponseConfig: &fixedResponseConfigProperty{\n\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t// the properties below are optional\n\t\tcontentType: jsii.String(\"contentType\"),\n\t\tmessageBody: jsii.String(\"messageBody\"),\n\t},\n\tforwardConfig: &forwardConfigProperty{\n\t\ttargetGroups: []interface{}{\n\t\t\t&targetGroupTupleProperty{\n\t\t\t\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\t\t\t\tweight: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t\ttargetGroupStickinessConfig: &targetGroupStickinessConfigProperty{\n\t\t\tdurationSeconds: jsii.Number(123),\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t},\n\torder: jsii.Number(123),\n\tredirectConfig: &redirectConfigProperty{\n\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t// the properties below are optional\n\t\thost: jsii.String(\"host\"),\n\t\tpath: jsii.String(\"path\"),\n\t\tport: jsii.String(\"port\"),\n\t\tprotocol: jsii.String(\"protocol\"),\n\t\tquery: jsii.String(\"query\"),\n\t},\n\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst actionProperty: elbv2.CfnListenerRule.ActionProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  authenticateCognitoConfig: {\n    userPoolArn: 'userPoolArn',\n    userPoolClientId: 'userPoolClientId',\n    userPoolDomain: 'userPoolDomain',\n\n    // the properties below are optional\n    authenticationRequestExtraParams: {\n      authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n    },\n    onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n    scope: 'scope',\n    sessionCookieName: 'sessionCookieName',\n    sessionTimeout: 123,\n  },\n  authenticateOidcConfig: {\n    authorizationEndpoint: 'authorizationEndpoint',\n    clientId: 'clientId',\n    issuer: 'issuer',\n    tokenEndpoint: 'tokenEndpoint',\n    userInfoEndpoint: 'userInfoEndpoint',\n\n    // the properties below are optional\n    authenticationRequestExtraParams: {\n      authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n    },\n    clientSecret: 'clientSecret',\n    onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n    scope: 'scope',\n    sessionCookieName: 'sessionCookieName',\n    sessionTimeout: 123,\n    useExistingClientSecret: false,\n  },\n  fixedResponseConfig: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    contentType: 'contentType',\n    messageBody: 'messageBody',\n  },\n  forwardConfig: {\n    targetGroups: [{\n      targetGroupArn: 'targetGroupArn',\n      weight: 123,\n    }],\n    targetGroupStickinessConfig: {\n      durationSeconds: 123,\n      enabled: false,\n    },\n  },\n  order: 123,\n  redirectConfig: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    host: 'host',\n    path: 'path',\n    port: 'port',\n    protocol: 'protocol',\n    query: 'query',\n  },\n  targetGroupArn: 'targetGroupArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.ActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.ActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst actionProperty: elbv2.CfnListenerRule.ActionProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  authenticateCognitoConfig: {\n    userPoolArn: 'userPoolArn',\n    userPoolClientId: 'userPoolClientId',\n    userPoolDomain: 'userPoolDomain',\n\n    // the properties below are optional\n    authenticationRequestExtraParams: {\n      authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n    },\n    onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n    scope: 'scope',\n    sessionCookieName: 'sessionCookieName',\n    sessionTimeout: 123,\n  },\n  authenticateOidcConfig: {\n    authorizationEndpoint: 'authorizationEndpoint',\n    clientId: 'clientId',\n    issuer: 'issuer',\n    tokenEndpoint: 'tokenEndpoint',\n    userInfoEndpoint: 'userInfoEndpoint',\n\n    // the properties below are optional\n    authenticationRequestExtraParams: {\n      authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n    },\n    clientSecret: 'clientSecret',\n    onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n    scope: 'scope',\n    sessionCookieName: 'sessionCookieName',\n    sessionTimeout: 123,\n    useExistingClientSecret: false,\n  },\n  fixedResponseConfig: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    contentType: 'contentType',\n    messageBody: 'messageBody',\n  },\n  forwardConfig: {\n    targetGroups: [{\n      targetGroupArn: 'targetGroupArn',\n      weight: 123,\n    }],\n    targetGroupStickinessConfig: {\n      durationSeconds: 123,\n      enabled: false,\n    },\n  },\n  order: 123,\n  redirectConfig: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    host: 'host',\n    path: 'path',\n    port: 'port',\n    protocol: 'protocol',\n    query: 'query',\n  },\n  targetGroupArn: 'targetGroupArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 30,
        "75": 50,
        "91": 2,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 10,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 45,
        "290": 1
      },
      "fqnsFingerprint": "ace7486450dbef66b4adbc51c0d63decbd687418fd1630f332e42c99909b591e"
    },
    "30f40ebd1fddd449a6e388642882b788d3fb3d330998da85c6bca7a207707d9e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nauthenticate_cognito_config_property = elbv2.CfnListenerRule.AuthenticateCognitoConfigProperty(\n    user_pool_arn=\"userPoolArn\",\n    user_pool_client_id=\"userPoolClientId\",\n    user_pool_domain=\"userPoolDomain\",\n\n    # the properties below are optional\n    authentication_request_extra_params={\n        \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n    },\n    on_unauthenticated_request=\"onUnauthenticatedRequest\",\n    scope=\"scope\",\n    session_cookie_name=\"sessionCookieName\",\n    session_timeout=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nAuthenticateCognitoConfigProperty authenticateCognitoConfigProperty = new AuthenticateCognitoConfigProperty {\n    UserPoolArn = \"userPoolArn\",\n    UserPoolClientId = \"userPoolClientId\",\n    UserPoolDomain = \"userPoolDomain\",\n\n    // the properties below are optional\n    AuthenticationRequestExtraParams = new Dictionary<string, string> {\n        { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n    },\n    OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n    Scope = \"scope\",\n    SessionCookieName = \"sessionCookieName\",\n    SessionTimeout = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nAuthenticateCognitoConfigProperty authenticateCognitoConfigProperty = AuthenticateCognitoConfigProperty.builder()\n        .userPoolArn(\"userPoolArn\")\n        .userPoolClientId(\"userPoolClientId\")\n        .userPoolDomain(\"userPoolDomain\")\n\n        // the properties below are optional\n        .authenticationRequestExtraParams(Map.of(\n                \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n        .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n        .scope(\"scope\")\n        .sessionCookieName(\"sessionCookieName\")\n        .sessionTimeout(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nauthenticateCognitoConfigProperty := &authenticateCognitoConfigProperty{\n\tuserPoolArn: jsii.String(\"userPoolArn\"),\n\tuserPoolClientId: jsii.String(\"userPoolClientId\"),\n\tuserPoolDomain: jsii.String(\"userPoolDomain\"),\n\n\t// the properties below are optional\n\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t},\n\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\tscope: jsii.String(\"scope\"),\n\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\tsessionTimeout: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst authenticateCognitoConfigProperty: elbv2.CfnListenerRule.AuthenticateCognitoConfigProperty = {\n  userPoolArn: 'userPoolArn',\n  userPoolClientId: 'userPoolClientId',\n  userPoolDomain: 'userPoolDomain',\n\n  // the properties below are optional\n  authenticationRequestExtraParams: {\n    authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n  },\n  onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n  scope: 'scope',\n  sessionCookieName: 'sessionCookieName',\n  sessionTimeout: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.AuthenticateCognitoConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.AuthenticateCognitoConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst authenticateCognitoConfigProperty: elbv2.CfnListenerRule.AuthenticateCognitoConfigProperty = {\n  userPoolArn: 'userPoolArn',\n  userPoolClientId: 'userPoolClientId',\n  userPoolDomain: 'userPoolDomain',\n\n  // the properties below are optional\n  authenticationRequestExtraParams: {\n    authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n  },\n  onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n  scope: 'scope',\n  sessionCookieName: 'sessionCookieName',\n  sessionTimeout: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 8,
        "75": 14,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "c113b3644b9bf4d7f13aeff5be15afca842295259009b869b36d504fc39a43cf"
    },
    "ea0fb8173ae1409dcab1c9e1deb8a00d46005037e63185716a94e8a20fe3e38f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nauthenticate_oidc_config_property = elbv2.CfnListenerRule.AuthenticateOidcConfigProperty(\n    authorization_endpoint=\"authorizationEndpoint\",\n    client_id=\"clientId\",\n    issuer=\"issuer\",\n    token_endpoint=\"tokenEndpoint\",\n    user_info_endpoint=\"userInfoEndpoint\",\n\n    # the properties below are optional\n    authentication_request_extra_params={\n        \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n    },\n    client_secret=\"clientSecret\",\n    on_unauthenticated_request=\"onUnauthenticatedRequest\",\n    scope=\"scope\",\n    session_cookie_name=\"sessionCookieName\",\n    session_timeout=123,\n    use_existing_client_secret=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nAuthenticateOidcConfigProperty authenticateOidcConfigProperty = new AuthenticateOidcConfigProperty {\n    AuthorizationEndpoint = \"authorizationEndpoint\",\n    ClientId = \"clientId\",\n    Issuer = \"issuer\",\n    TokenEndpoint = \"tokenEndpoint\",\n    UserInfoEndpoint = \"userInfoEndpoint\",\n\n    // the properties below are optional\n    AuthenticationRequestExtraParams = new Dictionary<string, string> {\n        { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n    },\n    ClientSecret = \"clientSecret\",\n    OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n    Scope = \"scope\",\n    SessionCookieName = \"sessionCookieName\",\n    SessionTimeout = 123,\n    UseExistingClientSecret = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nAuthenticateOidcConfigProperty authenticateOidcConfigProperty = AuthenticateOidcConfigProperty.builder()\n        .authorizationEndpoint(\"authorizationEndpoint\")\n        .clientId(\"clientId\")\n        .issuer(\"issuer\")\n        .tokenEndpoint(\"tokenEndpoint\")\n        .userInfoEndpoint(\"userInfoEndpoint\")\n\n        // the properties below are optional\n        .authenticationRequestExtraParams(Map.of(\n                \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n        .clientSecret(\"clientSecret\")\n        .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n        .scope(\"scope\")\n        .sessionCookieName(\"sessionCookieName\")\n        .sessionTimeout(123)\n        .useExistingClientSecret(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nauthenticateOidcConfigProperty := &authenticateOidcConfigProperty{\n\tauthorizationEndpoint: jsii.String(\"authorizationEndpoint\"),\n\tclientId: jsii.String(\"clientId\"),\n\tissuer: jsii.String(\"issuer\"),\n\ttokenEndpoint: jsii.String(\"tokenEndpoint\"),\n\tuserInfoEndpoint: jsii.String(\"userInfoEndpoint\"),\n\n\t// the properties below are optional\n\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t},\n\tclientSecret: jsii.String(\"clientSecret\"),\n\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\tscope: jsii.String(\"scope\"),\n\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\tsessionTimeout: jsii.Number(123),\n\tuseExistingClientSecret: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst authenticateOidcConfigProperty: elbv2.CfnListenerRule.AuthenticateOidcConfigProperty = {\n  authorizationEndpoint: 'authorizationEndpoint',\n  clientId: 'clientId',\n  issuer: 'issuer',\n  tokenEndpoint: 'tokenEndpoint',\n  userInfoEndpoint: 'userInfoEndpoint',\n\n  // the properties below are optional\n  authenticationRequestExtraParams: {\n    authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n  },\n  clientSecret: 'clientSecret',\n  onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n  scope: 'scope',\n  sessionCookieName: 'sessionCookieName',\n  sessionTimeout: 123,\n  useExistingClientSecret: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.AuthenticateOidcConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.AuthenticateOidcConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst authenticateOidcConfigProperty: elbv2.CfnListenerRule.AuthenticateOidcConfigProperty = {\n  authorizationEndpoint: 'authorizationEndpoint',\n  clientId: 'clientId',\n  issuer: 'issuer',\n  tokenEndpoint: 'tokenEndpoint',\n  userInfoEndpoint: 'userInfoEndpoint',\n\n  // the properties below are optional\n  authenticationRequestExtraParams: {\n    authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n  },\n  clientSecret: 'clientSecret',\n  onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n  scope: 'scope',\n  sessionCookieName: 'sessionCookieName',\n  sessionTimeout: 123,\n  useExistingClientSecret: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 11,
        "75": 18,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "735d6bf4026fa156daca392f1b9a3e0da2608391cbefe69c485655c69b014661"
    },
    "7bfd948279b36c831b04bfd295eb5e774ff2af45917d2a0f9a966a3c306f82f0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nfixed_response_config_property = elbv2.CfnListenerRule.FixedResponseConfigProperty(\n    status_code=\"statusCode\",\n\n    # the properties below are optional\n    content_type=\"contentType\",\n    message_body=\"messageBody\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nFixedResponseConfigProperty fixedResponseConfigProperty = new FixedResponseConfigProperty {\n    StatusCode = \"statusCode\",\n\n    // the properties below are optional\n    ContentType = \"contentType\",\n    MessageBody = \"messageBody\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nFixedResponseConfigProperty fixedResponseConfigProperty = FixedResponseConfigProperty.builder()\n        .statusCode(\"statusCode\")\n\n        // the properties below are optional\n        .contentType(\"contentType\")\n        .messageBody(\"messageBody\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nfixedResponseConfigProperty := &fixedResponseConfigProperty{\n\tstatusCode: jsii.String(\"statusCode\"),\n\n\t// the properties below are optional\n\tcontentType: jsii.String(\"contentType\"),\n\tmessageBody: jsii.String(\"messageBody\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst fixedResponseConfigProperty: elbv2.CfnListenerRule.FixedResponseConfigProperty = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  contentType: 'contentType',\n  messageBody: 'messageBody',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.FixedResponseConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.FixedResponseConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst fixedResponseConfigProperty: elbv2.CfnListenerRule.FixedResponseConfigProperty = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  contentType: 'contentType',\n  messageBody: 'messageBody',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "6cc2f2e4622d6207d23586943dbfd9277ee9a32a41659ce76a2f4c62b989c6d8"
    },
    "41a7e8789fd8186c896c086d2a119e43d7852d2761feb0a1a902cd2aae25e18c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nforward_config_property = elbv2.CfnListenerRule.ForwardConfigProperty(\n    target_groups=[elbv2.CfnListenerRule.TargetGroupTupleProperty(\n        target_group_arn=\"targetGroupArn\",\n        weight=123\n    )],\n    target_group_stickiness_config=elbv2.CfnListenerRule.TargetGroupStickinessConfigProperty(\n        duration_seconds=123,\n        enabled=False\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nForwardConfigProperty forwardConfigProperty = new ForwardConfigProperty {\n    TargetGroups = new [] { new TargetGroupTupleProperty {\n        TargetGroupArn = \"targetGroupArn\",\n        Weight = 123\n    } },\n    TargetGroupStickinessConfig = new TargetGroupStickinessConfigProperty {\n        DurationSeconds = 123,\n        Enabled = false\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nForwardConfigProperty forwardConfigProperty = ForwardConfigProperty.builder()\n        .targetGroups(List.of(TargetGroupTupleProperty.builder()\n                .targetGroupArn(\"targetGroupArn\")\n                .weight(123)\n                .build()))\n        .targetGroupStickinessConfig(TargetGroupStickinessConfigProperty.builder()\n                .durationSeconds(123)\n                .enabled(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nforwardConfigProperty := &forwardConfigProperty{\n\ttargetGroups: []interface{}{\n\t\t&targetGroupTupleProperty{\n\t\t\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\t\t\tweight: jsii.Number(123),\n\t\t},\n\t},\n\ttargetGroupStickinessConfig: &targetGroupStickinessConfigProperty{\n\t\tdurationSeconds: jsii.Number(123),\n\t\tenabled: jsii.Boolean(false),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst forwardConfigProperty: elbv2.CfnListenerRule.ForwardConfigProperty = {\n  targetGroups: [{\n    targetGroupArn: 'targetGroupArn',\n    weight: 123,\n  }],\n  targetGroupStickinessConfig: {\n    durationSeconds: 123,\n    enabled: false,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.ForwardConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.ForwardConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst forwardConfigProperty: elbv2.CfnListenerRule.ForwardConfigProperty = {\n  targetGroups: [{\n    targetGroupArn: 'targetGroupArn',\n    weight: 123,\n  }],\n  targetGroupStickinessConfig: {\n    durationSeconds: 123,\n    enabled: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 11,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "1f812357cd2d20b36ddf6077cec53468a4bb905b663518d480e47db58c316258"
    },
    "4c5bb0fa7da7a6a34c141c89e56c613f286b0bb57ba92a0c69933122a03fe1e2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nhost_header_config_property = elbv2.CfnListenerRule.HostHeaderConfigProperty(\n    values=[\"values\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nHostHeaderConfigProperty hostHeaderConfigProperty = new HostHeaderConfigProperty {\n    Values = new [] { \"values\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nHostHeaderConfigProperty hostHeaderConfigProperty = HostHeaderConfigProperty.builder()\n        .values(List.of(\"values\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nhostHeaderConfigProperty := &hostHeaderConfigProperty{\n\tvalues: []*string{\n\t\tjsii.String(\"values\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst hostHeaderConfigProperty: elbv2.CfnListenerRule.HostHeaderConfigProperty = {\n  values: ['values'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.HostHeaderConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.HostHeaderConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst hostHeaderConfigProperty: elbv2.CfnListenerRule.HostHeaderConfigProperty = {\n  values: ['values'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "7809766b1fb0eee2fba99b67d1821901e8e1eb06a840506008c72c85c8cf75e3"
    },
    "54f6af4d37ab64c3053e9aa79ef49e36f546dbdedb9a624f82c9b2a171f46c5b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nhttp_header_config_property = elbv2.CfnListenerRule.HttpHeaderConfigProperty(\n    http_header_name=\"httpHeaderName\",\n    values=[\"values\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nHttpHeaderConfigProperty httpHeaderConfigProperty = new HttpHeaderConfigProperty {\n    HttpHeaderName = \"httpHeaderName\",\n    Values = new [] { \"values\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nHttpHeaderConfigProperty httpHeaderConfigProperty = HttpHeaderConfigProperty.builder()\n        .httpHeaderName(\"httpHeaderName\")\n        .values(List.of(\"values\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nhttpHeaderConfigProperty := &httpHeaderConfigProperty{\n\thttpHeaderName: jsii.String(\"httpHeaderName\"),\n\tvalues: []*string{\n\t\tjsii.String(\"values\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst httpHeaderConfigProperty: elbv2.CfnListenerRule.HttpHeaderConfigProperty = {\n  httpHeaderName: 'httpHeaderName',\n  values: ['values'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.HttpHeaderConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.HttpHeaderConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpHeaderConfigProperty: elbv2.CfnListenerRule.HttpHeaderConfigProperty = {\n  httpHeaderName: 'httpHeaderName',\n  values: ['values'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "7a405d8626a979feab31b7bd7185df1f5779741c858fe40568a7c9ea12749b0b"
    },
    "c4ba4d30d92c08e2fdf09315fa82c369388ae5458a92d5877ef9b76ba0a9fbe4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nhttp_request_method_config_property = elbv2.CfnListenerRule.HttpRequestMethodConfigProperty(\n    values=[\"values\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nHttpRequestMethodConfigProperty httpRequestMethodConfigProperty = new HttpRequestMethodConfigProperty {\n    Values = new [] { \"values\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nHttpRequestMethodConfigProperty httpRequestMethodConfigProperty = HttpRequestMethodConfigProperty.builder()\n        .values(List.of(\"values\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nhttpRequestMethodConfigProperty := &httpRequestMethodConfigProperty{\n\tvalues: []*string{\n\t\tjsii.String(\"values\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst httpRequestMethodConfigProperty: elbv2.CfnListenerRule.HttpRequestMethodConfigProperty = {\n  values: ['values'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.HttpRequestMethodConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.HttpRequestMethodConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpRequestMethodConfigProperty: elbv2.CfnListenerRule.HttpRequestMethodConfigProperty = {\n  values: ['values'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "0d0649b4c35dfa51466a2ee042a4770149099704b34b2641b654d3e13dd35b36"
    },
    "d0e6165e574a2bf3e7d4d9824acc32222f7a7d62cc7b226d2450a454351803d5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\npath_pattern_config_property = elbv2.CfnListenerRule.PathPatternConfigProperty(\n    values=[\"values\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nPathPatternConfigProperty pathPatternConfigProperty = new PathPatternConfigProperty {\n    Values = new [] { \"values\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nPathPatternConfigProperty pathPatternConfigProperty = PathPatternConfigProperty.builder()\n        .values(List.of(\"values\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\npathPatternConfigProperty := &pathPatternConfigProperty{\n\tvalues: []*string{\n\t\tjsii.String(\"values\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst pathPatternConfigProperty: elbv2.CfnListenerRule.PathPatternConfigProperty = {\n  values: ['values'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.PathPatternConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.PathPatternConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst pathPatternConfigProperty: elbv2.CfnListenerRule.PathPatternConfigProperty = {\n  values: ['values'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "b9cc96b10328e9f91d46c5fd581e27f5cae0c2939c94ac31570d96e2c6f3719e"
    },
    "4d2caf7c1f5141442f1e0527c6e7d33153d02c5e25c443a933389d518d111d73": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nquery_string_config_property = elbv2.CfnListenerRule.QueryStringConfigProperty(\n    values=[elbv2.CfnListenerRule.QueryStringKeyValueProperty(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nQueryStringConfigProperty queryStringConfigProperty = new QueryStringConfigProperty {\n    Values = new [] { new QueryStringKeyValueProperty {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nQueryStringConfigProperty queryStringConfigProperty = QueryStringConfigProperty.builder()\n        .values(List.of(QueryStringKeyValueProperty.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nqueryStringConfigProperty := &queryStringConfigProperty{\n\tvalues: []interface{}{\n\t\t&queryStringKeyValueProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst queryStringConfigProperty: elbv2.CfnListenerRule.QueryStringConfigProperty = {\n  values: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.QueryStringConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.QueryStringConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst queryStringConfigProperty: elbv2.CfnListenerRule.QueryStringConfigProperty = {\n  values: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "00a63c63d800a95ab17d4228aff00cd060f759e7a9232bd5b152b4dc86d13c94"
    },
    "84c583c6150ed41c5ed67ca99770bb45f4c21d70db34fecc068987d26c32eb8f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nquery_string_key_value_property = elbv2.CfnListenerRule.QueryStringKeyValueProperty(\n    key=\"key\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nQueryStringKeyValueProperty queryStringKeyValueProperty = new QueryStringKeyValueProperty {\n    Key = \"key\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nQueryStringKeyValueProperty queryStringKeyValueProperty = QueryStringKeyValueProperty.builder()\n        .key(\"key\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nqueryStringKeyValueProperty := &queryStringKeyValueProperty{\n\tkey: jsii.String(\"key\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst queryStringKeyValueProperty: elbv2.CfnListenerRule.QueryStringKeyValueProperty = {\n  key: 'key',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.QueryStringKeyValueProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.QueryStringKeyValueProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst queryStringKeyValueProperty: elbv2.CfnListenerRule.QueryStringKeyValueProperty = {\n  key: 'key',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "0663d5fdd3b6b5bc0811c7606580dd4b3c1211d864fb9ce3059882da1193890c"
    },
    "6a4dadf0ae5f66f75d7c983f3742fabc45499cc17e7daff595788323f17e0fb5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nredirect_config_property = elbv2.CfnListenerRule.RedirectConfigProperty(\n    status_code=\"statusCode\",\n\n    # the properties below are optional\n    host=\"host\",\n    path=\"path\",\n    port=\"port\",\n    protocol=\"protocol\",\n    query=\"query\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nRedirectConfigProperty redirectConfigProperty = new RedirectConfigProperty {\n    StatusCode = \"statusCode\",\n\n    // the properties below are optional\n    Host = \"host\",\n    Path = \"path\",\n    Port = \"port\",\n    Protocol = \"protocol\",\n    Query = \"query\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nRedirectConfigProperty redirectConfigProperty = RedirectConfigProperty.builder()\n        .statusCode(\"statusCode\")\n\n        // the properties below are optional\n        .host(\"host\")\n        .path(\"path\")\n        .port(\"port\")\n        .protocol(\"protocol\")\n        .query(\"query\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nredirectConfigProperty := &redirectConfigProperty{\n\tstatusCode: jsii.String(\"statusCode\"),\n\n\t// the properties below are optional\n\thost: jsii.String(\"host\"),\n\tpath: jsii.String(\"path\"),\n\tport: jsii.String(\"port\"),\n\tprotocol: jsii.String(\"protocol\"),\n\tquery: jsii.String(\"query\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst redirectConfigProperty: elbv2.CfnListenerRule.RedirectConfigProperty = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  host: 'host',\n  path: 'path',\n  port: 'port',\n  protocol: 'protocol',\n  query: 'query',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.RedirectConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.RedirectConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst redirectConfigProperty: elbv2.CfnListenerRule.RedirectConfigProperty = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  host: 'host',\n  path: 'path',\n  port: 'port',\n  protocol: 'protocol',\n  query: 'query',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 11,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "6acbae48c9e4feb417949769254b44d7af3a6387ff7082cbc85afba60894217c"
    },
    "09217a8a47f2d4a9d9a523f3a6fcc86bf875836f8f0d5454dc1ed071afe3f031": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nrule_condition_property = elbv2.CfnListenerRule.RuleConditionProperty(\n    field=\"field\",\n    host_header_config=elbv2.CfnListenerRule.HostHeaderConfigProperty(\n        values=[\"values\"]\n    ),\n    http_header_config=elbv2.CfnListenerRule.HttpHeaderConfigProperty(\n        http_header_name=\"httpHeaderName\",\n        values=[\"values\"]\n    ),\n    http_request_method_config=elbv2.CfnListenerRule.HttpRequestMethodConfigProperty(\n        values=[\"values\"]\n    ),\n    path_pattern_config=elbv2.CfnListenerRule.PathPatternConfigProperty(\n        values=[\"values\"]\n    ),\n    query_string_config=elbv2.CfnListenerRule.QueryStringConfigProperty(\n        values=[elbv2.CfnListenerRule.QueryStringKeyValueProperty(\n            key=\"key\",\n            value=\"value\"\n        )]\n    ),\n    source_ip_config=elbv2.CfnListenerRule.SourceIpConfigProperty(\n        values=[\"values\"]\n    ),\n    values=[\"values\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nRuleConditionProperty ruleConditionProperty = new RuleConditionProperty {\n    Field = \"field\",\n    HostHeaderConfig = new HostHeaderConfigProperty {\n        Values = new [] { \"values\" }\n    },\n    HttpHeaderConfig = new HttpHeaderConfigProperty {\n        HttpHeaderName = \"httpHeaderName\",\n        Values = new [] { \"values\" }\n    },\n    HttpRequestMethodConfig = new HttpRequestMethodConfigProperty {\n        Values = new [] { \"values\" }\n    },\n    PathPatternConfig = new PathPatternConfigProperty {\n        Values = new [] { \"values\" }\n    },\n    QueryStringConfig = new QueryStringConfigProperty {\n        Values = new [] { new QueryStringKeyValueProperty {\n            Key = \"key\",\n            Value = \"value\"\n        } }\n    },\n    SourceIpConfig = new SourceIpConfigProperty {\n        Values = new [] { \"values\" }\n    },\n    Values = new [] { \"values\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nRuleConditionProperty ruleConditionProperty = RuleConditionProperty.builder()\n        .field(\"field\")\n        .hostHeaderConfig(HostHeaderConfigProperty.builder()\n                .values(List.of(\"values\"))\n                .build())\n        .httpHeaderConfig(HttpHeaderConfigProperty.builder()\n                .httpHeaderName(\"httpHeaderName\")\n                .values(List.of(\"values\"))\n                .build())\n        .httpRequestMethodConfig(HttpRequestMethodConfigProperty.builder()\n                .values(List.of(\"values\"))\n                .build())\n        .pathPatternConfig(PathPatternConfigProperty.builder()\n                .values(List.of(\"values\"))\n                .build())\n        .queryStringConfig(QueryStringConfigProperty.builder()\n                .values(List.of(QueryStringKeyValueProperty.builder()\n                        .key(\"key\")\n                        .value(\"value\")\n                        .build()))\n                .build())\n        .sourceIpConfig(SourceIpConfigProperty.builder()\n                .values(List.of(\"values\"))\n                .build())\n        .values(List.of(\"values\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nruleConditionProperty := &ruleConditionProperty{\n\tfield: jsii.String(\"field\"),\n\thostHeaderConfig: &hostHeaderConfigProperty{\n\t\tvalues: []*string{\n\t\t\tjsii.String(\"values\"),\n\t\t},\n\t},\n\thttpHeaderConfig: &httpHeaderConfigProperty{\n\t\thttpHeaderName: jsii.String(\"httpHeaderName\"),\n\t\tvalues: []*string{\n\t\t\tjsii.String(\"values\"),\n\t\t},\n\t},\n\thttpRequestMethodConfig: &httpRequestMethodConfigProperty{\n\t\tvalues: []*string{\n\t\t\tjsii.String(\"values\"),\n\t\t},\n\t},\n\tpathPatternConfig: &pathPatternConfigProperty{\n\t\tvalues: []*string{\n\t\t\tjsii.String(\"values\"),\n\t\t},\n\t},\n\tqueryStringConfig: &queryStringConfigProperty{\n\t\tvalues: []interface{}{\n\t\t\t&queryStringKeyValueProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t},\n\tsourceIpConfig: &sourceIpConfigProperty{\n\t\tvalues: []*string{\n\t\t\tjsii.String(\"values\"),\n\t\t},\n\t},\n\tvalues: []*string{\n\t\tjsii.String(\"values\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst ruleConditionProperty: elbv2.CfnListenerRule.RuleConditionProperty = {\n  field: 'field',\n  hostHeaderConfig: {\n    values: ['values'],\n  },\n  httpHeaderConfig: {\n    httpHeaderName: 'httpHeaderName',\n    values: ['values'],\n  },\n  httpRequestMethodConfig: {\n    values: ['values'],\n  },\n  pathPatternConfig: {\n    values: ['values'],\n  },\n  queryStringConfig: {\n    values: [{\n      key: 'key',\n      value: 'value',\n    }],\n  },\n  sourceIpConfig: {\n    values: ['values'],\n  },\n  values: ['values'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.RuleConditionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.RuleConditionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ruleConditionProperty: elbv2.CfnListenerRule.RuleConditionProperty = {\n  field: 'field',\n  hostHeaderConfig: {\n    values: ['values'],\n  },\n  httpHeaderConfig: {\n    httpHeaderName: 'httpHeaderName',\n    values: ['values'],\n  },\n  httpRequestMethodConfig: {\n    values: ['values'],\n  },\n  pathPatternConfig: {\n    values: ['values'],\n  },\n  queryStringConfig: {\n    values: [{\n      key: 'key',\n      value: 'value',\n    }],\n  },\n  sourceIpConfig: {\n    values: ['values'],\n  },\n  values: ['values'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 11,
        "75": 22,
        "153": 2,
        "169": 1,
        "192": 7,
        "193": 8,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 17,
        "290": 1
      },
      "fqnsFingerprint": "8f53fd18c491da9fb2284498c82ada401a38a6be68e96aaad5c04b918bbc22f2"
    },
    "a65f7279c452519be86daa4649722a0c86b055a5a9ae3bf70693d8f4c87bae4d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nsource_ip_config_property = elbv2.CfnListenerRule.SourceIpConfigProperty(\n    values=[\"values\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nSourceIpConfigProperty sourceIpConfigProperty = new SourceIpConfigProperty {\n    Values = new [] { \"values\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nSourceIpConfigProperty sourceIpConfigProperty = SourceIpConfigProperty.builder()\n        .values(List.of(\"values\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nsourceIpConfigProperty := &sourceIpConfigProperty{\n\tvalues: []*string{\n\t\tjsii.String(\"values\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst sourceIpConfigProperty: elbv2.CfnListenerRule.SourceIpConfigProperty = {\n  values: ['values'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.SourceIpConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.SourceIpConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sourceIpConfigProperty: elbv2.CfnListenerRule.SourceIpConfigProperty = {\n  values: ['values'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "2ac1c9861f87303f975ed880379389904b9d58fae369f38bed7cf08a09d73ded"
    },
    "349261a5aaaa99f715b27fe7849bc75fff73bba987497bc63c31a6a92ea7c06e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ntarget_group_stickiness_config_property = elbv2.CfnListenerRule.TargetGroupStickinessConfigProperty(\n    duration_seconds=123,\n    enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nTargetGroupStickinessConfigProperty targetGroupStickinessConfigProperty = new TargetGroupStickinessConfigProperty {\n    DurationSeconds = 123,\n    Enabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nTargetGroupStickinessConfigProperty targetGroupStickinessConfigProperty = TargetGroupStickinessConfigProperty.builder()\n        .durationSeconds(123)\n        .enabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ntargetGroupStickinessConfigProperty := &targetGroupStickinessConfigProperty{\n\tdurationSeconds: jsii.Number(123),\n\tenabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetGroupStickinessConfigProperty: elbv2.CfnListenerRule.TargetGroupStickinessConfigProperty = {\n  durationSeconds: 123,\n  enabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.TargetGroupStickinessConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.TargetGroupStickinessConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetGroupStickinessConfigProperty: elbv2.CfnListenerRule.TargetGroupStickinessConfigProperty = {\n  durationSeconds: 123,\n  enabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "515b9518c9be7fe85df58a8bc630f51291ff4bb7bbee16035d2381ad3f8543f8"
    },
    "4ed6126bbd648a7c37ceeb0fdf2a2531f123c90608525eabf6ee5f336a47a158": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ntarget_group_tuple_property = elbv2.CfnListenerRule.TargetGroupTupleProperty(\n    target_group_arn=\"targetGroupArn\",\n    weight=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nTargetGroupTupleProperty targetGroupTupleProperty = new TargetGroupTupleProperty {\n    TargetGroupArn = \"targetGroupArn\",\n    Weight = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nTargetGroupTupleProperty targetGroupTupleProperty = TargetGroupTupleProperty.builder()\n        .targetGroupArn(\"targetGroupArn\")\n        .weight(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ntargetGroupTupleProperty := &targetGroupTupleProperty{\n\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\tweight: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetGroupTupleProperty: elbv2.CfnListenerRule.TargetGroupTupleProperty = {\n  targetGroupArn: 'targetGroupArn',\n  weight: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.TargetGroupTupleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.TargetGroupTupleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetGroupTupleProperty: elbv2.CfnListenerRule.TargetGroupTupleProperty = {\n  targetGroupArn: 'targetGroupArn',\n  weight: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "0cadc8376f9b52c8d074b62c486122c35f9b37a452155b1d1a3ff9c3111f13ce"
    },
    "6147802d3f7404d66fa2055ca8efbaab49c11f0790ba7906c9ec623b7b500914": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ncfn_listener_rule_props = elbv2.CfnListenerRuleProps(\n    actions=[elbv2.CfnListenerRule.ActionProperty(\n        type=\"type\",\n\n        # the properties below are optional\n        authenticate_cognito_config=elbv2.CfnListenerRule.AuthenticateCognitoConfigProperty(\n            user_pool_arn=\"userPoolArn\",\n            user_pool_client_id=\"userPoolClientId\",\n            user_pool_domain=\"userPoolDomain\",\n\n            # the properties below are optional\n            authentication_request_extra_params={\n                \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n            },\n            on_unauthenticated_request=\"onUnauthenticatedRequest\",\n            scope=\"scope\",\n            session_cookie_name=\"sessionCookieName\",\n            session_timeout=123\n        ),\n        authenticate_oidc_config=elbv2.CfnListenerRule.AuthenticateOidcConfigProperty(\n            authorization_endpoint=\"authorizationEndpoint\",\n            client_id=\"clientId\",\n            issuer=\"issuer\",\n            token_endpoint=\"tokenEndpoint\",\n            user_info_endpoint=\"userInfoEndpoint\",\n\n            # the properties below are optional\n            authentication_request_extra_params={\n                \"authentication_request_extra_params_key\": \"authenticationRequestExtraParams\"\n            },\n            client_secret=\"clientSecret\",\n            on_unauthenticated_request=\"onUnauthenticatedRequest\",\n            scope=\"scope\",\n            session_cookie_name=\"sessionCookieName\",\n            session_timeout=123,\n            use_existing_client_secret=False\n        ),\n        fixed_response_config=elbv2.CfnListenerRule.FixedResponseConfigProperty(\n            status_code=\"statusCode\",\n\n            # the properties below are optional\n            content_type=\"contentType\",\n            message_body=\"messageBody\"\n        ),\n        forward_config=elbv2.CfnListenerRule.ForwardConfigProperty(\n            target_groups=[elbv2.CfnListenerRule.TargetGroupTupleProperty(\n                target_group_arn=\"targetGroupArn\",\n                weight=123\n            )],\n            target_group_stickiness_config=elbv2.CfnListenerRule.TargetGroupStickinessConfigProperty(\n                duration_seconds=123,\n                enabled=False\n            )\n        ),\n        order=123,\n        redirect_config=elbv2.CfnListenerRule.RedirectConfigProperty(\n            status_code=\"statusCode\",\n\n            # the properties below are optional\n            host=\"host\",\n            path=\"path\",\n            port=\"port\",\n            protocol=\"protocol\",\n            query=\"query\"\n        ),\n        target_group_arn=\"targetGroupArn\"\n    )],\n    conditions=[elbv2.CfnListenerRule.RuleConditionProperty(\n        field=\"field\",\n        host_header_config=elbv2.CfnListenerRule.HostHeaderConfigProperty(\n            values=[\"values\"]\n        ),\n        http_header_config=elbv2.CfnListenerRule.HttpHeaderConfigProperty(\n            http_header_name=\"httpHeaderName\",\n            values=[\"values\"]\n        ),\n        http_request_method_config=elbv2.CfnListenerRule.HttpRequestMethodConfigProperty(\n            values=[\"values\"]\n        ),\n        path_pattern_config=elbv2.CfnListenerRule.PathPatternConfigProperty(\n            values=[\"values\"]\n        ),\n        query_string_config=elbv2.CfnListenerRule.QueryStringConfigProperty(\n            values=[elbv2.CfnListenerRule.QueryStringKeyValueProperty(\n                key=\"key\",\n                value=\"value\"\n            )]\n        ),\n        source_ip_config=elbv2.CfnListenerRule.SourceIpConfigProperty(\n            values=[\"values\"]\n        ),\n        values=[\"values\"]\n    )],\n    listener_arn=\"listenerArn\",\n    priority=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nCfnListenerRuleProps cfnListenerRuleProps = new CfnListenerRuleProps {\n    Actions = new [] { new ActionProperty {\n        Type = \"type\",\n\n        // the properties below are optional\n        AuthenticateCognitoConfig = new AuthenticateCognitoConfigProperty {\n            UserPoolArn = \"userPoolArn\",\n            UserPoolClientId = \"userPoolClientId\",\n            UserPoolDomain = \"userPoolDomain\",\n\n            // the properties below are optional\n            AuthenticationRequestExtraParams = new Dictionary<string, string> {\n                { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n            },\n            OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n            Scope = \"scope\",\n            SessionCookieName = \"sessionCookieName\",\n            SessionTimeout = 123\n        },\n        AuthenticateOidcConfig = new AuthenticateOidcConfigProperty {\n            AuthorizationEndpoint = \"authorizationEndpoint\",\n            ClientId = \"clientId\",\n            Issuer = \"issuer\",\n            TokenEndpoint = \"tokenEndpoint\",\n            UserInfoEndpoint = \"userInfoEndpoint\",\n\n            // the properties below are optional\n            AuthenticationRequestExtraParams = new Dictionary<string, string> {\n                { \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\" }\n            },\n            ClientSecret = \"clientSecret\",\n            OnUnauthenticatedRequest = \"onUnauthenticatedRequest\",\n            Scope = \"scope\",\n            SessionCookieName = \"sessionCookieName\",\n            SessionTimeout = 123,\n            UseExistingClientSecret = false\n        },\n        FixedResponseConfig = new FixedResponseConfigProperty {\n            StatusCode = \"statusCode\",\n\n            // the properties below are optional\n            ContentType = \"contentType\",\n            MessageBody = \"messageBody\"\n        },\n        ForwardConfig = new ForwardConfigProperty {\n            TargetGroups = new [] { new TargetGroupTupleProperty {\n                TargetGroupArn = \"targetGroupArn\",\n                Weight = 123\n            } },\n            TargetGroupStickinessConfig = new TargetGroupStickinessConfigProperty {\n                DurationSeconds = 123,\n                Enabled = false\n            }\n        },\n        Order = 123,\n        RedirectConfig = new RedirectConfigProperty {\n            StatusCode = \"statusCode\",\n\n            // the properties below are optional\n            Host = \"host\",\n            Path = \"path\",\n            Port = \"port\",\n            Protocol = \"protocol\",\n            Query = \"query\"\n        },\n        TargetGroupArn = \"targetGroupArn\"\n    } },\n    Conditions = new [] { new RuleConditionProperty {\n        Field = \"field\",\n        HostHeaderConfig = new HostHeaderConfigProperty {\n            Values = new [] { \"values\" }\n        },\n        HttpHeaderConfig = new HttpHeaderConfigProperty {\n            HttpHeaderName = \"httpHeaderName\",\n            Values = new [] { \"values\" }\n        },\n        HttpRequestMethodConfig = new HttpRequestMethodConfigProperty {\n            Values = new [] { \"values\" }\n        },\n        PathPatternConfig = new PathPatternConfigProperty {\n            Values = new [] { \"values\" }\n        },\n        QueryStringConfig = new QueryStringConfigProperty {\n            Values = new [] { new QueryStringKeyValueProperty {\n                Key = \"key\",\n                Value = \"value\"\n            } }\n        },\n        SourceIpConfig = new SourceIpConfigProperty {\n            Values = new [] { \"values\" }\n        },\n        Values = new [] { \"values\" }\n    } },\n    ListenerArn = \"listenerArn\",\n    Priority = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nCfnListenerRuleProps cfnListenerRuleProps = CfnListenerRuleProps.builder()\n        .actions(List.of(ActionProperty.builder()\n                .type(\"type\")\n\n                // the properties below are optional\n                .authenticateCognitoConfig(AuthenticateCognitoConfigProperty.builder()\n                        .userPoolArn(\"userPoolArn\")\n                        .userPoolClientId(\"userPoolClientId\")\n                        .userPoolDomain(\"userPoolDomain\")\n\n                        // the properties below are optional\n                        .authenticationRequestExtraParams(Map.of(\n                                \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n                        .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n                        .scope(\"scope\")\n                        .sessionCookieName(\"sessionCookieName\")\n                        .sessionTimeout(123)\n                        .build())\n                .authenticateOidcConfig(AuthenticateOidcConfigProperty.builder()\n                        .authorizationEndpoint(\"authorizationEndpoint\")\n                        .clientId(\"clientId\")\n                        .issuer(\"issuer\")\n                        .tokenEndpoint(\"tokenEndpoint\")\n                        .userInfoEndpoint(\"userInfoEndpoint\")\n\n                        // the properties below are optional\n                        .authenticationRequestExtraParams(Map.of(\n                                \"authenticationRequestExtraParamsKey\", \"authenticationRequestExtraParams\"))\n                        .clientSecret(\"clientSecret\")\n                        .onUnauthenticatedRequest(\"onUnauthenticatedRequest\")\n                        .scope(\"scope\")\n                        .sessionCookieName(\"sessionCookieName\")\n                        .sessionTimeout(123)\n                        .useExistingClientSecret(false)\n                        .build())\n                .fixedResponseConfig(FixedResponseConfigProperty.builder()\n                        .statusCode(\"statusCode\")\n\n                        // the properties below are optional\n                        .contentType(\"contentType\")\n                        .messageBody(\"messageBody\")\n                        .build())\n                .forwardConfig(ForwardConfigProperty.builder()\n                        .targetGroups(List.of(TargetGroupTupleProperty.builder()\n                                .targetGroupArn(\"targetGroupArn\")\n                                .weight(123)\n                                .build()))\n                        .targetGroupStickinessConfig(TargetGroupStickinessConfigProperty.builder()\n                                .durationSeconds(123)\n                                .enabled(false)\n                                .build())\n                        .build())\n                .order(123)\n                .redirectConfig(RedirectConfigProperty.builder()\n                        .statusCode(\"statusCode\")\n\n                        // the properties below are optional\n                        .host(\"host\")\n                        .path(\"path\")\n                        .port(\"port\")\n                        .protocol(\"protocol\")\n                        .query(\"query\")\n                        .build())\n                .targetGroupArn(\"targetGroupArn\")\n                .build()))\n        .conditions(List.of(RuleConditionProperty.builder()\n                .field(\"field\")\n                .hostHeaderConfig(HostHeaderConfigProperty.builder()\n                        .values(List.of(\"values\"))\n                        .build())\n                .httpHeaderConfig(HttpHeaderConfigProperty.builder()\n                        .httpHeaderName(\"httpHeaderName\")\n                        .values(List.of(\"values\"))\n                        .build())\n                .httpRequestMethodConfig(HttpRequestMethodConfigProperty.builder()\n                        .values(List.of(\"values\"))\n                        .build())\n                .pathPatternConfig(PathPatternConfigProperty.builder()\n                        .values(List.of(\"values\"))\n                        .build())\n                .queryStringConfig(QueryStringConfigProperty.builder()\n                        .values(List.of(QueryStringKeyValueProperty.builder()\n                                .key(\"key\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .sourceIpConfig(SourceIpConfigProperty.builder()\n                        .values(List.of(\"values\"))\n                        .build())\n                .values(List.of(\"values\"))\n                .build()))\n        .listenerArn(\"listenerArn\")\n        .priority(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ncfnListenerRuleProps := &cfnListenerRuleProps{\n\tactions: []interface{}{\n\t\t&actionProperty{\n\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t// the properties below are optional\n\t\t\tauthenticateCognitoConfig: &authenticateCognitoConfigProperty{\n\t\t\t\tuserPoolArn: jsii.String(\"userPoolArn\"),\n\t\t\t\tuserPoolClientId: jsii.String(\"userPoolClientId\"),\n\t\t\t\tuserPoolDomain: jsii.String(\"userPoolDomain\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\t\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t\t\t\t},\n\t\t\t\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\t\t\t\tsessionTimeout: jsii.Number(123),\n\t\t\t},\n\t\t\tauthenticateOidcConfig: &authenticateOidcConfigProperty{\n\t\t\t\tauthorizationEndpoint: jsii.String(\"authorizationEndpoint\"),\n\t\t\t\tclientId: jsii.String(\"clientId\"),\n\t\t\t\tissuer: jsii.String(\"issuer\"),\n\t\t\t\ttokenEndpoint: jsii.String(\"tokenEndpoint\"),\n\t\t\t\tuserInfoEndpoint: jsii.String(\"userInfoEndpoint\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tauthenticationRequestExtraParams: map[string]*string{\n\t\t\t\t\t\"authenticationRequestExtraParamsKey\": jsii.String(\"authenticationRequestExtraParams\"),\n\t\t\t\t},\n\t\t\t\tclientSecret: jsii.String(\"clientSecret\"),\n\t\t\t\tonUnauthenticatedRequest: jsii.String(\"onUnauthenticatedRequest\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\tsessionCookieName: jsii.String(\"sessionCookieName\"),\n\t\t\t\tsessionTimeout: jsii.Number(123),\n\t\t\t\tuseExistingClientSecret: jsii.Boolean(false),\n\t\t\t},\n\t\t\tfixedResponseConfig: &fixedResponseConfigProperty{\n\t\t\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcontentType: jsii.String(\"contentType\"),\n\t\t\t\tmessageBody: jsii.String(\"messageBody\"),\n\t\t\t},\n\t\t\tforwardConfig: &forwardConfigProperty{\n\t\t\t\ttargetGroups: []interface{}{\n\t\t\t\t\t&targetGroupTupleProperty{\n\t\t\t\t\t\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\t\t\t\t\t\tweight: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttargetGroupStickinessConfig: &targetGroupStickinessConfigProperty{\n\t\t\t\t\tdurationSeconds: jsii.Number(123),\n\t\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t},\n\t\t\torder: jsii.Number(123),\n\t\t\tredirectConfig: &redirectConfigProperty{\n\t\t\t\tstatusCode: jsii.String(\"statusCode\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\thost: jsii.String(\"host\"),\n\t\t\t\tpath: jsii.String(\"path\"),\n\t\t\t\tport: jsii.String(\"port\"),\n\t\t\t\tprotocol: jsii.String(\"protocol\"),\n\t\t\t\tquery: jsii.String(\"query\"),\n\t\t\t},\n\t\t\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\t\t},\n\t},\n\tconditions: []interface{}{\n\t\t&ruleConditionProperty{\n\t\t\tfield: jsii.String(\"field\"),\n\t\t\thostHeaderConfig: &hostHeaderConfigProperty{\n\t\t\t\tvalues: []*string{\n\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\thttpHeaderConfig: &httpHeaderConfigProperty{\n\t\t\t\thttpHeaderName: jsii.String(\"httpHeaderName\"),\n\t\t\t\tvalues: []*string{\n\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\thttpRequestMethodConfig: &httpRequestMethodConfigProperty{\n\t\t\t\tvalues: []*string{\n\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tpathPatternConfig: &pathPatternConfigProperty{\n\t\t\t\tvalues: []*string{\n\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tqueryStringConfig: &queryStringConfigProperty{\n\t\t\t\tvalues: []interface{}{\n\t\t\t\t\t&queryStringKeyValueProperty{\n\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsourceIpConfig: &sourceIpConfigProperty{\n\t\t\t\tvalues: []*string{\n\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tvalues: []*string{\n\t\t\t\tjsii.String(\"values\"),\n\t\t\t},\n\t\t},\n\t},\n\tlistenerArn: jsii.String(\"listenerArn\"),\n\tpriority: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnListenerRuleProps: elbv2.CfnListenerRuleProps = {\n  actions: [{\n    type: 'type',\n\n    // the properties below are optional\n    authenticateCognitoConfig: {\n      userPoolArn: 'userPoolArn',\n      userPoolClientId: 'userPoolClientId',\n      userPoolDomain: 'userPoolDomain',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 123,\n    },\n    authenticateOidcConfig: {\n      authorizationEndpoint: 'authorizationEndpoint',\n      clientId: 'clientId',\n      issuer: 'issuer',\n      tokenEndpoint: 'tokenEndpoint',\n      userInfoEndpoint: 'userInfoEndpoint',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      clientSecret: 'clientSecret',\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 123,\n      useExistingClientSecret: false,\n    },\n    fixedResponseConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      contentType: 'contentType',\n      messageBody: 'messageBody',\n    },\n    forwardConfig: {\n      targetGroups: [{\n        targetGroupArn: 'targetGroupArn',\n        weight: 123,\n      }],\n      targetGroupStickinessConfig: {\n        durationSeconds: 123,\n        enabled: false,\n      },\n    },\n    order: 123,\n    redirectConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      host: 'host',\n      path: 'path',\n      port: 'port',\n      protocol: 'protocol',\n      query: 'query',\n    },\n    targetGroupArn: 'targetGroupArn',\n  }],\n  conditions: [{\n    field: 'field',\n    hostHeaderConfig: {\n      values: ['values'],\n    },\n    httpHeaderConfig: {\n      httpHeaderName: 'httpHeaderName',\n      values: ['values'],\n    },\n    httpRequestMethodConfig: {\n      values: ['values'],\n    },\n    pathPatternConfig: {\n      values: ['values'],\n    },\n    queryStringConfig: {\n      values: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    sourceIpConfig: {\n      values: ['values'],\n    },\n    values: ['values'],\n  }],\n  listenerArn: 'listenerArn',\n  priority: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRuleProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRuleProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnListenerRuleProps: elbv2.CfnListenerRuleProps = {\n  actions: [{\n    type: 'type',\n\n    // the properties below are optional\n    authenticateCognitoConfig: {\n      userPoolArn: 'userPoolArn',\n      userPoolClientId: 'userPoolClientId',\n      userPoolDomain: 'userPoolDomain',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 123,\n    },\n    authenticateOidcConfig: {\n      authorizationEndpoint: 'authorizationEndpoint',\n      clientId: 'clientId',\n      issuer: 'issuer',\n      tokenEndpoint: 'tokenEndpoint',\n      userInfoEndpoint: 'userInfoEndpoint',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      clientSecret: 'clientSecret',\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 123,\n      useExistingClientSecret: false,\n    },\n    fixedResponseConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      contentType: 'contentType',\n      messageBody: 'messageBody',\n    },\n    forwardConfig: {\n      targetGroups: [{\n        targetGroupArn: 'targetGroupArn',\n        weight: 123,\n      }],\n      targetGroupStickinessConfig: {\n        durationSeconds: 123,\n        enabled: false,\n      },\n    },\n    order: 123,\n    redirectConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      host: 'host',\n      path: 'path',\n      port: 'port',\n      protocol: 'protocol',\n      query: 'query',\n    },\n    targetGroupArn: 'targetGroupArn',\n  }],\n  conditions: [{\n    field: 'field',\n    hostHeaderConfig: {\n      values: ['values'],\n    },\n    httpHeaderConfig: {\n      httpHeaderName: 'httpHeaderName',\n      values: ['values'],\n    },\n    httpRequestMethodConfig: {\n      values: ['values'],\n    },\n    pathPatternConfig: {\n      values: ['values'],\n    },\n    queryStringConfig: {\n      values: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    sourceIpConfig: {\n      values: ['values'],\n    },\n    values: ['values'],\n  }],\n  listenerArn: 'listenerArn',\n  priority: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 41,
        "75": 70,
        "91": 2,
        "153": 1,
        "169": 1,
        "192": 10,
        "193": 19,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 66,
        "290": 1
      },
      "fqnsFingerprint": "a14bcdaa565f028124e4e4c01c2154ad3d21b4e4dc945e79ce26085c53311c6f"
    },
    "fda5d9486a53a2c0d21b7c9ac2d4c232dbda2800249912d348f21ea098f67016": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ncfn_load_balancer = elbv2.CfnLoadBalancer(self, \"MyCfnLoadBalancer\",\n    ip_address_type=\"ipAddressType\",\n    load_balancer_attributes=[elbv2.CfnLoadBalancer.LoadBalancerAttributeProperty(\n        key=\"key\",\n        value=\"value\"\n    )],\n    name=\"name\",\n    scheme=\"scheme\",\n    security_groups=[\"securityGroups\"],\n    subnet_mappings=[elbv2.CfnLoadBalancer.SubnetMappingProperty(\n        subnet_id=\"subnetId\",\n\n        # the properties below are optional\n        allocation_id=\"allocationId\",\n        i_pv6_address=\"iPv6Address\",\n        private_iPv4_address=\"privateIPv4Address\"\n    )],\n    subnets=[\"subnets\"],\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    type=\"type\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nCfnLoadBalancer cfnLoadBalancer = new CfnLoadBalancer(this, \"MyCfnLoadBalancer\", new CfnLoadBalancerProps {\n    IpAddressType = \"ipAddressType\",\n    LoadBalancerAttributes = new [] { new LoadBalancerAttributeProperty {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    Name = \"name\",\n    Scheme = \"scheme\",\n    SecurityGroups = new [] { \"securityGroups\" },\n    SubnetMappings = new [] { new SubnetMappingProperty {\n        SubnetId = \"subnetId\",\n\n        // the properties below are optional\n        AllocationId = \"allocationId\",\n        IPv6Address = \"iPv6Address\",\n        PrivateIPv4Address = \"privateIPv4Address\"\n    } },\n    Subnets = new [] { \"subnets\" },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    Type = \"type\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nCfnLoadBalancer cfnLoadBalancer = CfnLoadBalancer.Builder.create(this, \"MyCfnLoadBalancer\")\n        .ipAddressType(\"ipAddressType\")\n        .loadBalancerAttributes(List.of(LoadBalancerAttributeProperty.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .name(\"name\")\n        .scheme(\"scheme\")\n        .securityGroups(List.of(\"securityGroups\"))\n        .subnetMappings(List.of(SubnetMappingProperty.builder()\n                .subnetId(\"subnetId\")\n\n                // the properties below are optional\n                .allocationId(\"allocationId\")\n                .iPv6Address(\"iPv6Address\")\n                .privateIPv4Address(\"privateIPv4Address\")\n                .build()))\n        .subnets(List.of(\"subnets\"))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .type(\"type\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ncfnLoadBalancer := elbv2.NewCfnLoadBalancer(this, jsii.String(\"MyCfnLoadBalancer\"), &cfnLoadBalancerProps{\n\tipAddressType: jsii.String(\"ipAddressType\"),\n\tloadBalancerAttributes: []interface{}{\n\t\t&loadBalancerAttributeProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tname: jsii.String(\"name\"),\n\tscheme: jsii.String(\"scheme\"),\n\tsecurityGroups: []*string{\n\t\tjsii.String(\"securityGroups\"),\n\t},\n\tsubnetMappings: []interface{}{\n\t\t&subnetMappingProperty{\n\t\t\tsubnetId: jsii.String(\"subnetId\"),\n\n\t\t\t// the properties below are optional\n\t\t\tallocationId: jsii.String(\"allocationId\"),\n\t\t\tiPv6Address: jsii.String(\"iPv6Address\"),\n\t\t\tprivateIPv4Address: jsii.String(\"privateIPv4Address\"),\n\t\t},\n\t},\n\tsubnets: []*string{\n\t\tjsii.String(\"subnets\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttype: jsii.String(\"type\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnLoadBalancer = new elbv2.CfnLoadBalancer(this, 'MyCfnLoadBalancer', /* all optional props */ {\n  ipAddressType: 'ipAddressType',\n  loadBalancerAttributes: [{\n    key: 'key',\n    value: 'value',\n  }],\n  name: 'name',\n  scheme: 'scheme',\n  securityGroups: ['securityGroups'],\n  subnetMappings: [{\n    subnetId: 'subnetId',\n\n    // the properties below are optional\n    allocationId: 'allocationId',\n    iPv6Address: 'iPv6Address',\n    privateIPv4Address: 'privateIPv4Address',\n  }],\n  subnets: ['subnets'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  type: 'type',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancerProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnLoadBalancer = new elbv2.CfnLoadBalancer(this, 'MyCfnLoadBalancer', /* all optional props */ {\n  ipAddressType: 'ipAddressType',\n  loadBalancerAttributes: [{\n    key: 'key',\n    value: 'value',\n  }],\n  name: 'name',\n  scheme: 'scheme',\n  securityGroups: ['securityGroups'],\n  subnetMappings: [{\n    subnetId: 'subnetId',\n\n    // the properties below are optional\n    allocationId: 'allocationId',\n    iPv6Address: 'iPv6Address',\n    privateIPv4Address: 'privateIPv4Address',\n  }],\n  subnets: ['subnets'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  type: 'type',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 16,
        "75": 21,
        "104": 1,
        "192": 5,
        "193": 4,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 17,
        "290": 1
      },
      "fqnsFingerprint": "ce82292f3f12b447ab3c7a273b7ea0d36b73d4b1484576f62ceda3903a193c59"
    },
    "2c6d5d6ba54a021047f48d375aa4ae71a361fd395efa7ed7793e7b7d7fbbb9ef": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nload_balancer_attribute_property = elbv2.CfnLoadBalancer.LoadBalancerAttributeProperty(\n    key=\"key\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nLoadBalancerAttributeProperty loadBalancerAttributeProperty = new LoadBalancerAttributeProperty {\n    Key = \"key\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nLoadBalancerAttributeProperty loadBalancerAttributeProperty = LoadBalancerAttributeProperty.builder()\n        .key(\"key\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nloadBalancerAttributeProperty := &loadBalancerAttributeProperty{\n\tkey: jsii.String(\"key\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst loadBalancerAttributeProperty: elbv2.CfnLoadBalancer.LoadBalancerAttributeProperty = {\n  key: 'key',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer.LoadBalancerAttributeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer.LoadBalancerAttributeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst loadBalancerAttributeProperty: elbv2.CfnLoadBalancer.LoadBalancerAttributeProperty = {\n  key: 'key',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "bd22aaeb0ab767a83d5194f7c1ffd5cddbe1e405158267de06a86e0935b300f9"
    },
    "e899f17f1aaf675fd311237a2c5d026ed0b6748a21c5c4b45b36992630e84a09": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nsubnet_mapping_property = elbv2.CfnLoadBalancer.SubnetMappingProperty(\n    subnet_id=\"subnetId\",\n\n    # the properties below are optional\n    allocation_id=\"allocationId\",\n    i_pv6_address=\"iPv6Address\",\n    private_iPv4_address=\"privateIPv4Address\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nSubnetMappingProperty subnetMappingProperty = new SubnetMappingProperty {\n    SubnetId = \"subnetId\",\n\n    // the properties below are optional\n    AllocationId = \"allocationId\",\n    IPv6Address = \"iPv6Address\",\n    PrivateIPv4Address = \"privateIPv4Address\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nSubnetMappingProperty subnetMappingProperty = SubnetMappingProperty.builder()\n        .subnetId(\"subnetId\")\n\n        // the properties below are optional\n        .allocationId(\"allocationId\")\n        .iPv6Address(\"iPv6Address\")\n        .privateIPv4Address(\"privateIPv4Address\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nsubnetMappingProperty := &subnetMappingProperty{\n\tsubnetId: jsii.String(\"subnetId\"),\n\n\t// the properties below are optional\n\tallocationId: jsii.String(\"allocationId\"),\n\tiPv6Address: jsii.String(\"iPv6Address\"),\n\tprivateIPv4Address: jsii.String(\"privateIPv4Address\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst subnetMappingProperty: elbv2.CfnLoadBalancer.SubnetMappingProperty = {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  allocationId: 'allocationId',\n  iPv6Address: 'iPv6Address',\n  privateIPv4Address: 'privateIPv4Address',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer.SubnetMappingProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer.SubnetMappingProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst subnetMappingProperty: elbv2.CfnLoadBalancer.SubnetMappingProperty = {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  allocationId: 'allocationId',\n  iPv6Address: 'iPv6Address',\n  privateIPv4Address: 'privateIPv4Address',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "84da5a09a9dd4bbbf7bc2f8e494ad8b70933fd630d2d112a2f30e0d4fa5d2b41"
    },
    "ce48d9b0ad85ee05e88e03a9a8716a25ce95a313c31e8591e8a646226d81f04f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ncfn_load_balancer_props = elbv2.CfnLoadBalancerProps(\n    ip_address_type=\"ipAddressType\",\n    load_balancer_attributes=[elbv2.CfnLoadBalancer.LoadBalancerAttributeProperty(\n        key=\"key\",\n        value=\"value\"\n    )],\n    name=\"name\",\n    scheme=\"scheme\",\n    security_groups=[\"securityGroups\"],\n    subnet_mappings=[elbv2.CfnLoadBalancer.SubnetMappingProperty(\n        subnet_id=\"subnetId\",\n\n        # the properties below are optional\n        allocation_id=\"allocationId\",\n        i_pv6_address=\"iPv6Address\",\n        private_iPv4_address=\"privateIPv4Address\"\n    )],\n    subnets=[\"subnets\"],\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    type=\"type\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nCfnLoadBalancerProps cfnLoadBalancerProps = new CfnLoadBalancerProps {\n    IpAddressType = \"ipAddressType\",\n    LoadBalancerAttributes = new [] { new LoadBalancerAttributeProperty {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    Name = \"name\",\n    Scheme = \"scheme\",\n    SecurityGroups = new [] { \"securityGroups\" },\n    SubnetMappings = new [] { new SubnetMappingProperty {\n        SubnetId = \"subnetId\",\n\n        // the properties below are optional\n        AllocationId = \"allocationId\",\n        IPv6Address = \"iPv6Address\",\n        PrivateIPv4Address = \"privateIPv4Address\"\n    } },\n    Subnets = new [] { \"subnets\" },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    Type = \"type\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nCfnLoadBalancerProps cfnLoadBalancerProps = CfnLoadBalancerProps.builder()\n        .ipAddressType(\"ipAddressType\")\n        .loadBalancerAttributes(List.of(LoadBalancerAttributeProperty.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .name(\"name\")\n        .scheme(\"scheme\")\n        .securityGroups(List.of(\"securityGroups\"))\n        .subnetMappings(List.of(SubnetMappingProperty.builder()\n                .subnetId(\"subnetId\")\n\n                // the properties below are optional\n                .allocationId(\"allocationId\")\n                .iPv6Address(\"iPv6Address\")\n                .privateIPv4Address(\"privateIPv4Address\")\n                .build()))\n        .subnets(List.of(\"subnets\"))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .type(\"type\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ncfnLoadBalancerProps := &cfnLoadBalancerProps{\n\tipAddressType: jsii.String(\"ipAddressType\"),\n\tloadBalancerAttributes: []interface{}{\n\t\t&loadBalancerAttributeProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tname: jsii.String(\"name\"),\n\tscheme: jsii.String(\"scheme\"),\n\tsecurityGroups: []*string{\n\t\tjsii.String(\"securityGroups\"),\n\t},\n\tsubnetMappings: []interface{}{\n\t\t&subnetMappingProperty{\n\t\t\tsubnetId: jsii.String(\"subnetId\"),\n\n\t\t\t// the properties below are optional\n\t\t\tallocationId: jsii.String(\"allocationId\"),\n\t\t\tiPv6Address: jsii.String(\"iPv6Address\"),\n\t\t\tprivateIPv4Address: jsii.String(\"privateIPv4Address\"),\n\t\t},\n\t},\n\tsubnets: []*string{\n\t\tjsii.String(\"subnets\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttype: jsii.String(\"type\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnLoadBalancerProps: elbv2.CfnLoadBalancerProps = {\n  ipAddressType: 'ipAddressType',\n  loadBalancerAttributes: [{\n    key: 'key',\n    value: 'value',\n  }],\n  name: 'name',\n  scheme: 'scheme',\n  securityGroups: ['securityGroups'],\n  subnetMappings: [{\n    subnetId: 'subnetId',\n\n    // the properties below are optional\n    allocationId: 'allocationId',\n    iPv6Address: 'iPv6Address',\n    privateIPv4Address: 'privateIPv4Address',\n  }],\n  subnets: ['subnets'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  type: 'type',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancerProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnLoadBalancerProps: elbv2.CfnLoadBalancerProps = {\n  ipAddressType: 'ipAddressType',\n  loadBalancerAttributes: [{\n    key: 'key',\n    value: 'value',\n  }],\n  name: 'name',\n  scheme: 'scheme',\n  securityGroups: ['securityGroups'],\n  subnetMappings: [{\n    subnetId: 'subnetId',\n\n    // the properties below are optional\n    allocationId: 'allocationId',\n    iPv6Address: 'iPv6Address',\n    privateIPv4Address: 'privateIPv4Address',\n  }],\n  subnets: ['subnets'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  type: 'type',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 15,
        "75": 21,
        "153": 1,
        "169": 1,
        "192": 5,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 17,
        "290": 1
      },
      "fqnsFingerprint": "6c242638082797ab196cb1edd56bbe42ad434b77b2562acc21bd19bcc51e9416"
    },
    "081d786bce68334b3bdf3dcd7708887cecc4f19529d2ab38a143acfeb4eb6e28": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ncfn_target_group = elbv2.CfnTargetGroup(self, \"MyCfnTargetGroup\",\n    health_check_enabled=False,\n    health_check_interval_seconds=123,\n    health_check_path=\"healthCheckPath\",\n    health_check_port=\"healthCheckPort\",\n    health_check_protocol=\"healthCheckProtocol\",\n    health_check_timeout_seconds=123,\n    healthy_threshold_count=123,\n    ip_address_type=\"ipAddressType\",\n    matcher=elbv2.CfnTargetGroup.MatcherProperty(\n        grpc_code=\"grpcCode\",\n        http_code=\"httpCode\"\n    ),\n    name=\"name\",\n    port=123,\n    protocol=\"protocol\",\n    protocol_version=\"protocolVersion\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    target_group_attributes=[elbv2.CfnTargetGroup.TargetGroupAttributeProperty(\n        key=\"key\",\n        value=\"value\"\n    )],\n    targets=[elbv2.CfnTargetGroup.TargetDescriptionProperty(\n        id=\"id\",\n\n        # the properties below are optional\n        availability_zone=\"availabilityZone\",\n        port=123\n    )],\n    target_type=\"targetType\",\n    unhealthy_threshold_count=123,\n    vpc_id=\"vpcId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nCfnTargetGroup cfnTargetGroup = new CfnTargetGroup(this, \"MyCfnTargetGroup\", new CfnTargetGroupProps {\n    HealthCheckEnabled = false,\n    HealthCheckIntervalSeconds = 123,\n    HealthCheckPath = \"healthCheckPath\",\n    HealthCheckPort = \"healthCheckPort\",\n    HealthCheckProtocol = \"healthCheckProtocol\",\n    HealthCheckTimeoutSeconds = 123,\n    HealthyThresholdCount = 123,\n    IpAddressType = \"ipAddressType\",\n    Matcher = new MatcherProperty {\n        GrpcCode = \"grpcCode\",\n        HttpCode = \"httpCode\"\n    },\n    Name = \"name\",\n    Port = 123,\n    Protocol = \"protocol\",\n    ProtocolVersion = \"protocolVersion\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TargetGroupAttributes = new [] { new TargetGroupAttributeProperty {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    Targets = new [] { new TargetDescriptionProperty {\n        Id = \"id\",\n\n        // the properties below are optional\n        AvailabilityZone = \"availabilityZone\",\n        Port = 123\n    } },\n    TargetType = \"targetType\",\n    UnhealthyThresholdCount = 123,\n    VpcId = \"vpcId\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nCfnTargetGroup cfnTargetGroup = CfnTargetGroup.Builder.create(this, \"MyCfnTargetGroup\")\n        .healthCheckEnabled(false)\n        .healthCheckIntervalSeconds(123)\n        .healthCheckPath(\"healthCheckPath\")\n        .healthCheckPort(\"healthCheckPort\")\n        .healthCheckProtocol(\"healthCheckProtocol\")\n        .healthCheckTimeoutSeconds(123)\n        .healthyThresholdCount(123)\n        .ipAddressType(\"ipAddressType\")\n        .matcher(MatcherProperty.builder()\n                .grpcCode(\"grpcCode\")\n                .httpCode(\"httpCode\")\n                .build())\n        .name(\"name\")\n        .port(123)\n        .protocol(\"protocol\")\n        .protocolVersion(\"protocolVersion\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .targetGroupAttributes(List.of(TargetGroupAttributeProperty.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .targets(List.of(TargetDescriptionProperty.builder()\n                .id(\"id\")\n\n                // the properties below are optional\n                .availabilityZone(\"availabilityZone\")\n                .port(123)\n                .build()))\n        .targetType(\"targetType\")\n        .unhealthyThresholdCount(123)\n        .vpcId(\"vpcId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ncfnTargetGroup := elbv2.NewCfnTargetGroup(this, jsii.String(\"MyCfnTargetGroup\"), &cfnTargetGroupProps{\n\thealthCheckEnabled: jsii.Boolean(false),\n\thealthCheckIntervalSeconds: jsii.Number(123),\n\thealthCheckPath: jsii.String(\"healthCheckPath\"),\n\thealthCheckPort: jsii.String(\"healthCheckPort\"),\n\thealthCheckProtocol: jsii.String(\"healthCheckProtocol\"),\n\thealthCheckTimeoutSeconds: jsii.Number(123),\n\thealthyThresholdCount: jsii.Number(123),\n\tipAddressType: jsii.String(\"ipAddressType\"),\n\tmatcher: &matcherProperty{\n\t\tgrpcCode: jsii.String(\"grpcCode\"),\n\t\thttpCode: jsii.String(\"httpCode\"),\n\t},\n\tname: jsii.String(\"name\"),\n\tport: jsii.Number(123),\n\tprotocol: jsii.String(\"protocol\"),\n\tprotocolVersion: jsii.String(\"protocolVersion\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttargetGroupAttributes: []interface{}{\n\t\t&targetGroupAttributeProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttargets: []interface{}{\n\t\t&targetDescriptionProperty{\n\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t// the properties below are optional\n\t\t\tavailabilityZone: jsii.String(\"availabilityZone\"),\n\t\t\tport: jsii.Number(123),\n\t\t},\n\t},\n\ttargetType: jsii.String(\"targetType\"),\n\tunhealthyThresholdCount: jsii.Number(123),\n\tvpcId: jsii.String(\"vpcId\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnTargetGroup = new elbv2.CfnTargetGroup(this, 'MyCfnTargetGroup', /* all optional props */ {\n  healthCheckEnabled: false,\n  healthCheckIntervalSeconds: 123,\n  healthCheckPath: 'healthCheckPath',\n  healthCheckPort: 'healthCheckPort',\n  healthCheckProtocol: 'healthCheckProtocol',\n  healthCheckTimeoutSeconds: 123,\n  healthyThresholdCount: 123,\n  ipAddressType: 'ipAddressType',\n  matcher: {\n    grpcCode: 'grpcCode',\n    httpCode: 'httpCode',\n  },\n  name: 'name',\n  port: 123,\n  protocol: 'protocol',\n  protocolVersion: 'protocolVersion',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetGroupAttributes: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targets: [{\n    id: 'id',\n\n    // the properties below are optional\n    availabilityZone: 'availabilityZone',\n    port: 123,\n  }],\n  targetType: 'targetType',\n  unhealthyThresholdCount: 123,\n  vpcId: 'vpcId',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup",
        "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnTargetGroup = new elbv2.CfnTargetGroup(this, 'MyCfnTargetGroup', /* all optional props */ {\n  healthCheckEnabled: false,\n  healthCheckIntervalSeconds: 123,\n  healthCheckPath: 'healthCheckPath',\n  healthCheckPort: 'healthCheckPort',\n  healthCheckProtocol: 'healthCheckProtocol',\n  healthCheckTimeoutSeconds: 123,\n  healthyThresholdCount: 123,\n  ipAddressType: 'ipAddressType',\n  matcher: {\n    grpcCode: 'grpcCode',\n    httpCode: 'httpCode',\n  },\n  name: 'name',\n  port: 123,\n  protocol: 'protocol',\n  protocolVersion: 'protocolVersion',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetGroupAttributes: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targets: [{\n    id: 'id',\n\n    // the properties below are optional\n    availabilityZone: 'availabilityZone',\n    port: 123,\n  }],\n  targetType: 'targetType',\n  unhealthyThresholdCount: 123,\n  vpcId: 'vpcId',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 19,
        "75": 32,
        "91": 1,
        "104": 1,
        "192": 3,
        "193": 5,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 28,
        "290": 1
      },
      "fqnsFingerprint": "c1880f6451aa4f3141346f5fc9f2f8709827ffda4cf73e39c4dddb9335efa150"
    },
    "ee12dcc75381b57ca3d83b3af498d86ead0c5e7c90d9a29cc8b61eeaccaee493": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nmatcher_property = elbv2.CfnTargetGroup.MatcherProperty(\n    grpc_code=\"grpcCode\",\n    http_code=\"httpCode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nMatcherProperty matcherProperty = new MatcherProperty {\n    GrpcCode = \"grpcCode\",\n    HttpCode = \"httpCode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nMatcherProperty matcherProperty = MatcherProperty.builder()\n        .grpcCode(\"grpcCode\")\n        .httpCode(\"httpCode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nmatcherProperty := &matcherProperty{\n\tgrpcCode: jsii.String(\"grpcCode\"),\n\thttpCode: jsii.String(\"httpCode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst matcherProperty: elbv2.CfnTargetGroup.MatcherProperty = {\n  grpcCode: 'grpcCode',\n  httpCode: 'httpCode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.MatcherProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.MatcherProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst matcherProperty: elbv2.CfnTargetGroup.MatcherProperty = {\n  grpcCode: 'grpcCode',\n  httpCode: 'httpCode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "acb583115fa9a8229176fdd8869a888343920684509d0c575cfa5f547a6c0a59"
    },
    "f4093eb4124701867cd54e72fc8dd2a6e3dac8e302c6bd57b107b4dc5d699743": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ntarget_description_property = elbv2.CfnTargetGroup.TargetDescriptionProperty(\n    id=\"id\",\n\n    # the properties below are optional\n    availability_zone=\"availabilityZone\",\n    port=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nTargetDescriptionProperty targetDescriptionProperty = new TargetDescriptionProperty {\n    Id = \"id\",\n\n    // the properties below are optional\n    AvailabilityZone = \"availabilityZone\",\n    Port = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nTargetDescriptionProperty targetDescriptionProperty = TargetDescriptionProperty.builder()\n        .id(\"id\")\n\n        // the properties below are optional\n        .availabilityZone(\"availabilityZone\")\n        .port(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ntargetDescriptionProperty := &targetDescriptionProperty{\n\tid: jsii.String(\"id\"),\n\n\t// the properties below are optional\n\tavailabilityZone: jsii.String(\"availabilityZone\"),\n\tport: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetDescriptionProperty: elbv2.CfnTargetGroup.TargetDescriptionProperty = {\n  id: 'id',\n\n  // the properties below are optional\n  availabilityZone: 'availabilityZone',\n  port: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.TargetDescriptionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.TargetDescriptionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetDescriptionProperty: elbv2.CfnTargetGroup.TargetDescriptionProperty = {\n  id: 'id',\n\n  // the properties below are optional\n  availabilityZone: 'availabilityZone',\n  port: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "4302b53083e8228c9447ee7d94dc342e4c1e42273d11a45f3499a1474c6f4e0a"
    },
    "e73450ac98a2edae75fee9ef547d246a423b6375afaaaaffa7952ea5c59aa6f2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ntarget_group_attribute_property = elbv2.CfnTargetGroup.TargetGroupAttributeProperty(\n    key=\"key\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nTargetGroupAttributeProperty targetGroupAttributeProperty = new TargetGroupAttributeProperty {\n    Key = \"key\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nTargetGroupAttributeProperty targetGroupAttributeProperty = TargetGroupAttributeProperty.builder()\n        .key(\"key\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ntargetGroupAttributeProperty := &targetGroupAttributeProperty{\n\tkey: jsii.String(\"key\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetGroupAttributeProperty: elbv2.CfnTargetGroup.TargetGroupAttributeProperty = {\n  key: 'key',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.TargetGroupAttributeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.TargetGroupAttributeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetGroupAttributeProperty: elbv2.CfnTargetGroup.TargetGroupAttributeProperty = {\n  key: 'key',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "14a4e8c1f78e7bd002d0bc069bcc9964d165c374a12a7e09686f5d06fc7bab30"
    },
    "4574f2c07507c0c33d9d34a6c2337fc9a6bf72db48eceaf1f58581b4783216db": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ncfn_target_group_props = elbv2.CfnTargetGroupProps(\n    health_check_enabled=False,\n    health_check_interval_seconds=123,\n    health_check_path=\"healthCheckPath\",\n    health_check_port=\"healthCheckPort\",\n    health_check_protocol=\"healthCheckProtocol\",\n    health_check_timeout_seconds=123,\n    healthy_threshold_count=123,\n    ip_address_type=\"ipAddressType\",\n    matcher=elbv2.CfnTargetGroup.MatcherProperty(\n        grpc_code=\"grpcCode\",\n        http_code=\"httpCode\"\n    ),\n    name=\"name\",\n    port=123,\n    protocol=\"protocol\",\n    protocol_version=\"protocolVersion\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    target_group_attributes=[elbv2.CfnTargetGroup.TargetGroupAttributeProperty(\n        key=\"key\",\n        value=\"value\"\n    )],\n    targets=[elbv2.CfnTargetGroup.TargetDescriptionProperty(\n        id=\"id\",\n\n        # the properties below are optional\n        availability_zone=\"availabilityZone\",\n        port=123\n    )],\n    target_type=\"targetType\",\n    unhealthy_threshold_count=123,\n    vpc_id=\"vpcId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nCfnTargetGroupProps cfnTargetGroupProps = new CfnTargetGroupProps {\n    HealthCheckEnabled = false,\n    HealthCheckIntervalSeconds = 123,\n    HealthCheckPath = \"healthCheckPath\",\n    HealthCheckPort = \"healthCheckPort\",\n    HealthCheckProtocol = \"healthCheckProtocol\",\n    HealthCheckTimeoutSeconds = 123,\n    HealthyThresholdCount = 123,\n    IpAddressType = \"ipAddressType\",\n    Matcher = new MatcherProperty {\n        GrpcCode = \"grpcCode\",\n        HttpCode = \"httpCode\"\n    },\n    Name = \"name\",\n    Port = 123,\n    Protocol = \"protocol\",\n    ProtocolVersion = \"protocolVersion\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TargetGroupAttributes = new [] { new TargetGroupAttributeProperty {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    Targets = new [] { new TargetDescriptionProperty {\n        Id = \"id\",\n\n        // the properties below are optional\n        AvailabilityZone = \"availabilityZone\",\n        Port = 123\n    } },\n    TargetType = \"targetType\",\n    UnhealthyThresholdCount = 123,\n    VpcId = \"vpcId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nCfnTargetGroupProps cfnTargetGroupProps = CfnTargetGroupProps.builder()\n        .healthCheckEnabled(false)\n        .healthCheckIntervalSeconds(123)\n        .healthCheckPath(\"healthCheckPath\")\n        .healthCheckPort(\"healthCheckPort\")\n        .healthCheckProtocol(\"healthCheckProtocol\")\n        .healthCheckTimeoutSeconds(123)\n        .healthyThresholdCount(123)\n        .ipAddressType(\"ipAddressType\")\n        .matcher(MatcherProperty.builder()\n                .grpcCode(\"grpcCode\")\n                .httpCode(\"httpCode\")\n                .build())\n        .name(\"name\")\n        .port(123)\n        .protocol(\"protocol\")\n        .protocolVersion(\"protocolVersion\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .targetGroupAttributes(List.of(TargetGroupAttributeProperty.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .targets(List.of(TargetDescriptionProperty.builder()\n                .id(\"id\")\n\n                // the properties below are optional\n                .availabilityZone(\"availabilityZone\")\n                .port(123)\n                .build()))\n        .targetType(\"targetType\")\n        .unhealthyThresholdCount(123)\n        .vpcId(\"vpcId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ncfnTargetGroupProps := &cfnTargetGroupProps{\n\thealthCheckEnabled: jsii.Boolean(false),\n\thealthCheckIntervalSeconds: jsii.Number(123),\n\thealthCheckPath: jsii.String(\"healthCheckPath\"),\n\thealthCheckPort: jsii.String(\"healthCheckPort\"),\n\thealthCheckProtocol: jsii.String(\"healthCheckProtocol\"),\n\thealthCheckTimeoutSeconds: jsii.Number(123),\n\thealthyThresholdCount: jsii.Number(123),\n\tipAddressType: jsii.String(\"ipAddressType\"),\n\tmatcher: &matcherProperty{\n\t\tgrpcCode: jsii.String(\"grpcCode\"),\n\t\thttpCode: jsii.String(\"httpCode\"),\n\t},\n\tname: jsii.String(\"name\"),\n\tport: jsii.Number(123),\n\tprotocol: jsii.String(\"protocol\"),\n\tprotocolVersion: jsii.String(\"protocolVersion\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttargetGroupAttributes: []interface{}{\n\t\t&targetGroupAttributeProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttargets: []interface{}{\n\t\t&targetDescriptionProperty{\n\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t// the properties below are optional\n\t\t\tavailabilityZone: jsii.String(\"availabilityZone\"),\n\t\t\tport: jsii.Number(123),\n\t\t},\n\t},\n\ttargetType: jsii.String(\"targetType\"),\n\tunhealthyThresholdCount: jsii.Number(123),\n\tvpcId: jsii.String(\"vpcId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnTargetGroupProps: elbv2.CfnTargetGroupProps = {\n  healthCheckEnabled: false,\n  healthCheckIntervalSeconds: 123,\n  healthCheckPath: 'healthCheckPath',\n  healthCheckPort: 'healthCheckPort',\n  healthCheckProtocol: 'healthCheckProtocol',\n  healthCheckTimeoutSeconds: 123,\n  healthyThresholdCount: 123,\n  ipAddressType: 'ipAddressType',\n  matcher: {\n    grpcCode: 'grpcCode',\n    httpCode: 'httpCode',\n  },\n  name: 'name',\n  port: 123,\n  protocol: 'protocol',\n  protocolVersion: 'protocolVersion',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetGroupAttributes: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targets: [{\n    id: 'id',\n\n    // the properties below are optional\n    availabilityZone: 'availabilityZone',\n    port: 123,\n  }],\n  targetType: 'targetType',\n  unhealthyThresholdCount: 123,\n  vpcId: 'vpcId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnTargetGroupProps: elbv2.CfnTargetGroupProps = {\n  healthCheckEnabled: false,\n  healthCheckIntervalSeconds: 123,\n  healthCheckPath: 'healthCheckPath',\n  healthCheckPort: 'healthCheckPort',\n  healthCheckProtocol: 'healthCheckProtocol',\n  healthCheckTimeoutSeconds: 123,\n  healthyThresholdCount: 123,\n  ipAddressType: 'ipAddressType',\n  matcher: {\n    grpcCode: 'grpcCode',\n    httpCode: 'httpCode',\n  },\n  name: 'name',\n  port: 123,\n  protocol: 'protocol',\n  protocolVersion: 'protocolVersion',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetGroupAttributes: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targets: [{\n    id: 'id',\n\n    // the properties below are optional\n    availabilityZone: 'availabilityZone',\n    port: 123,\n  }],\n  targetType: 'targetType',\n  unhealthyThresholdCount: 123,\n  vpcId: 'vpcId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 18,
        "75": 32,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 28,
        "290": 1
      },
      "fqnsFingerprint": "a710228c4c13eb45916d3ea852cdbe212a64c911600582af9959245092040286"
    },
    "054a2c29a62ca6f09bda6a29420270570ac2d45c4b1a8806a417b953b50345d6": {
      "translations": {
        "python": {
          "source": "# listener: elbv2.ApplicationListener\n\n\nlistener.add_action(\"Fixed\",\n    priority=10,\n    conditions=[\n        elbv2.ListenerCondition.path_patterns([\"/ok\"])\n    ],\n    action=elbv2.ListenerAction.fixed_response(200,\n        content_type=elbv2.ContentType.TEXT_PLAIN,\n        message_body=\"OK\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ApplicationListener listener;\n\n\nlistener.AddAction(\"Fixed\", new AddApplicationActionProps {\n    Priority = 10,\n    Conditions = new [] { ListenerCondition.PathPatterns(new [] { \"/ok\" }) },\n    Action = ListenerAction.FixedResponse(200, new FixedResponseOptions {\n        ContentType = ContentType.TEXT_PLAIN,\n        MessageBody = \"OK\"\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "ApplicationListener listener;\n\n\nlistener.addAction(\"Fixed\", AddApplicationActionProps.builder()\n        .priority(10)\n        .conditions(List.of(ListenerCondition.pathPatterns(List.of(\"/ok\"))))\n        .action(ListenerAction.fixedResponse(200, FixedResponseOptions.builder()\n                .contentType(ContentType.TEXT_PLAIN)\n                .messageBody(\"OK\")\n                .build()))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var listener applicationListener\n\n\nlistener.addAction(jsii.String(\"Fixed\"), &addApplicationActionProps{\n\tpriority: jsii.Number(10),\n\tconditions: []listenerCondition{\n\t\telbv2.*listenerCondition.pathPatterns([]*string{\n\t\t\tjsii.String(\"/ok\"),\n\t\t}),\n\t},\n\taction: elbv2.listenerAction.fixedResponse(jsii.Number(200), &fixedResponseOptions{\n\t\tcontentType: elbv2.contentType_TEXT_PLAIN,\n\t\tmessageBody: jsii.String(\"OK\"),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const listener: elbv2.ApplicationListener;\n\nlistener.addAction('Fixed', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.pathPatterns(['/ok']),\n  ],\n  action: elbv2.ListenerAction.fixedResponse(200, {\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'OK',\n  })\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ContentType"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationActionProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addAction",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType#TEXT_PLAIN",
        "@aws-cdk/aws-elasticloadbalancingv2.FixedResponseOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction#fixedResponse",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition#pathPatterns"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const listener: elbv2.ApplicationListener;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nlistener.addAction('Fixed', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.pathPatterns(['/ok']),\n  ],\n  action: elbv2.ListenerAction.fixedResponse(200, {\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'OK',\n  })\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 19,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 2,
        "194": 7,
        "196": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "e6ff815ebb6182c25b23317faa5dfc0c7a98c7bd69adec5a852b00aa89cd2040"
    },
    "21eff8a925e4dfb2fdc243ac8660180204c96f337430873ef49d2c84da4923da": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nfixed_response = elbv2.FixedResponse(\n    status_code=\"statusCode\",\n\n    # the properties below are optional\n    content_type=elbv2.ContentType.TEXT_PLAIN,\n    message_body=\"messageBody\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nFixedResponse fixedResponse = new FixedResponse {\n    StatusCode = \"statusCode\",\n\n    // the properties below are optional\n    ContentType = ContentType.TEXT_PLAIN,\n    MessageBody = \"messageBody\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nFixedResponse fixedResponse = FixedResponse.builder()\n        .statusCode(\"statusCode\")\n\n        // the properties below are optional\n        .contentType(ContentType.TEXT_PLAIN)\n        .messageBody(\"messageBody\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nfixedResponse := &fixedResponse{\n\tstatusCode: jsii.String(\"statusCode\"),\n\n\t// the properties below are optional\n\tcontentType: elbv2.contentType_TEXT_PLAIN,\n\tmessageBody: jsii.String(\"messageBody\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst fixedResponse: elbv2.FixedResponse = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  contentType: elbv2.ContentType.TEXT_PLAIN,\n  messageBody: 'messageBody',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.FixedResponse"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType#TEXT_PLAIN",
        "@aws-cdk/aws-elasticloadbalancingv2.FixedResponse"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst fixedResponse: elbv2.FixedResponse = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  contentType: elbv2.ContentType.TEXT_PLAIN,\n  messageBody: 'messageBody',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "2c3f51425916f6b74fc1af6e023d5b9d7a9d5469422876de128af5c0d25d8337"
    },
    "10bcb8fbb87e98801d1fc16040a54f809cbba694acb2701b7888ba3cb59c688d": {
      "translations": {
        "python": {
          "source": "# listener: elbv2.ApplicationListener\n\n\nlistener.add_action(\"Fixed\",\n    priority=10,\n    conditions=[\n        elbv2.ListenerCondition.path_patterns([\"/ok\"])\n    ],\n    action=elbv2.ListenerAction.fixed_response(200,\n        content_type=elbv2.ContentType.TEXT_PLAIN,\n        message_body=\"OK\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ApplicationListener listener;\n\n\nlistener.AddAction(\"Fixed\", new AddApplicationActionProps {\n    Priority = 10,\n    Conditions = new [] { ListenerCondition.PathPatterns(new [] { \"/ok\" }) },\n    Action = ListenerAction.FixedResponse(200, new FixedResponseOptions {\n        ContentType = ContentType.TEXT_PLAIN,\n        MessageBody = \"OK\"\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "ApplicationListener listener;\n\n\nlistener.addAction(\"Fixed\", AddApplicationActionProps.builder()\n        .priority(10)\n        .conditions(List.of(ListenerCondition.pathPatterns(List.of(\"/ok\"))))\n        .action(ListenerAction.fixedResponse(200, FixedResponseOptions.builder()\n                .contentType(ContentType.TEXT_PLAIN)\n                .messageBody(\"OK\")\n                .build()))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var listener applicationListener\n\n\nlistener.addAction(jsii.String(\"Fixed\"), &addApplicationActionProps{\n\tpriority: jsii.Number(10),\n\tconditions: []listenerCondition{\n\t\telbv2.*listenerCondition.pathPatterns([]*string{\n\t\t\tjsii.String(\"/ok\"),\n\t\t}),\n\t},\n\taction: elbv2.listenerAction.fixedResponse(jsii.Number(200), &fixedResponseOptions{\n\t\tcontentType: elbv2.contentType_TEXT_PLAIN,\n\t\tmessageBody: jsii.String(\"OK\"),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const listener: elbv2.ApplicationListener;\n\nlistener.addAction('Fixed', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.pathPatterns(['/ok']),\n  ],\n  action: elbv2.ListenerAction.fixedResponse(200, {\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'OK',\n  })\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.FixedResponseOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationActionProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addAction",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType",
        "@aws-cdk/aws-elasticloadbalancingv2.ContentType#TEXT_PLAIN",
        "@aws-cdk/aws-elasticloadbalancingv2.FixedResponseOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction#fixedResponse",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition#pathPatterns"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const listener: elbv2.ApplicationListener;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nlistener.addAction('Fixed', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.pathPatterns(['/ok']),\n  ],\n  action: elbv2.ListenerAction.fixedResponse(200, {\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'OK',\n  })\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 19,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 2,
        "194": 7,
        "196": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "e6ff815ebb6182c25b23317faa5dfc0c7a98c7bd69adec5a852b00aa89cd2040"
    },
    "6278ac77fb2cf872e63b0ca10d410278183c4a200e7a6fa88e5a6396ff8ebbc9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\nimport aws_cdk.core as cdk\n\nforward_options = elbv2.ForwardOptions(\n    stickiness_duration=cdk.Duration.minutes(30)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\nusing Amazon.CDK;\nForwardOptions forwardOptions = new ForwardOptions {\n    StickinessDuration = Duration.Minutes(30)\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\nimport software.amazon.awscdk.core.*;\n\nForwardOptions forwardOptions = ForwardOptions.builder()\n        .stickinessDuration(Duration.minutes(30))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nforwardOptions := &forwardOptions{\n\tstickinessDuration: cdk.duration.minutes(jsii.Number(30)),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\nconst forwardOptions: elbv2.ForwardOptions = {\n  stickinessDuration: cdk.Duration.minutes(30),\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ForwardOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ForwardOptions",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst forwardOptions: elbv2.ForwardOptions = {\n  stickinessDuration: cdk.Duration.minutes(30),\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 9,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "1c0b6a85d82b52a0d014bb43391ed1add68dcdb8233695f16899407e25f58747"
    },
    "9288d0d7097801d3032cb78436ce288bdf732c1ff5ea84ba59107b8f774a4e4c": {
      "translations": {
        "python": {
          "source": "# cluster: ecs.Cluster\n\nload_balanced_fargate_service = ecs_patterns.ApplicationLoadBalancedFargateService(self, \"Service\",\n    cluster=cluster,\n    memory_limit_mi_b=1024,\n    cpu=512,\n    task_image_options=ecsPatterns.ApplicationLoadBalancedTaskImageOptions(\n        image=ecs.ContainerImage.from_registry(\"amazon/amazon-ecs-sample\")\n    )\n)\n\nload_balanced_fargate_service.target_group.configure_health_check(\n    path=\"/custom-health-path\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Cluster cluster;\n\nApplicationLoadBalancedFargateService loadBalancedFargateService = new ApplicationLoadBalancedFargateService(this, \"Service\", new ApplicationLoadBalancedFargateServiceProps {\n    Cluster = cluster,\n    MemoryLimitMiB = 1024,\n    Cpu = 512,\n    TaskImageOptions = new ApplicationLoadBalancedTaskImageOptions {\n        Image = ContainerImage.FromRegistry(\"amazon/amazon-ecs-sample\")\n    }\n});\n\nloadBalancedFargateService.TargetGroup.ConfigureHealthCheck(new HealthCheck {\n    Path = \"/custom-health-path\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Cluster cluster;\n\nApplicationLoadBalancedFargateService loadBalancedFargateService = ApplicationLoadBalancedFargateService.Builder.create(this, \"Service\")\n        .cluster(cluster)\n        .memoryLimitMiB(1024)\n        .cpu(512)\n        .taskImageOptions(ApplicationLoadBalancedTaskImageOptions.builder()\n                .image(ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"))\n                .build())\n        .build();\n\nloadBalancedFargateService.targetGroup.configureHealthCheck(HealthCheck.builder()\n        .path(\"/custom-health-path\")\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var cluster cluster\n\nloadBalancedFargateService := ecsPatterns.NewApplicationLoadBalancedFargateService(this, jsii.String(\"Service\"), &applicationLoadBalancedFargateServiceProps{\n\tcluster: cluster,\n\tmemoryLimitMiB: jsii.Number(1024),\n\tcpu: jsii.Number(512),\n\ttaskImageOptions: &applicationLoadBalancedTaskImageOptions{\n\t\timage: ecs.containerImage.fromRegistry(jsii.String(\"amazon/amazon-ecs-sample\")),\n\t},\n})\n\nloadBalancedFargateService.targetGroup.configureHealthCheck(&healthCheck{\n\tpath: jsii.String(\"/custom-health-path\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const cluster: ecs.Cluster;\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  cpu: 512,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n});\n\nloadBalancedFargateService.targetGroup.configureHealthCheck({\n  path: \"/custom-health-path\",\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedFargateService",
        "@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedFargateServiceProps",
        "@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedServiceBase#targetGroup",
        "@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedTaskImageOptions",
        "@aws-cdk/aws-ecs.ContainerImage",
        "@aws-cdk/aws-ecs.ContainerImage#fromRegistry",
        "@aws-cdk/aws-ecs.ICluster",
        "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupBase#configureHealthCheck",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const cluster: ecs.Cluster;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as ecsPatterns from '@aws-cdk/aws-ecs-patterns';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cxapi from '@aws-cdk/cx-api';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    \n    // Code snippet begins after !show marker below\n/// !show\n\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  cpu: 512,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n});\n\nloadBalancedFargateService.targetGroup.configureHealthCheck({\n  path: \"/custom-health-path\",\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 18,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 5,
        "196": 2,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 5,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "1e1ab43eb7299a5bcafcb6dd89146f78b891fffaa584b3c3a1948e6c8ec4062b"
    },
    "0c265b6c41dae5afac3f7dd87dbd79d143774799e44a9e4e4056fbcf9ec51397": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ninstance_target = elbv2.InstanceTarget(\"instanceId\", 123)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nInstanceTarget instanceTarget = new InstanceTarget(\"instanceId\", 123);",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nInstanceTarget instanceTarget = new InstanceTarget(\"instanceId\", 123);",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ninstanceTarget := elbv2.NewInstanceTarget(jsii.String(\"instanceId\"), jsii.Number(123))",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst instanceTarget = new elbv2.InstanceTarget('instanceId', /* all optional props */ 123);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.InstanceTarget"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.InstanceTarget"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst instanceTarget = new elbv2.InstanceTarget('instanceId', /* all optional props */ 123);\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 4,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "529ef9429b987e45602ea085bca75c27bebae6a641ed052b49e794930cf93910"
    },
    "140cc4669ba49bd063e15419682d10c586c700ab415feabdb4c33d019913d79f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nip_target = elbv2.IpTarget(\"ipAddress\", 123, \"availabilityZone\")",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nIpTarget ipTarget = new IpTarget(\"ipAddress\", 123, \"availabilityZone\");",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nIpTarget ipTarget = new IpTarget(\"ipAddress\", 123, \"availabilityZone\");",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nipTarget := elbv2.NewIpTarget(jsii.String(\"ipAddress\"), jsii.Number(123), jsii.String(\"availabilityZone\"))",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst ipTarget = new elbv2.IpTarget('ipAddress', /* all optional props */ 123, /* all optional props */ 'availabilityZone');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IpTarget"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.IpTarget"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ipTarget = new elbv2.IpTarget('ipAddress', /* all optional props */ 123, /* all optional props */ 'availabilityZone');\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 4,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "c5e133339dbdcf22b8cc7fc03225924ad7f3c11cce84645e81f11fece4d20d74"
    },
    "4f4ff021d2dc3bd62a9f253e5586b9060fd737543f5f28fc425dbf7305e57d15": {
      "translations": {
        "python": {
          "source": "# listener: elbv2.ApplicationListener\n# my_target_group: elbv2.ApplicationTargetGroup\n\n\nlistener.add_action(\"DefaultAction\",\n    action=elbv2.ListenerAction.authenticate_oidc(\n        authorization_endpoint=\"https://example.com/openid\",\n        # Other OIDC properties here\n        client_id=\"...\",\n        client_secret=SecretValue.secrets_manager(\"...\"),\n        issuer=\"...\",\n        token_endpoint=\"...\",\n        user_info_endpoint=\"...\",\n\n        # Next\n        next=elbv2.ListenerAction.forward([my_target_group])\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ApplicationListener listener;\nApplicationTargetGroup myTargetGroup;\n\n\nlistener.AddAction(\"DefaultAction\", new AddApplicationActionProps {\n    Action = ListenerAction.AuthenticateOidc(new AuthenticateOidcOptions {\n        AuthorizationEndpoint = \"https://example.com/openid\",\n        // Other OIDC properties here\n        ClientId = \"...\",\n        ClientSecret = SecretValue.SecretsManager(\"...\"),\n        Issuer = \"...\",\n        TokenEndpoint = \"...\",\n        UserInfoEndpoint = \"...\",\n\n        // Next\n        Next = ListenerAction.Forward(new [] { myTargetGroup })\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "ApplicationListener listener;\nApplicationTargetGroup myTargetGroup;\n\n\nlistener.addAction(\"DefaultAction\", AddApplicationActionProps.builder()\n        .action(ListenerAction.authenticateOidc(AuthenticateOidcOptions.builder()\n                .authorizationEndpoint(\"https://example.com/openid\")\n                // Other OIDC properties here\n                .clientId(\"...\")\n                .clientSecret(SecretValue.secretsManager(\"...\"))\n                .issuer(\"...\")\n                .tokenEndpoint(\"...\")\n                .userInfoEndpoint(\"...\")\n\n                // Next\n                .next(ListenerAction.forward(List.of(myTargetGroup)))\n                .build()))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var listener applicationListener\nvar myTargetGroup applicationTargetGroup\n\n\nlistener.addAction(jsii.String(\"DefaultAction\"), &addApplicationActionProps{\n\taction: elbv2.listenerAction.authenticateOidc(&authenticateOidcOptions{\n\t\tauthorizationEndpoint: jsii.String(\"https://example.com/openid\"),\n\t\t// Other OIDC properties here\n\t\tclientId: jsii.String(\"...\"),\n\t\tclientSecret: *awscdkcore.SecretValue.secretsManager(jsii.String(\"...\")),\n\t\tissuer: jsii.String(\"...\"),\n\t\ttokenEndpoint: jsii.String(\"...\"),\n\t\tuserInfoEndpoint: jsii.String(\"...\"),\n\n\t\t// Next\n\t\tnext: elbv2.*listenerAction.forward([]iApplicationTargetGroup{\n\t\t\tmyTargetGroup,\n\t\t}),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const listener: elbv2.ApplicationListener;\ndeclare const myTargetGroup: elbv2.ApplicationTargetGroup;\n\nlistener.addAction('DefaultAction', {\n  action: elbv2.ListenerAction.authenticateOidc({\n    authorizationEndpoint: 'https://example.com/openid',\n    // Other OIDC properties here\n    clientId: '...',\n    clientSecret: SecretValue.secretsManager('...'),\n    issuer: '...',\n    tokenEndpoint: '...',\n    userInfoEndpoint: '...',\n\n    // Next\n    next: elbv2.ListenerAction.forward([myTargetGroup]),\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationActionProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addAction",
        "@aws-cdk/aws-elasticloadbalancingv2.AuthenticateOidcOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction#authenticateOidc",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction#forward",
        "@aws-cdk/core.SecretValue",
        "@aws-cdk/core.SecretValue#secretsManager"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const listener: elbv2.ApplicationListener;\ndeclare const myTargetGroup: elbv2.ApplicationTargetGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nlistener.addAction('DefaultAction', {\n  action: elbv2.ListenerAction.authenticateOidc({\n    authorizationEndpoint: 'https://example.com/openid',\n    // Other OIDC properties here\n    clientId: '...',\n    clientSecret: SecretValue.secretsManager('...'),\n    issuer: '...',\n    tokenEndpoint: '...',\n    userInfoEndpoint: '...',\n\n    // Next\n    next: elbv2.ListenerAction.forward([myTargetGroup]),\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 7,
        "75": 25,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 2,
        "194": 6,
        "196": 4,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "fe45b01623fd8ed972322209d809236d1adddb0206a36ce65f4cb23b312dc21d"
    },
    "600b1fbf3143897a273b14e362aa70157f54044520a49e1743c1cc2d90d993d0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nlistener_certificate = elbv2.ListenerCertificate.from_arn(\"certificateArn\")",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nListenerCertificate listenerCertificate = ListenerCertificate.FromArn(\"certificateArn\");",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nListenerCertificate listenerCertificate = ListenerCertificate.fromArn(\"certificateArn\");",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nlistenerCertificate := elbv2.listenerCertificate.fromArn(jsii.String(\"certificateArn\"))",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst listenerCertificate = elbv2.ListenerCertificate.fromArn('certificateArn');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerCertificate"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCertificate",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCertificate#fromArn"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst listenerCertificate = elbv2.ListenerCertificate.fromArn('certificateArn');\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 5,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "69eb3aaa1cbfb5c6c6f5beb0e9c89494b4cf26f32c186752154696cbc64109a2"
    },
    "85bdd151b0a6260d19184c50e3b24ac0c2ae68f8cdcea27b5497e0d2e5a3efd5": {
      "translations": {
        "python": {
          "source": "# listener: elbv2.ApplicationListener\n# asg: autoscaling.AutoScalingGroup\n\n\nlistener.add_targets(\"Example.Com Fleet\",\n    priority=10,\n    conditions=[\n        elbv2.ListenerCondition.host_headers([\"example.com\"]),\n        elbv2.ListenerCondition.path_patterns([\"/ok\", \"/path\"])\n    ],\n    port=8080,\n    targets=[asg]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ApplicationListener listener;\nAutoScalingGroup asg;\n\n\nlistener.AddTargets(\"Example.Com Fleet\", new AddApplicationTargetsProps {\n    Priority = 10,\n    Conditions = new [] { ListenerCondition.HostHeaders(new [] { \"example.com\" }), ListenerCondition.PathPatterns(new [] { \"/ok\", \"/path\" }) },\n    Port = 8080,\n    Targets = new [] { asg }\n});",
          "version": "1"
        },
        "java": {
          "source": "ApplicationListener listener;\nAutoScalingGroup asg;\n\n\nlistener.addTargets(\"Example.Com Fleet\", AddApplicationTargetsProps.builder()\n        .priority(10)\n        .conditions(List.of(ListenerCondition.hostHeaders(List.of(\"example.com\")), ListenerCondition.pathPatterns(List.of(\"/ok\", \"/path\"))))\n        .port(8080)\n        .targets(List.of(asg))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var listener applicationListener\nvar asg autoScalingGroup\n\n\nlistener.addTargets(jsii.String(\"Example.Com Fleet\"), &addApplicationTargetsProps{\n\tpriority: jsii.Number(10),\n\tconditions: []listenerCondition{\n\t\telbv2.*listenerCondition.hostHeaders([]*string{\n\t\t\tjsii.String(\"example.com\"),\n\t\t}),\n\t\telbv2.*listenerCondition.pathPatterns([]*string{\n\t\t\tjsii.String(\"/ok\"),\n\t\t\tjsii.String(\"/path\"),\n\t\t}),\n\t},\n\tport: jsii.Number(8080),\n\ttargets: []iApplicationLoadBalancerTarget{\n\t\tasg,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const listener: elbv2.ApplicationListener;\ndeclare const asg: autoscaling.AutoScalingGroup;\n\nlistener.addTargets('Example.Com Fleet', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.hostHeaders(['example.com']),\n    elbv2.ListenerCondition.pathPatterns(['/ok', '/path']),\n  ],\n  port: 8080,\n  targets: [asg]\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition#hostHeaders",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition#pathPatterns"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const listener: elbv2.ApplicationListener;\ndeclare const asg: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nlistener.addTargets('Example.Com Fleet', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.hostHeaders(['example.com']),\n    elbv2.ListenerCondition.pathPatterns(['/ok', '/path']),\n  ],\n  port: 8080,\n  targets: [asg]\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 4,
        "75": 19,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 4,
        "193": 1,
        "194": 5,
        "196": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "c1999b2ae21fe18dc7919fcc5a0c0c9a579bf5e2701ea32ee9192318fc89b6fe"
    },
    "ab53dd0c996f945a5917dabeea97d14e0419bdeb78cd9b02642e1969fa809549": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# target_json: Any\n\nload_balancer_target_props = elbv2.LoadBalancerTargetProps(\n    target_type=elbv2.TargetType.INSTANCE,\n\n    # the properties below are optional\n    target_json=target_json\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nvar targetJson;\n\nLoadBalancerTargetProps loadBalancerTargetProps = new LoadBalancerTargetProps {\n    TargetType = TargetType.INSTANCE,\n\n    // the properties below are optional\n    TargetJson = targetJson\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nObject targetJson;\n\nLoadBalancerTargetProps loadBalancerTargetProps = LoadBalancerTargetProps.builder()\n        .targetType(TargetType.INSTANCE)\n\n        // the properties below are optional\n        .targetJson(targetJson)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar targetJson interface{}\n\nloadBalancerTargetProps := &loadBalancerTargetProps{\n\ttargetType: elbv2.targetType_INSTANCE,\n\n\t// the properties below are optional\n\ttargetJson: targetJson,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const targetJson: any;\nconst loadBalancerTargetProps: elbv2.LoadBalancerTargetProps = {\n  targetType: elbv2.TargetType.INSTANCE,\n\n  // the properties below are optional\n  targetJson: targetJson,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType#INSTANCE"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const targetJson: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst loadBalancerTargetProps: elbv2.LoadBalancerTargetProps = {\n  targetType: elbv2.TargetType.INSTANCE,\n\n  // the properties below are optional\n  targetJson: targetJson,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 11,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "5eb669cff7183a897d5444e580ff53cff0720409fc7e47b8c1f54ac92b5b95b6"
    },
    "ef768266593754aab26f6daa68daa86801c84e422e862dbf74c5ae86c9aa33b9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\nimport aws_cdk.core as cdk\n\nnetwork_forward_options = elbv2.NetworkForwardOptions(\n    stickiness_duration=cdk.Duration.minutes(30)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\nusing Amazon.CDK;\nNetworkForwardOptions networkForwardOptions = new NetworkForwardOptions {\n    StickinessDuration = Duration.Minutes(30)\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\nimport software.amazon.awscdk.core.*;\n\nNetworkForwardOptions networkForwardOptions = NetworkForwardOptions.builder()\n        .stickinessDuration(Duration.minutes(30))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nnetworkForwardOptions := &networkForwardOptions{\n\tstickinessDuration: cdk.duration.minutes(jsii.Number(30)),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\nconst networkForwardOptions: elbv2.NetworkForwardOptions = {\n  stickinessDuration: cdk.Duration.minutes(30),\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkForwardOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkForwardOptions",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst networkForwardOptions: elbv2.NetworkForwardOptions = {\n  stickinessDuration: cdk.Duration.minutes(30),\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 9,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "448e58f6c641cc20458f3bf47626e25afe5663a48c08511570cef6d4703f03b6"
    },
    "91fe0421026b84cb39233fd30c59be24a0968dc18ebbd12da729768c4040ccea": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations import HttpNlbIntegration\n\n\nvpc = ec2.Vpc(self, \"VPC\")\nlb = elbv2.NetworkLoadBalancer(self, \"lb\", vpc=vpc)\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpNlbIntegration(\"DefaultIntegration\", listener)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nNetworkLoadBalancer lb = new NetworkLoadBalancer(this, \"lb\", new NetworkLoadBalancerProps { Vpc = vpc });\nNetworkListener listener = lb.AddListener(\"listener\", new BaseNetworkListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddNetworkTargetsProps {\n    Port = 80\n});\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpNlbIntegration(\"DefaultIntegration\", listener)\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.HttpNlbIntegration;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nNetworkLoadBalancer lb = NetworkLoadBalancer.Builder.create(this, \"lb\").vpc(vpc).build();\nNetworkListener listener = lb.addListener(\"listener\", BaseNetworkListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddNetworkTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(new HttpNlbIntegration(\"DefaultIntegration\", listener))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\n\nvpc := ec2.NewVpc(this, jsii.String(\"VPC\"))\nlb := elbv2.NewNetworkLoadBalancer(this, jsii.String(\"lb\"), &networkLoadBalancerProps{\n\tvpc: vpc,\n})\nlistener := lb.addListener(jsii.String(\"listener\"), &baseNetworkListenerProps{\n\tport: jsii.Number(80),\n})\nlistener.addTargets(jsii.String(\"target\"), &addNetworkTargetsProps{\n\tport: jsii.Number(80),\n})\n\nhttpEndpoint := apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyPrivateApi\"), &httpApiProps{\n\tdefaultIntegration: *awscdkawsapigatewayv2integrations.NewHttpNlbIntegration(jsii.String(\"DefaultIntegration\"), listener),\n})",
          "version": "1"
        },
        "$": {
          "source": "import { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-integrations.HttpNlbIntegration",
        "@aws-cdk/aws-apigatewayv2.HttpApi",
        "@aws-cdk/aws-apigatewayv2.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.Vpc",
        "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 7,
        "75": 21,
        "104": 3,
        "193": 4,
        "194": 5,
        "196": 2,
        "197": 4,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "a0ee5bc89a740e65e13ba17eaeb8deed11e0b3bfae376bd4a0d561095121d042"
    },
    "2f4570fae21327e82b7a01bdb5b31b6649d6972f66f225c9449cc7ff2cb4fe17": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\nimport aws_cdk.core as cdk\n\n# network_target_group: elbv2.NetworkTargetGroup\n\nnetwork_listener_action = elbv2.NetworkListenerAction.forward([network_target_group],\n    stickiness_duration=cdk.Duration.minutes(30)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\nusing Amazon.CDK;\n\nNetworkTargetGroup networkTargetGroup;\nNetworkListenerAction networkListenerAction = NetworkListenerAction.Forward(new [] { networkTargetGroup }, new NetworkForwardOptions {\n    StickinessDuration = Duration.Minutes(30)\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\nimport software.amazon.awscdk.core.*;\n\nNetworkTargetGroup networkTargetGroup;\n\nNetworkListenerAction networkListenerAction = NetworkListenerAction.forward(List.of(networkTargetGroup), NetworkForwardOptions.builder()\n        .stickinessDuration(Duration.minutes(30))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar networkTargetGroup networkTargetGroup\n\nnetworkListenerAction := elbv2.networkListenerAction.forward([]iNetworkTargetGroup{\n\tnetworkTargetGroup,\n}, &networkForwardOptions{\n\tstickinessDuration: cdk.duration.minutes(jsii.Number(30)),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const networkTargetGroup: elbv2.NetworkTargetGroup;\nconst networkListenerAction = elbv2.NetworkListenerAction.forward([networkTargetGroup], /* all optional props */ {\n  stickinessDuration: cdk.Duration.minutes(30),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerAction"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkForwardOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerAction",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerAction#forward",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const networkTargetGroup: elbv2.NetworkTargetGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst networkListenerAction = elbv2.NetworkListenerAction.forward([networkTargetGroup], /* all optional props */ {\n  stickinessDuration: cdk.Duration.minutes(30),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 14,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 4,
        "196": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "d061182b60d3aeea182dbc45167e02c89992da13350db52f8bd243c505c02f69"
    },
    "40308b0107e98d72240648237ad1e3560f7914a6d8ea92b96012a7c3d392383d": {
      "translations": {
        "python": {
          "source": "listener = elbv2.NetworkListener.from_lookup(self, \"ALBListener\",\n    load_balancer_tags={\n        \"Cluster\": \"MyClusterName\"\n    },\n    listener_protocol=elbv2.Protocol.TCP,\n    listener_port=12345\n)",
          "version": "2"
        },
        "csharp": {
          "source": "INetworkListener listener = NetworkListener.FromLookup(this, \"ALBListener\", new NetworkListenerLookupOptions {\n    LoadBalancerTags = new Dictionary<string, string> {\n        { \"Cluster\", \"MyClusterName\" }\n    },\n    ListenerProtocol = Protocol.TCP,\n    ListenerPort = 12345\n});",
          "version": "1"
        },
        "java": {
          "source": "INetworkListener listener = NetworkListener.fromLookup(this, \"ALBListener\", NetworkListenerLookupOptions.builder()\n        .loadBalancerTags(Map.of(\n                \"Cluster\", \"MyClusterName\"))\n        .listenerProtocol(Protocol.TCP)\n        .listenerPort(12345)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "listener := elbv2.networkListener.fromLookup(this, jsii.String(\"ALBListener\"), &networkListenerLookupOptions{\n\tloadBalancerTags: map[string]*string{\n\t\t\"Cluster\": jsii.String(\"MyClusterName\"),\n\t},\n\tlistenerProtocol: elbv2.protocol_TCP,\n\tlistenerPort: jsii.Number(12345),\n})",
          "version": "1"
        },
        "$": {
          "source": "const listener = elbv2.NetworkListener.fromLookup(this, 'ALBListener', {\n  loadBalancerTags: {\n    Cluster: 'MyClusterName',\n  },\n  listenerProtocol: elbv2.Protocol.TCP,\n  listenerPort: 12345,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerLookupOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener#fromLookup",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerLookupOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.Protocol",
        "@aws-cdk/aws-elasticloadbalancingv2.Protocol#TCP",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst listener = elbv2.NetworkListener.fromLookup(this, 'ALBListener', {\n  loadBalancerTags: {\n    Cluster: 'MyClusterName',\n  },\n  listenerProtocol: elbv2.Protocol.TCP,\n  listenerPort: 12345,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 11,
        "104": 1,
        "193": 2,
        "194": 4,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 4
      },
      "fqnsFingerprint": "cea0360562af252024960e29259f755cc84435c93356e75810cc5dfb3e142cb7"
    },
    "8b7ae7f1f6e8356e1b5ac2377beff93daa9d143cf5b6dd06248a2bb7c7ecc9aa": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# listener_certificate: elbv2.ListenerCertificate\n# network_listener_action: elbv2.NetworkListenerAction\n# network_load_balancer: elbv2.NetworkLoadBalancer\n# network_target_group: elbv2.NetworkTargetGroup\n\nnetwork_listener_props = elbv2.NetworkListenerProps(\n    load_balancer=network_load_balancer,\n    port=123,\n\n    # the properties below are optional\n    alpn_policy=elbv2.AlpnPolicy.HTTP1_ONLY,\n    certificates=[listener_certificate],\n    default_action=network_listener_action,\n    default_target_groups=[network_target_group],\n    protocol=elbv2.Protocol.HTTP,\n    ssl_policy=elbv2.SslPolicy.RECOMMENDED\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nListenerCertificate listenerCertificate;\nNetworkListenerAction networkListenerAction;\nNetworkLoadBalancer networkLoadBalancer;\nNetworkTargetGroup networkTargetGroup;\n\nNetworkListenerProps networkListenerProps = new NetworkListenerProps {\n    LoadBalancer = networkLoadBalancer,\n    Port = 123,\n\n    // the properties below are optional\n    AlpnPolicy = AlpnPolicy.HTTP1_ONLY,\n    Certificates = new [] { listenerCertificate },\n    DefaultAction = networkListenerAction,\n    DefaultTargetGroups = new [] { networkTargetGroup },\n    Protocol = Protocol.HTTP,\n    SslPolicy = SslPolicy.RECOMMENDED\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nListenerCertificate listenerCertificate;\nNetworkListenerAction networkListenerAction;\nNetworkLoadBalancer networkLoadBalancer;\nNetworkTargetGroup networkTargetGroup;\n\nNetworkListenerProps networkListenerProps = NetworkListenerProps.builder()\n        .loadBalancer(networkLoadBalancer)\n        .port(123)\n\n        // the properties below are optional\n        .alpnPolicy(AlpnPolicy.HTTP1_ONLY)\n        .certificates(List.of(listenerCertificate))\n        .defaultAction(networkListenerAction)\n        .defaultTargetGroups(List.of(networkTargetGroup))\n        .protocol(Protocol.HTTP)\n        .sslPolicy(SslPolicy.RECOMMENDED)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar listenerCertificate listenerCertificate\nvar networkListenerAction networkListenerAction\nvar networkLoadBalancer networkLoadBalancer\nvar networkTargetGroup networkTargetGroup\n\nnetworkListenerProps := &networkListenerProps{\n\tloadBalancer: networkLoadBalancer,\n\tport: jsii.Number(123),\n\n\t// the properties below are optional\n\talpnPolicy: elbv2.alpnPolicy_HTTP1_ONLY,\n\tcertificates: []iListenerCertificate{\n\t\tlistenerCertificate,\n\t},\n\tdefaultAction: networkListenerAction,\n\tdefaultTargetGroups: []iNetworkTargetGroup{\n\t\tnetworkTargetGroup,\n\t},\n\tprotocol: elbv2.protocol_HTTP,\n\tsslPolicy: elbv2.sslPolicy_RECOMMENDED,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const listenerCertificate: elbv2.ListenerCertificate;\ndeclare const networkListenerAction: elbv2.NetworkListenerAction;\ndeclare const networkLoadBalancer: elbv2.NetworkLoadBalancer;\ndeclare const networkTargetGroup: elbv2.NetworkTargetGroup;\nconst networkListenerProps: elbv2.NetworkListenerProps = {\n  loadBalancer: networkLoadBalancer,\n  port: 123,\n\n  // the properties below are optional\n  alpnPolicy: elbv2.AlpnPolicy.HTTP1_ONLY,\n  certificates: [listenerCertificate],\n  defaultAction: networkListenerAction,\n  defaultTargetGroups: [networkTargetGroup],\n  protocol: elbv2.Protocol.HTTP,\n  sslPolicy: elbv2.SslPolicy.RECOMMENDED,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AlpnPolicy",
        "@aws-cdk/aws-elasticloadbalancingv2.AlpnPolicy#HTTP1_ONLY",
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerAction",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.Protocol",
        "@aws-cdk/aws-elasticloadbalancingv2.Protocol#HTTP",
        "@aws-cdk/aws-elasticloadbalancingv2.SslPolicy",
        "@aws-cdk/aws-elasticloadbalancingv2.SslPolicy#RECOMMENDED"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const listenerCertificate: elbv2.ListenerCertificate;\ndeclare const networkListenerAction: elbv2.NetworkListenerAction;\ndeclare const networkLoadBalancer: elbv2.NetworkLoadBalancer;\ndeclare const networkTargetGroup: elbv2.NetworkTargetGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst networkListenerProps: elbv2.NetworkListenerProps = {\n  loadBalancer: networkLoadBalancer,\n  port: 123,\n\n  // the properties below are optional\n  alpnPolicy: elbv2.AlpnPolicy.HTTP1_ONLY,\n  certificates: [listenerCertificate],\n  defaultAction: networkListenerAction,\n  defaultTargetGroups: [networkTargetGroup],\n  protocol: elbv2.Protocol.HTTP,\n  sslPolicy: elbv2.SslPolicy.RECOMMENDED,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 37,
        "130": 4,
        "153": 5,
        "169": 5,
        "192": 2,
        "193": 1,
        "194": 6,
        "225": 5,
        "242": 5,
        "243": 5,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "c547f497ba396132920428ab4b53bc87db62c8a66058718e5ccf841774f65900"
    },
    "943298483d99fa3c335d30acf9b2609acc57b8c10aad7e949f4edb0cc7da8098": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations import HttpNlbIntegration\n\n\nvpc = ec2.Vpc(self, \"VPC\")\nlb = elbv2.NetworkLoadBalancer(self, \"lb\", vpc=vpc)\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpNlbIntegration(\"DefaultIntegration\", listener)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nNetworkLoadBalancer lb = new NetworkLoadBalancer(this, \"lb\", new NetworkLoadBalancerProps { Vpc = vpc });\nNetworkListener listener = lb.AddListener(\"listener\", new BaseNetworkListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddNetworkTargetsProps {\n    Port = 80\n});\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpNlbIntegration(\"DefaultIntegration\", listener)\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.HttpNlbIntegration;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nNetworkLoadBalancer lb = NetworkLoadBalancer.Builder.create(this, \"lb\").vpc(vpc).build();\nNetworkListener listener = lb.addListener(\"listener\", BaseNetworkListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddNetworkTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(new HttpNlbIntegration(\"DefaultIntegration\", listener))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\n\nvpc := ec2.NewVpc(this, jsii.String(\"VPC\"))\nlb := elbv2.NewNetworkLoadBalancer(this, jsii.String(\"lb\"), &networkLoadBalancerProps{\n\tvpc: vpc,\n})\nlistener := lb.addListener(jsii.String(\"listener\"), &baseNetworkListenerProps{\n\tport: jsii.Number(80),\n})\nlistener.addTargets(jsii.String(\"target\"), &addNetworkTargetsProps{\n\tport: jsii.Number(80),\n})\n\nhttpEndpoint := apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyPrivateApi\"), &httpApiProps{\n\tdefaultIntegration: *awscdkawsapigatewayv2integrations.NewHttpNlbIntegration(jsii.String(\"DefaultIntegration\"), listener),\n})",
          "version": "1"
        },
        "$": {
          "source": "import { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-integrations.HttpNlbIntegration",
        "@aws-cdk/aws-apigatewayv2.HttpApi",
        "@aws-cdk/aws-apigatewayv2.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.Vpc",
        "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 7,
        "75": 21,
        "104": 3,
        "193": 4,
        "194": 5,
        "196": 2,
        "197": 4,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "a0ee5bc89a740e65e13ba17eaeb8deed11e0b3bfae376bd4a0d561095121d042"
    },
    "3e360d5656c4c86c9e901463f323bda5a6cae06fbe7c7d26e3a57c0a894f6940": {
      "translations": {
        "python": {
          "source": "# Create an Accelerator\naccelerator = globalaccelerator.Accelerator(self, \"Accelerator\")\n\n# Create a Listener\nlistener = accelerator.add_listener(\"Listener\",\n    port_ranges=[globalaccelerator.PortRange(from_port=80), globalaccelerator.PortRange(from_port=443)\n    ]\n)\n\n# Import the Load Balancers\nnlb1 = elbv2.NetworkLoadBalancer.from_network_load_balancer_attributes(self, \"NLB1\",\n    load_balancer_arn=\"arn:aws:elasticloadbalancing:us-west-2:111111111111:loadbalancer/app/my-load-balancer1/e16bef66805b\"\n)\nnlb2 = elbv2.NetworkLoadBalancer.from_network_load_balancer_attributes(self, \"NLB2\",\n    load_balancer_arn=\"arn:aws:elasticloadbalancing:ap-south-1:111111111111:loadbalancer/app/my-load-balancer2/5513dc2ea8a1\"\n)\n\n# Add one EndpointGroup for each Region we are targeting\nlistener.add_endpoint_group(\"Group1\",\n    endpoints=[ga_endpoints.NetworkLoadBalancerEndpoint(nlb1)]\n)\nlistener.add_endpoint_group(\"Group2\",\n    # Imported load balancers automatically calculate their Region from the ARN.\n    # If you are load balancing to other resources, you must also pass a `region`\n    # parameter here.\n    endpoints=[ga_endpoints.NetworkLoadBalancerEndpoint(nlb2)]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Create an Accelerator\nAccelerator accelerator = new Accelerator(this, \"Accelerator\");\n\n// Create a Listener\nListener listener = accelerator.AddListener(\"Listener\", new ListenerOptions {\n    PortRanges = new [] { new PortRange { FromPort = 80 }, new PortRange { FromPort = 443 } }\n});\n\n// Import the Load Balancers\nINetworkLoadBalancer nlb1 = NetworkLoadBalancer.FromNetworkLoadBalancerAttributes(this, \"NLB1\", new NetworkLoadBalancerAttributes {\n    LoadBalancerArn = \"arn:aws:elasticloadbalancing:us-west-2:111111111111:loadbalancer/app/my-load-balancer1/e16bef66805b\"\n});\nINetworkLoadBalancer nlb2 = NetworkLoadBalancer.FromNetworkLoadBalancerAttributes(this, \"NLB2\", new NetworkLoadBalancerAttributes {\n    LoadBalancerArn = \"arn:aws:elasticloadbalancing:ap-south-1:111111111111:loadbalancer/app/my-load-balancer2/5513dc2ea8a1\"\n});\n\n// Add one EndpointGroup for each Region we are targeting\nlistener.AddEndpointGroup(\"Group1\", new EndpointGroupOptions {\n    Endpoints = new [] { new NetworkLoadBalancerEndpoint(nlb1) }\n});\nlistener.AddEndpointGroup(\"Group2\", new EndpointGroupOptions {\n    // Imported load balancers automatically calculate their Region from the ARN.\n    // If you are load balancing to other resources, you must also pass a `region`\n    // parameter here.\n    Endpoints = new [] { new NetworkLoadBalancerEndpoint(nlb2) }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Create an Accelerator\nAccelerator accelerator = new Accelerator(this, \"Accelerator\");\n\n// Create a Listener\nListener listener = accelerator.addListener(\"Listener\", ListenerOptions.builder()\n        .portRanges(List.of(PortRange.builder().fromPort(80).build(), PortRange.builder().fromPort(443).build()))\n        .build());\n\n// Import the Load Balancers\nINetworkLoadBalancer nlb1 = NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, \"NLB1\", NetworkLoadBalancerAttributes.builder()\n        .loadBalancerArn(\"arn:aws:elasticloadbalancing:us-west-2:111111111111:loadbalancer/app/my-load-balancer1/e16bef66805b\")\n        .build());\nINetworkLoadBalancer nlb2 = NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, \"NLB2\", NetworkLoadBalancerAttributes.builder()\n        .loadBalancerArn(\"arn:aws:elasticloadbalancing:ap-south-1:111111111111:loadbalancer/app/my-load-balancer2/5513dc2ea8a1\")\n        .build());\n\n// Add one EndpointGroup for each Region we are targeting\nlistener.addEndpointGroup(\"Group1\", EndpointGroupOptions.builder()\n        .endpoints(List.of(new NetworkLoadBalancerEndpoint(nlb1)))\n        .build());\nlistener.addEndpointGroup(\"Group2\", EndpointGroupOptions.builder()\n        // Imported load balancers automatically calculate their Region from the ARN.\n        // If you are load balancing to other resources, you must also pass a `region`\n        // parameter here.\n        .endpoints(List.of(new NetworkLoadBalancerEndpoint(nlb2)))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// Create an Accelerator\naccelerator := globalaccelerator.NewAccelerator(this, jsii.String(\"Accelerator\"))\n\n// Create a Listener\nlistener := accelerator.addListener(jsii.String(\"Listener\"), &listenerOptions{\n\tportRanges: []portRange{\n\t\t&portRange{\n\t\t\tfromPort: jsii.Number(80),\n\t\t},\n\t\t&portRange{\n\t\t\tfromPort: jsii.Number(443),\n\t\t},\n\t},\n})\n\n// Import the Load Balancers\nnlb1 := elbv2.networkLoadBalancer.fromNetworkLoadBalancerAttributes(this, jsii.String(\"NLB1\"), &networkLoadBalancerAttributes{\n\tloadBalancerArn: jsii.String(\"arn:aws:elasticloadbalancing:us-west-2:111111111111:loadbalancer/app/my-load-balancer1/e16bef66805b\"),\n})\nnlb2 := elbv2.networkLoadBalancer.fromNetworkLoadBalancerAttributes(this, jsii.String(\"NLB2\"), &networkLoadBalancerAttributes{\n\tloadBalancerArn: jsii.String(\"arn:aws:elasticloadbalancing:ap-south-1:111111111111:loadbalancer/app/my-load-balancer2/5513dc2ea8a1\"),\n})\n\n// Add one EndpointGroup for each Region we are targeting\nlistener.addEndpointGroup(jsii.String(\"Group1\"), &endpointGroupOptions{\n\tendpoints: []iEndpoint{\n\t\tga_endpoints.NewNetworkLoadBalancerEndpoint(nlb1),\n\t},\n})\nlistener.addEndpointGroup(jsii.String(\"Group2\"), &endpointGroupOptions{\n\t// Imported load balancers automatically calculate their Region from the ARN.\n\t// If you are load balancing to other resources, you must also pass a `region`\n\t// parameter here.\n\tendpoints: []*iEndpoint{\n\t\tga_endpoints.NewNetworkLoadBalancerEndpoint(nlb2),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Create an Accelerator\nconst accelerator = new globalaccelerator.Accelerator(this, 'Accelerator');\n\n// Create a Listener\nconst listener = accelerator.addListener('Listener', {\n  portRanges: [\n    { fromPort: 80 },\n    { fromPort: 443 },\n  ],\n});\n\n// Import the Load Balancers\nconst nlb1 = elbv2.NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, 'NLB1', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:111111111111:loadbalancer/app/my-load-balancer1/e16bef66805b',\n});\nconst nlb2 = elbv2.NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, 'NLB2', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:ap-south-1:111111111111:loadbalancer/app/my-load-balancer2/5513dc2ea8a1',\n});\n\n// Add one EndpointGroup for each Region we are targeting\nlistener.addEndpointGroup('Group1', {\n  endpoints: [new ga_endpoints.NetworkLoadBalancerEndpoint(nlb1)],\n});\nlistener.addEndpointGroup('Group2', {\n  // Imported load balancers automatically calculate their Region from the ARN.\n  // If you are load balancing to other resources, you must also pass a `region`\n  // parameter here.\n  endpoints: [new ga_endpoints.NetworkLoadBalancerEndpoint(nlb2)],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer#fromNetworkLoadBalancerAttributes",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerAttributes",
        "@aws-cdk/aws-globalaccelerator-endpoints.NetworkLoadBalancerEndpoint",
        "@aws-cdk/aws-globalaccelerator.Accelerator",
        "@aws-cdk/aws-globalaccelerator.Accelerator#addListener",
        "@aws-cdk/aws-globalaccelerator.EndpointGroupOptions",
        "@aws-cdk/aws-globalaccelerator.Listener",
        "@aws-cdk/aws-globalaccelerator.Listener#addEndpointGroup",
        "@aws-cdk/aws-globalaccelerator.ListenerOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nimport * as ga_endpoints from '@aws-cdk/aws-globalaccelerator-endpoints';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n// Create an Accelerator\nconst accelerator = new globalaccelerator.Accelerator(this, 'Accelerator');\n\n// Create a Listener\nconst listener = accelerator.addListener('Listener', {\n  portRanges: [\n    { fromPort: 80 },\n    { fromPort: 443 },\n  ],\n});\n\n// Import the Load Balancers\nconst nlb1 = elbv2.NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, 'NLB1', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:111111111111:loadbalancer/app/my-load-balancer1/e16bef66805b',\n});\nconst nlb2 = elbv2.NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, 'NLB2', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:ap-south-1:111111111111:loadbalancer/app/my-load-balancer2/5513dc2ea8a1',\n});\n\n// Add one EndpointGroup for each Region we are targeting\nlistener.addEndpointGroup('Group1', {\n  endpoints: [new ga_endpoints.NetworkLoadBalancerEndpoint(nlb1)],\n});\nlistener.addEndpointGroup('Group2', {\n  // Imported load balancers automatically calculate their Region from the ARN.\n  // If you are load balancing to other resources, you must also pass a `region`\n  // parameter here.\n  endpoints: [new ga_endpoints.NetworkLoadBalancerEndpoint(nlb2)],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "8": 2,
        "10": 8,
        "75": 31,
        "104": 3,
        "192": 3,
        "193": 7,
        "194": 10,
        "196": 5,
        "197": 3,
        "225": 4,
        "226": 2,
        "242": 4,
        "243": 4,
        "281": 7
      },
      "fqnsFingerprint": "785a98bcb12145631c37df93507a1eb98662a02a86ea34208fe25a31ede41f6e"
    },
    "a7847ad4792e7ca896b6cf0f318b2890f267437893ebfed59811d53a6e2790cd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nnetwork_load_balancer_lookup_options = elbv2.NetworkLoadBalancerLookupOptions(\n    load_balancer_arn=\"loadBalancerArn\",\n    load_balancer_tags={\n        \"load_balancer_tags_key\": \"loadBalancerTags\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nNetworkLoadBalancerLookupOptions networkLoadBalancerLookupOptions = new NetworkLoadBalancerLookupOptions {\n    LoadBalancerArn = \"loadBalancerArn\",\n    LoadBalancerTags = new Dictionary<string, string> {\n        { \"loadBalancerTagsKey\", \"loadBalancerTags\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nNetworkLoadBalancerLookupOptions networkLoadBalancerLookupOptions = NetworkLoadBalancerLookupOptions.builder()\n        .loadBalancerArn(\"loadBalancerArn\")\n        .loadBalancerTags(Map.of(\n                \"loadBalancerTagsKey\", \"loadBalancerTags\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nnetworkLoadBalancerLookupOptions := &networkLoadBalancerLookupOptions{\n\tloadBalancerArn: jsii.String(\"loadBalancerArn\"),\n\tloadBalancerTags: map[string]*string{\n\t\t\"loadBalancerTagsKey\": jsii.String(\"loadBalancerTags\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst networkLoadBalancerLookupOptions: elbv2.NetworkLoadBalancerLookupOptions = {\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerTags: {\n    loadBalancerTagsKey: 'loadBalancerTags',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerLookupOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerLookupOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst networkLoadBalancerLookupOptions: elbv2.NetworkLoadBalancerLookupOptions = {\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerTags: {\n    loadBalancerTagsKey: 'loadBalancerTags',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "235232e2f184acd0c749ea382068bf210ebe6321ee35241a2362f7c3028f99f6"
    },
    "9a30cc4c53001911dc53f5dfdedb68e1eba9d9dd211854f2175a1291e34923f8": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations import HttpNlbIntegration\n\n\nvpc = ec2.Vpc(self, \"VPC\")\nlb = elbv2.NetworkLoadBalancer(self, \"lb\", vpc=vpc)\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpNlbIntegration(\"DefaultIntegration\", listener)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nNetworkLoadBalancer lb = new NetworkLoadBalancer(this, \"lb\", new NetworkLoadBalancerProps { Vpc = vpc });\nNetworkListener listener = lb.AddListener(\"listener\", new BaseNetworkListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddNetworkTargetsProps {\n    Port = 80\n});\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpNlbIntegration(\"DefaultIntegration\", listener)\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.HttpNlbIntegration;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nNetworkLoadBalancer lb = NetworkLoadBalancer.Builder.create(this, \"lb\").vpc(vpc).build();\nNetworkListener listener = lb.addListener(\"listener\", BaseNetworkListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddNetworkTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(new HttpNlbIntegration(\"DefaultIntegration\", listener))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\n\nvpc := ec2.NewVpc(this, jsii.String(\"VPC\"))\nlb := elbv2.NewNetworkLoadBalancer(this, jsii.String(\"lb\"), &networkLoadBalancerProps{\n\tvpc: vpc,\n})\nlistener := lb.addListener(jsii.String(\"listener\"), &baseNetworkListenerProps{\n\tport: jsii.Number(80),\n})\nlistener.addTargets(jsii.String(\"target\"), &addNetworkTargetsProps{\n\tport: jsii.Number(80),\n})\n\nhttpEndpoint := apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyPrivateApi\"), &httpApiProps{\n\tdefaultIntegration: *awscdkawsapigatewayv2integrations.NewHttpNlbIntegration(jsii.String(\"DefaultIntegration\"), listener),\n})",
          "version": "1"
        },
        "$": {
          "source": "import { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-integrations.HttpNlbIntegration",
        "@aws-cdk/aws-apigatewayv2.HttpApi",
        "@aws-cdk/aws-apigatewayv2.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.Vpc",
        "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 7,
        "75": 21,
        "104": 3,
        "193": 4,
        "194": 5,
        "196": 2,
        "197": 4,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "a0ee5bc89a740e65e13ba17eaeb8deed11e0b3bfae376bd4a0d561095121d042"
    },
    "124e048fb23bd981f1ec9c5487f4bb7b8f18b36655d1006c2a75d80eadddb437": {
      "translations": {
        "python": {
          "source": "# listener: elbv2.NetworkListener\n# asg1: autoscaling.AutoScalingGroup\n# asg2: autoscaling.AutoScalingGroup\n\n\ngroup = listener.add_targets(\"AppFleet\",\n    port=443,\n    targets=[asg1]\n)\n\ngroup.add_target(asg2)",
          "version": "2"
        },
        "csharp": {
          "source": "NetworkListener listener;\nAutoScalingGroup asg1;\nAutoScalingGroup asg2;\n\n\nNetworkTargetGroup group = listener.AddTargets(\"AppFleet\", new AddNetworkTargetsProps {\n    Port = 443,\n    Targets = new [] { asg1 }\n});\n\ngroup.AddTarget(asg2);",
          "version": "1"
        },
        "java": {
          "source": "NetworkListener listener;\nAutoScalingGroup asg1;\nAutoScalingGroup asg2;\n\n\nNetworkTargetGroup group = listener.addTargets(\"AppFleet\", AddNetworkTargetsProps.builder()\n        .port(443)\n        .targets(List.of(asg1))\n        .build());\n\ngroup.addTarget(asg2);",
          "version": "1"
        },
        "go": {
          "source": "var listener networkListener\nvar asg1 autoScalingGroup\nvar asg2 autoScalingGroup\n\n\ngroup := listener.addTargets(jsii.String(\"AppFleet\"), &addNetworkTargetsProps{\n\tport: jsii.Number(443),\n\ttargets: []iNetworkLoadBalancerTarget{\n\t\tasg1,\n\t},\n})\n\ngroup.addTarget(asg2)",
          "version": "1"
        },
        "$": {
          "source": "declare const listener: elbv2.NetworkListener;\ndeclare const asg1: autoscaling.AutoScalingGroup;\ndeclare const asg2: autoscaling.AutoScalingGroup;\n\nconst group = listener.addTargets('AppFleet', {\n  port: 443,\n  targets: [asg1],\n});\n\ngroup.addTarget(asg2);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkTargetsProps",
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener#addTargets",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup#addTarget"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const listener: elbv2.NetworkListener;\ndeclare const asg1: autoscaling.AutoScalingGroup;\ndeclare const asg2: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst group = listener.addTargets('AppFleet', {\n  port: 443,\n  targets: [asg1],\n});\n\ngroup.addTarget(asg2);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 18,
        "130": 3,
        "153": 3,
        "169": 3,
        "192": 1,
        "193": 1,
        "194": 2,
        "196": 2,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "ac8adb170fe407ef0322a5745ebe8943151405c2c57070306cb4874c9e2d5476"
    },
    "b36d04b9b04414ea883cc0e92d4762b31dafeef09e51a5210685a0b320644bb4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\nimport aws_cdk.core as cdk\n\n# network_load_balancer_target: elbv2.INetworkLoadBalancerTarget\n# vpc: ec2.Vpc\n\nnetwork_target_group_props = elbv2.NetworkTargetGroupProps(\n    port=123,\n\n    # the properties below are optional\n    deregistration_delay=cdk.Duration.minutes(30),\n    health_check=elbv2.HealthCheck(\n        enabled=False,\n        healthy_grpc_codes=\"healthyGrpcCodes\",\n        healthy_http_codes=\"healthyHttpCodes\",\n        healthy_threshold_count=123,\n        interval=cdk.Duration.minutes(30),\n        path=\"path\",\n        port=\"port\",\n        protocol=elbv2.Protocol.HTTP,\n        timeout=cdk.Duration.minutes(30),\n        unhealthy_threshold_count=123\n    ),\n    preserve_client_ip=False,\n    protocol=elbv2.Protocol.HTTP,\n    proxy_protocol_v2=False,\n    target_group_name=\"targetGroupName\",\n    targets=[network_load_balancer_target],\n    target_type=elbv2.TargetType.INSTANCE,\n    vpc=vpc\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\nusing Amazon.CDK;\n\nINetworkLoadBalancerTarget networkLoadBalancerTarget;\nVpc vpc;\nNetworkTargetGroupProps networkTargetGroupProps = new NetworkTargetGroupProps {\n    Port = 123,\n\n    // the properties below are optional\n    DeregistrationDelay = Duration.Minutes(30),\n    HealthCheck = new HealthCheck {\n        Enabled = false,\n        HealthyGrpcCodes = \"healthyGrpcCodes\",\n        HealthyHttpCodes = \"healthyHttpCodes\",\n        HealthyThresholdCount = 123,\n        Interval = Duration.Minutes(30),\n        Path = \"path\",\n        Port = \"port\",\n        Protocol = Protocol.HTTP,\n        Timeout = Duration.Minutes(30),\n        UnhealthyThresholdCount = 123\n    },\n    PreserveClientIp = false,\n    Protocol = Protocol.HTTP,\n    ProxyProtocolV2 = false,\n    TargetGroupName = \"targetGroupName\",\n    Targets = new [] { networkLoadBalancerTarget },\n    TargetType = TargetType.INSTANCE,\n    Vpc = vpc\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\nimport software.amazon.awscdk.core.*;\n\nINetworkLoadBalancerTarget networkLoadBalancerTarget;\nVpc vpc;\n\nNetworkTargetGroupProps networkTargetGroupProps = NetworkTargetGroupProps.builder()\n        .port(123)\n\n        // the properties below are optional\n        .deregistrationDelay(Duration.minutes(30))\n        .healthCheck(HealthCheck.builder()\n                .enabled(false)\n                .healthyGrpcCodes(\"healthyGrpcCodes\")\n                .healthyHttpCodes(\"healthyHttpCodes\")\n                .healthyThresholdCount(123)\n                .interval(Duration.minutes(30))\n                .path(\"path\")\n                .port(\"port\")\n                .protocol(Protocol.HTTP)\n                .timeout(Duration.minutes(30))\n                .unhealthyThresholdCount(123)\n                .build())\n        .preserveClientIp(false)\n        .protocol(Protocol.HTTP)\n        .proxyProtocolV2(false)\n        .targetGroupName(\"targetGroupName\")\n        .targets(List.of(networkLoadBalancerTarget))\n        .targetType(TargetType.INSTANCE)\n        .vpc(vpc)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar networkLoadBalancerTarget iNetworkLoadBalancerTarget\nvar vpc vpc\n\nnetworkTargetGroupProps := &networkTargetGroupProps{\n\tport: jsii.Number(123),\n\n\t// the properties below are optional\n\tderegistrationDelay: cdk.duration.minutes(jsii.Number(30)),\n\thealthCheck: &healthCheck{\n\t\tenabled: jsii.Boolean(false),\n\t\thealthyGrpcCodes: jsii.String(\"healthyGrpcCodes\"),\n\t\thealthyHttpCodes: jsii.String(\"healthyHttpCodes\"),\n\t\thealthyThresholdCount: jsii.Number(123),\n\t\tinterval: cdk.*duration.minutes(jsii.Number(30)),\n\t\tpath: jsii.String(\"path\"),\n\t\tport: jsii.String(\"port\"),\n\t\tprotocol: elbv2.protocol_HTTP,\n\t\ttimeout: cdk.*duration.minutes(jsii.Number(30)),\n\t\tunhealthyThresholdCount: jsii.Number(123),\n\t},\n\tpreserveClientIp: jsii.Boolean(false),\n\tprotocol: elbv2.*protocol_HTTP,\n\tproxyProtocolV2: jsii.Boolean(false),\n\ttargetGroupName: jsii.String(\"targetGroupName\"),\n\ttargets: []*iNetworkLoadBalancerTarget{\n\t\tnetworkLoadBalancerTarget,\n\t},\n\ttargetType: elbv2.targetType_INSTANCE,\n\tvpc: vpc,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const networkLoadBalancerTarget: elbv2.INetworkLoadBalancerTarget;\ndeclare const vpc: ec2.Vpc;\nconst networkTargetGroupProps: elbv2.NetworkTargetGroupProps = {\n  port: 123,\n\n  // the properties below are optional\n  deregistrationDelay: cdk.Duration.minutes(30),\n  healthCheck: {\n    enabled: false,\n    healthyGrpcCodes: 'healthyGrpcCodes',\n    healthyHttpCodes: 'healthyHttpCodes',\n    healthyThresholdCount: 123,\n    interval: cdk.Duration.minutes(30),\n    path: 'path',\n    port: 'port',\n    protocol: elbv2.Protocol.HTTP,\n    timeout: cdk.Duration.minutes(30),\n    unhealthyThresholdCount: 123,\n  },\n  preserveClientIp: false,\n  protocol: elbv2.Protocol.HTTP,\n  proxyProtocolV2: false,\n  targetGroupName: 'targetGroupName',\n  targets: [networkLoadBalancerTarget],\n  targetType: elbv2.TargetType.INSTANCE,\n  vpc: vpc,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroupProps",
        "@aws-cdk/aws-elasticloadbalancingv2.Protocol",
        "@aws-cdk/aws-elasticloadbalancingv2.Protocol#HTTP",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType#INSTANCE",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const networkLoadBalancerTarget: elbv2.INetworkLoadBalancerTarget;\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst networkTargetGroupProps: elbv2.NetworkTargetGroupProps = {\n  port: 123,\n\n  // the properties below are optional\n  deregistrationDelay: cdk.Duration.minutes(30),\n  healthCheck: {\n    enabled: false,\n    healthyGrpcCodes: 'healthyGrpcCodes',\n    healthyHttpCodes: 'healthyHttpCodes',\n    healthyThresholdCount: 123,\n    interval: cdk.Duration.minutes(30),\n    path: 'path',\n    port: 'port',\n    protocol: elbv2.Protocol.HTTP,\n    timeout: cdk.Duration.minutes(30),\n    unhealthyThresholdCount: 123,\n  },\n  preserveClientIp: false,\n  protocol: elbv2.Protocol.HTTP,\n  proxyProtocolV2: false,\n  targetGroupName: 'targetGroupName',\n  targets: [networkLoadBalancerTarget],\n  targetType: elbv2.TargetType.INSTANCE,\n  vpc: vpc,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 8,
        "75": 52,
        "91": 3,
        "130": 2,
        "153": 3,
        "169": 3,
        "192": 1,
        "193": 2,
        "194": 12,
        "196": 3,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 20,
        "290": 1
      },
      "fqnsFingerprint": "38cd6101b6ccec128718ef761e7ea1158647ddd08b2dbf971f3a6b75ac9e732a"
    },
    "79f37a92d551d869877385168bab90fab827c60816e30b3521d72886998a0961": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# network_target_group: elbv2.NetworkTargetGroup\n\nnetwork_weighted_target_group = elbv2.NetworkWeightedTargetGroup(\n    target_group=network_target_group,\n\n    # the properties below are optional\n    weight=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nNetworkTargetGroup networkTargetGroup;\n\nNetworkWeightedTargetGroup networkWeightedTargetGroup = new NetworkWeightedTargetGroup {\n    TargetGroup = networkTargetGroup,\n\n    // the properties below are optional\n    Weight = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nNetworkTargetGroup networkTargetGroup;\n\nNetworkWeightedTargetGroup networkWeightedTargetGroup = NetworkWeightedTargetGroup.builder()\n        .targetGroup(networkTargetGroup)\n\n        // the properties below are optional\n        .weight(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar networkTargetGroup networkTargetGroup\n\nnetworkWeightedTargetGroup := &networkWeightedTargetGroup{\n\ttargetGroup: networkTargetGroup,\n\n\t// the properties below are optional\n\tweight: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const networkTargetGroup: elbv2.NetworkTargetGroup;\nconst networkWeightedTargetGroup: elbv2.NetworkWeightedTargetGroup = {\n  targetGroup: networkTargetGroup,\n\n  // the properties below are optional\n  weight: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkWeightedTargetGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkWeightedTargetGroup"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const networkTargetGroup: elbv2.NetworkTargetGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst networkWeightedTargetGroup: elbv2.NetworkWeightedTargetGroup = {\n  targetGroup: networkTargetGroup,\n\n  // the properties below are optional\n  weight: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 10,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "17d7325bfd55d7d90652e69f1e5796b8a80f4aa754cff63b976e9aed27771096"
    },
    "de726ba9a53e09aecdaaf9c9df124898b87e5e376e3b5562094b481a893b0d63": {
      "translations": {
        "python": {
          "source": "listener = elbv2.NetworkListener.from_lookup(self, \"ALBListener\",\n    load_balancer_tags={\n        \"Cluster\": \"MyClusterName\"\n    },\n    listener_protocol=elbv2.Protocol.TCP,\n    listener_port=12345\n)",
          "version": "2"
        },
        "csharp": {
          "source": "INetworkListener listener = NetworkListener.FromLookup(this, \"ALBListener\", new NetworkListenerLookupOptions {\n    LoadBalancerTags = new Dictionary<string, string> {\n        { \"Cluster\", \"MyClusterName\" }\n    },\n    ListenerProtocol = Protocol.TCP,\n    ListenerPort = 12345\n});",
          "version": "1"
        },
        "java": {
          "source": "INetworkListener listener = NetworkListener.fromLookup(this, \"ALBListener\", NetworkListenerLookupOptions.builder()\n        .loadBalancerTags(Map.of(\n                \"Cluster\", \"MyClusterName\"))\n        .listenerProtocol(Protocol.TCP)\n        .listenerPort(12345)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "listener := elbv2.networkListener.fromLookup(this, jsii.String(\"ALBListener\"), &networkListenerLookupOptions{\n\tloadBalancerTags: map[string]*string{\n\t\t\"Cluster\": jsii.String(\"MyClusterName\"),\n\t},\n\tlistenerProtocol: elbv2.protocol_TCP,\n\tlistenerPort: jsii.Number(12345),\n})",
          "version": "1"
        },
        "$": {
          "source": "const listener = elbv2.NetworkListener.fromLookup(this, 'ALBListener', {\n  loadBalancerTags: {\n    Cluster: 'MyClusterName',\n  },\n  listenerProtocol: elbv2.Protocol.TCP,\n  listenerPort: 12345,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.Protocol"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener#fromLookup",
        "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerLookupOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.Protocol",
        "@aws-cdk/aws-elasticloadbalancingv2.Protocol#TCP",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst listener = elbv2.NetworkListener.fromLookup(this, 'ALBListener', {\n  loadBalancerTags: {\n    Cluster: 'MyClusterName',\n  },\n  listenerProtocol: elbv2.Protocol.TCP,\n  listenerPort: 12345,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 11,
        "104": 1,
        "193": 2,
        "194": 4,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 4
      },
      "fqnsFingerprint": "cea0360562af252024960e29259f755cc84435c93356e75810cc5dfb3e142cb7"
    },
    "eda101c3b7c563618ada99274d1b8c29f8686ca4babed566332585c88435d807": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nquery_string_condition = elbv2.QueryStringCondition(\n    value=\"value\",\n\n    # the properties below are optional\n    key=\"key\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nQueryStringCondition queryStringCondition = new QueryStringCondition {\n    Value = \"value\",\n\n    // the properties below are optional\n    Key = \"key\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nQueryStringCondition queryStringCondition = QueryStringCondition.builder()\n        .value(\"value\")\n\n        // the properties below are optional\n        .key(\"key\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nqueryStringCondition := &queryStringCondition{\n\tvalue: jsii.String(\"value\"),\n\n\t// the properties below are optional\n\tkey: jsii.String(\"key\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst queryStringCondition: elbv2.QueryStringCondition = {\n  value: 'value',\n\n  // the properties below are optional\n  key: 'key',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.QueryStringCondition"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.QueryStringCondition"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst queryStringCondition: elbv2.QueryStringCondition = {\n  value: 'value',\n\n  // the properties below are optional\n  key: 'key',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "71f6825a406abd3b81f613087d7a10c1fe7f1416a174829afe4d1380a89dc19c"
    },
    "5e4d04b0c834ebf1b0c8875bcb4a6eb50ea8e4c70be3c6172cf5b29c148c6cdb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nredirect_options = elbv2.RedirectOptions(\n    host=\"host\",\n    path=\"path\",\n    permanent=False,\n    port=\"port\",\n    protocol=\"protocol\",\n    query=\"query\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nRedirectOptions redirectOptions = new RedirectOptions {\n    Host = \"host\",\n    Path = \"path\",\n    Permanent = false,\n    Port = \"port\",\n    Protocol = \"protocol\",\n    Query = \"query\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nRedirectOptions redirectOptions = RedirectOptions.builder()\n        .host(\"host\")\n        .path(\"path\")\n        .permanent(false)\n        .port(\"port\")\n        .protocol(\"protocol\")\n        .query(\"query\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nredirectOptions := &redirectOptions{\n\thost: jsii.String(\"host\"),\n\tpath: jsii.String(\"path\"),\n\tpermanent: jsii.Boolean(false),\n\tport: jsii.String(\"port\"),\n\tprotocol: jsii.String(\"protocol\"),\n\tquery: jsii.String(\"query\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst redirectOptions: elbv2.RedirectOptions = {\n  host: 'host',\n  path: 'path',\n  permanent: false,\n  port: 'port',\n  protocol: 'protocol',\n  query: 'query',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.RedirectOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.RedirectOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst redirectOptions: elbv2.RedirectOptions = {\n  host: 'host',\n  path: 'path',\n  permanent: false,\n  port: 'port',\n  protocol: 'protocol',\n  query: 'query',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "91": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "9fdc4f4165544bc0bd07014f98856c89bd18161ebe263720f85c576b7032d2ce"
    },
    "4157f7c863ddc21b48d11e52585a1906d4c87c938d62cfebfafdadead6044f42": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nredirect_response = elbv2.RedirectResponse(\n    status_code=\"statusCode\",\n\n    # the properties below are optional\n    host=\"host\",\n    path=\"path\",\n    port=\"port\",\n    protocol=\"protocol\",\n    query=\"query\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nRedirectResponse redirectResponse = new RedirectResponse {\n    StatusCode = \"statusCode\",\n\n    // the properties below are optional\n    Host = \"host\",\n    Path = \"path\",\n    Port = \"port\",\n    Protocol = \"protocol\",\n    Query = \"query\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nRedirectResponse redirectResponse = RedirectResponse.builder()\n        .statusCode(\"statusCode\")\n\n        // the properties below are optional\n        .host(\"host\")\n        .path(\"path\")\n        .port(\"port\")\n        .protocol(\"protocol\")\n        .query(\"query\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nredirectResponse := &redirectResponse{\n\tstatusCode: jsii.String(\"statusCode\"),\n\n\t// the properties below are optional\n\thost: jsii.String(\"host\"),\n\tpath: jsii.String(\"path\"),\n\tport: jsii.String(\"port\"),\n\tprotocol: jsii.String(\"protocol\"),\n\tquery: jsii.String(\"query\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst redirectResponse: elbv2.RedirectResponse = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  host: 'host',\n  path: 'path',\n  port: 'port',\n  protocol: 'protocol',\n  query: 'query',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.RedirectResponse"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.RedirectResponse"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst redirectResponse: elbv2.RedirectResponse = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  host: 'host',\n  path: 'path',\n  port: 'port',\n  protocol: 'protocol',\n  query: 'query',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 10,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "4227a80fdff82c9f856dafbb6745dfef720690f124fbf9913554842fd0cdb076"
    },
    "7e77c3c0e616776d1864cd5de1f4967b747394d8743defb52311df80020bcf2e": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_route53 import HostedZone\nfrom aws_cdk.aws_certificatemanager import Certificate\nfrom aws_cdk.aws_elasticloadbalancingv2 import SslPolicy\n\n# vpc: ec2.Vpc\n# cluster: ecs.Cluster\n\n\ndomain_zone = HostedZone.from_lookup(self, \"Zone\", domain_name=\"example.com\")\ncertificate = Certificate.from_certificate_arn(self, \"Cert\", \"arn:aws:acm:us-east-1:123456:certificate/abcdefg\")\nload_balanced_fargate_service = ecs_patterns.ApplicationLoadBalancedFargateService(self, \"Service\",\n    vpc=vpc,\n    cluster=cluster,\n    certificate=certificate,\n    ssl_policy=SslPolicy.RECOMMENDED,\n    domain_name=\"api.example.com\",\n    domain_zone=domain_zone,\n    redirect_hTTP=True,\n    task_image_options=ecsPatterns.ApplicationLoadBalancedTaskImageOptions(\n        image=ecs.ContainerImage.from_registry(\"amazon/amazon-ecs-sample\")\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Route53;\nusing Amazon.CDK.AWS.CertificateManager;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nVpc vpc;\nCluster cluster;\n\n\nIHostedZone domainZone = HostedZone.FromLookup(this, \"Zone\", new HostedZoneProviderProps { DomainName = \"example.com\" });\nICertificate certificate = Certificate.FromCertificateArn(this, \"Cert\", \"arn:aws:acm:us-east-1:123456:certificate/abcdefg\");\nApplicationLoadBalancedFargateService loadBalancedFargateService = new ApplicationLoadBalancedFargateService(this, \"Service\", new ApplicationLoadBalancedFargateServiceProps {\n    Vpc = vpc,\n    Cluster = cluster,\n    Certificate = certificate,\n    SslPolicy = SslPolicy.RECOMMENDED,\n    DomainName = \"api.example.com\",\n    DomainZone = domainZone,\n    RedirectHTTP = true,\n    TaskImageOptions = new ApplicationLoadBalancedTaskImageOptions {\n        Image = ContainerImage.FromRegistry(\"amazon/amazon-ecs-sample\")\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.route53.HostedZone;\nimport software.amazon.awscdk.services.certificatemanager.Certificate;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.SslPolicy;\n\nVpc vpc;\nCluster cluster;\n\n\nIHostedZone domainZone = HostedZone.fromLookup(this, \"Zone\", HostedZoneProviderProps.builder().domainName(\"example.com\").build());\nICertificate certificate = Certificate.fromCertificateArn(this, \"Cert\", \"arn:aws:acm:us-east-1:123456:certificate/abcdefg\");\nApplicationLoadBalancedFargateService loadBalancedFargateService = ApplicationLoadBalancedFargateService.Builder.create(this, \"Service\")\n        .vpc(vpc)\n        .cluster(cluster)\n        .certificate(certificate)\n        .sslPolicy(SslPolicy.RECOMMENDED)\n        .domainName(\"api.example.com\")\n        .domainZone(domainZone)\n        .redirectHTTP(true)\n        .taskImageOptions(ApplicationLoadBalancedTaskImageOptions.builder()\n                .image(ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import \"github.com/aws-samples/dummy/awscdkawsroute53\"\nimport \"github.com/aws-samples/dummy/awscdkawscertificatemanager\"\nimport \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar vpc vpc\nvar cluster cluster\n\n\ndomainZone := awscdkawsroute53.HostedZone.fromLookup(this, jsii.String(\"Zone\"), &hostedZoneProviderProps{\n\tdomainName: jsii.String(\"example.com\"),\n})\ncertificate := awscdkawscertificatemanager.Certificate.fromCertificateArn(this, jsii.String(\"Cert\"), jsii.String(\"arn:aws:acm:us-east-1:123456:certificate/abcdefg\"))\nloadBalancedFargateService := ecsPatterns.NewApplicationLoadBalancedFargateService(this, jsii.String(\"Service\"), &applicationLoadBalancedFargateServiceProps{\n\tvpc: vpc,\n\tcluster: cluster,\n\tcertificate: certificate,\n\tsslPolicy: *awscdkawselasticloadbalancingv2.SslPolicy_RECOMMENDED,\n\tdomainName: jsii.String(\"api.example.com\"),\n\tdomainZone: domainZone,\n\tredirectHTTP: jsii.Boolean(true),\n\ttaskImageOptions: &applicationLoadBalancedTaskImageOptions{\n\t\timage: ecs.containerImage.fromRegistry(jsii.String(\"amazon/amazon-ecs-sample\")),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "import { HostedZone } from '@aws-cdk/aws-route53';\nimport { Certificate } from '@aws-cdk/aws-certificatemanager';\nimport { SslPolicy } from '@aws-cdk/aws-elasticloadbalancingv2';\n\nconst domainZone = HostedZone.fromLookup(this, 'Zone', { domainName: 'example.com' });\nconst certificate = Certificate.fromCertificateArn(this, 'Cert', 'arn:aws:acm:us-east-1:123456:certificate/abcdefg');\n\ndeclare const vpc: ec2.Vpc;\ndeclare const cluster: ecs.Cluster;\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  vpc,\n  cluster,\n  certificate,\n  sslPolicy: SslPolicy.RECOMMENDED,\n  domainName: 'api.example.com',\n  domainZone,\n  redirectHTTP: true,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.SslPolicy"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-certificatemanager.Certificate#fromCertificateArn",
        "@aws-cdk/aws-certificatemanager.ICertificate",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedFargateService",
        "@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedFargateServiceProps",
        "@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedTaskImageOptions",
        "@aws-cdk/aws-ecs.ContainerImage",
        "@aws-cdk/aws-ecs.ContainerImage#fromRegistry",
        "@aws-cdk/aws-ecs.ICluster",
        "@aws-cdk/aws-elasticloadbalancingv2.SslPolicy",
        "@aws-cdk/aws-elasticloadbalancingv2.SslPolicy#RECOMMENDED",
        "@aws-cdk/aws-route53.HostedZone#fromLookup",
        "@aws-cdk/aws-route53.HostedZoneProviderProps",
        "@aws-cdk/aws-route53.IHostedZone",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HostedZone } from '@aws-cdk/aws-route53';\nimport { Certificate } from '@aws-cdk/aws-certificatemanager';\nimport { SslPolicy } from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const vpc: ec2.Vpc;\ndeclare const cluster: ecs.Cluster;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as ecsPatterns from '@aws-cdk/aws-ecs-patterns';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cxapi from '@aws-cdk/cx-api';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    \n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst domainZone = HostedZone.fromLookup(this, 'Zone', { domainName: 'example.com' });\nconst certificate = Certificate.fromCertificateArn(this, 'Cert', 'arn:aws:acm:us-east-1:123456:certificate/abcdefg');\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  vpc,\n  cluster,\n  certificate,\n  sslPolicy: SslPolicy.RECOMMENDED,\n  domainName: 'api.example.com',\n  domainZone,\n  redirectHTTP: true,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n",
      "syntaxKindCounter": {
        "10": 10,
        "75": 33,
        "104": 3,
        "106": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "193": 3,
        "194": 6,
        "196": 3,
        "197": 1,
        "225": 5,
        "242": 5,
        "243": 5,
        "254": 3,
        "255": 3,
        "257": 3,
        "258": 3,
        "281": 6,
        "282": 4,
        "290": 1
      },
      "fqnsFingerprint": "e3df98f02fe93327d63269e96438fd20ac1bbc5ff921aa58ba009b4863738f1b"
    },
    "acc65f303fbfdd3854a08c8d19f876a99ae9929ec1a5aba5b4382c9df7ecb1b1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ntarget_group_attributes = elbv2.TargetGroupAttributes(\n    target_group_arn=\"targetGroupArn\",\n\n    # the properties below are optional\n    default_port=\"defaultPort\",\n    load_balancer_arns=\"loadBalancerArns\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nTargetGroupAttributes targetGroupAttributes = new TargetGroupAttributes {\n    TargetGroupArn = \"targetGroupArn\",\n\n    // the properties below are optional\n    DefaultPort = \"defaultPort\",\n    LoadBalancerArns = \"loadBalancerArns\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nTargetGroupAttributes targetGroupAttributes = TargetGroupAttributes.builder()\n        .targetGroupArn(\"targetGroupArn\")\n\n        // the properties below are optional\n        .defaultPort(\"defaultPort\")\n        .loadBalancerArns(\"loadBalancerArns\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ntargetGroupAttributes := &targetGroupAttributes{\n\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\n\t// the properties below are optional\n\tdefaultPort: jsii.String(\"defaultPort\"),\n\tloadBalancerArns: jsii.String(\"loadBalancerArns\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetGroupAttributes: elbv2.TargetGroupAttributes = {\n  targetGroupArn: 'targetGroupArn',\n\n  // the properties below are optional\n  defaultPort: 'defaultPort',\n  loadBalancerArns: 'loadBalancerArns',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupAttributes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetGroupAttributes: elbv2.TargetGroupAttributes = {\n  targetGroupArn: 'targetGroupArn',\n\n  // the properties below are optional\n  defaultPort: 'defaultPort',\n  loadBalancerArns: 'loadBalancerArns',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "c71b5fd88403d634c1677d6f12b17c4cfd0d7ffd95d68e45cc0eff2875109b64"
    },
    "3d5569998bdb2189010f22f284105540877bfb81cb45bf90bbc10ff4e09f8557": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\ntarget_group_import_props = elbv2.TargetGroupImportProps(\n    target_group_arn=\"targetGroupArn\",\n\n    # the properties below are optional\n    default_port=\"defaultPort\",\n    load_balancer_arns=\"loadBalancerArns\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nTargetGroupImportProps targetGroupImportProps = new TargetGroupImportProps {\n    TargetGroupArn = \"targetGroupArn\",\n\n    // the properties below are optional\n    DefaultPort = \"defaultPort\",\n    LoadBalancerArns = \"loadBalancerArns\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nTargetGroupImportProps targetGroupImportProps = TargetGroupImportProps.builder()\n        .targetGroupArn(\"targetGroupArn\")\n\n        // the properties below are optional\n        .defaultPort(\"defaultPort\")\n        .loadBalancerArns(\"loadBalancerArns\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\ntargetGroupImportProps := &targetGroupImportProps{\n\ttargetGroupArn: jsii.String(\"targetGroupArn\"),\n\n\t// the properties below are optional\n\tdefaultPort: jsii.String(\"defaultPort\"),\n\tloadBalancerArns: jsii.String(\"loadBalancerArns\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetGroupImportProps: elbv2.TargetGroupImportProps = {\n  targetGroupArn: 'targetGroupArn',\n\n  // the properties below are optional\n  defaultPort: 'defaultPort',\n  loadBalancerArns: 'loadBalancerArns',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupImportProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupImportProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetGroupImportProps: elbv2.TargetGroupImportProps = {\n  targetGroupArn: 'targetGroupArn',\n\n  // the properties below are optional\n  defaultPort: 'defaultPort',\n  loadBalancerArns: 'loadBalancerArns',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "b75b832b5161472ce02d041ac939e2e72080ec5f06dc69d29a8e1db0b8e64c09"
    },
    "d00a0c3d7dd946a72482a52712b4fb9970d57597e644041fb4103a6cd6d2a7f9": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\n\ntg = elbv2.ApplicationTargetGroup(self, \"TG\",\n    target_type=elbv2.TargetType.IP,\n    port=50051,\n    protocol=elbv2.ApplicationProtocol.HTTP,\n    protocol_version=elbv2.ApplicationProtocolVersion.GRPC,\n    health_check=elbv2.HealthCheck(\n        enabled=True,\n        healthy_grpc_codes=\"0-99\"\n    ),\n    vpc=vpc\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\n\nApplicationTargetGroup tg = new ApplicationTargetGroup(this, \"TG\", new ApplicationTargetGroupProps {\n    TargetType = TargetType.IP,\n    Port = 50051,\n    Protocol = ApplicationProtocol.HTTP,\n    ProtocolVersion = ApplicationProtocolVersion.GRPC,\n    HealthCheck = new HealthCheck {\n        Enabled = true,\n        HealthyGrpcCodes = \"0-99\"\n    },\n    Vpc = vpc\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\n\nApplicationTargetGroup tg = ApplicationTargetGroup.Builder.create(this, \"TG\")\n        .targetType(TargetType.IP)\n        .port(50051)\n        .protocol(ApplicationProtocol.HTTP)\n        .protocolVersion(ApplicationProtocolVersion.GRPC)\n        .healthCheck(HealthCheck.builder()\n                .enabled(true)\n                .healthyGrpcCodes(\"0-99\")\n                .build())\n        .vpc(vpc)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\n\ntg := elbv2.NewApplicationTargetGroup(this, jsii.String(\"TG\"), &applicationTargetGroupProps{\n\ttargetType: elbv2.targetType_IP,\n\tport: jsii.Number(50051),\n\tprotocol: elbv2.applicationProtocol_HTTP,\n\tprotocolVersion: elbv2.applicationProtocolVersion_GRPC,\n\thealthCheck: &healthCheck{\n\t\tenabled: jsii.Boolean(true),\n\t\thealthyGrpcCodes: jsii.String(\"0-99\"),\n\t},\n\tvpc: vpc,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\n\nconst tg = new elbv2.ApplicationTargetGroup(this, 'TG', {\n  targetType: elbv2.TargetType.IP,\n  port: 50051,\n  protocol: elbv2.ApplicationProtocol.HTTP,\n  protocolVersion: elbv2.ApplicationProtocolVersion.GRPC,\n  healthCheck: {\n    enabled: true,\n    healthyGrpcCodes: '0-99',\n  },\n  vpc,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetType"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol#HTTP",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocolVersion",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocolVersion#GRPC",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroupProps",
        "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType",
        "@aws-cdk/aws-elasticloadbalancingv2.TargetType#IP",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst tg = new elbv2.ApplicationTargetGroup(this, 'TG', {\n  targetType: elbv2.TargetType.IP,\n  port: 50051,\n  protocol: elbv2.ApplicationProtocol.HTTP,\n  protocolVersion: elbv2.ApplicationProtocolVersion.GRPC,\n  healthCheck: {\n    enabled: true,\n    healthyGrpcCodes: '0-99',\n  },\n  vpc,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 23,
        "104": 1,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 7,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 7,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "1104efe41e85f5e2e16d4de9fd855d6777e3ca32c6b42806810edb3585eebee5"
    },
    "18301feb8592f907df30e54986c839c07164e768d7e07320fb6aa8feabf5244c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# application_target_group: elbv2.ApplicationTargetGroup\n\nweighted_target_group = elbv2.WeightedTargetGroup(\n    target_group=application_target_group,\n\n    # the properties below are optional\n    weight=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nApplicationTargetGroup applicationTargetGroup;\n\nWeightedTargetGroup weightedTargetGroup = new WeightedTargetGroup {\n    TargetGroup = applicationTargetGroup,\n\n    // the properties below are optional\n    Weight = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nApplicationTargetGroup applicationTargetGroup;\n\nWeightedTargetGroup weightedTargetGroup = WeightedTargetGroup.builder()\n        .targetGroup(applicationTargetGroup)\n\n        // the properties below are optional\n        .weight(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar applicationTargetGroup applicationTargetGroup\n\nweightedTargetGroup := &weightedTargetGroup{\n\ttargetGroup: applicationTargetGroup,\n\n\t// the properties below are optional\n\tweight: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\nconst weightedTargetGroup: elbv2.WeightedTargetGroup = {\n  targetGroup: applicationTargetGroup,\n\n  // the properties below are optional\n  weight: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.WeightedTargetGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup",
        "@aws-cdk/aws-elasticloadbalancingv2.WeightedTargetGroup"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst weightedTargetGroup: elbv2.WeightedTargetGroup = {\n  targetGroup: applicationTargetGroup,\n\n  // the properties below are optional\n  weight: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 10,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "13e6e1badc7a1fdc33715b57a8313a9d02e8afaa7c3418eb92a57247cf63b451"
    }
  }
}