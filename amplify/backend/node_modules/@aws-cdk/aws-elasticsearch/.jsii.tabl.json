{
  "version": "2",
  "toolVersion": "1.67.0",
  "snippets": {
    "82b6af55ebe92a5f1cc287878652ef938427078da028a4b231fc56d062419af7": {
      "translations": {
        "python": {
          "source": "dev_domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_1\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Domain devDomain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_1\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain devDomain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_1)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "devDomain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_1(),\n})",
          "version": "1"
        },
        "$": {
          "source": "const devDomain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 20
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_1",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst devDomain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "3b745c87971f9ae84e15b913d2b911ecdd5808b99a680f84f98f901e510bfc91"
    },
    "a2ec53565d1acf4aab716d9cfbe1920692665487b90f6c656c3a12cdec4a447c": {
      "translations": {
        "python": {
          "source": "dev_domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_10,\n    enable_version_upgrade=True\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Domain devDomain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_10,\n    EnableVersionUpgrade = true\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain devDomain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_10)\n        .enableVersionUpgrade(true)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "devDomain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_10(),\n\tenableVersionUpgrade: jsii.Boolean(true),\n})",
          "version": "1"
        },
        "$": {
          "source": "const devDomain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_10,\n  enableVersionUpgrade: true, // defaults to false\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 28
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_10",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst devDomain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_10,\n  enableVersionUpgrade: true, // defaults to false\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 8,
        "104": 1,
        "106": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "e0f44e3b082b7575e58a598602bc46feb1f437c044be015b72b691b1d890e33d"
    },
    "3430ebcc2384a32132c9e8c6d40a56b8cfe5d1aba4a578960d5a0d42913ccc0e": {
      "translations": {
        "python": {
          "source": "prod_domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_1,\n    capacity=es.CapacityConfig(\n        master_nodes=5,\n        data_nodes=20\n    ),\n    ebs=es.EbsOptions(\n        volume_size=20\n    ),\n    zone_awareness=es.ZoneAwarenessConfig(\n        availability_zone_count=3\n    ),\n    logging=es.LoggingOptions(\n        slow_search_log_enabled=True,\n        app_log_enabled=True,\n        slow_index_log_enabled=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Domain prodDomain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_1,\n    Capacity = new CapacityConfig {\n        MasterNodes = 5,\n        DataNodes = 20\n    },\n    Ebs = new EbsOptions {\n        VolumeSize = 20\n    },\n    ZoneAwareness = new ZoneAwarenessConfig {\n        AvailabilityZoneCount = 3\n    },\n    Logging = new LoggingOptions {\n        SlowSearchLogEnabled = true,\n        AppLogEnabled = true,\n        SlowIndexLogEnabled = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain prodDomain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_1)\n        .capacity(CapacityConfig.builder()\n                .masterNodes(5)\n                .dataNodes(20)\n                .build())\n        .ebs(EbsOptions.builder()\n                .volumeSize(20)\n                .build())\n        .zoneAwareness(ZoneAwarenessConfig.builder()\n                .availabilityZoneCount(3)\n                .build())\n        .logging(LoggingOptions.builder()\n                .slowSearchLogEnabled(true)\n                .appLogEnabled(true)\n                .slowIndexLogEnabled(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "prodDomain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_1(),\n\tcapacity: &capacityConfig{\n\t\tmasterNodes: jsii.Number(5),\n\t\tdataNodes: jsii.Number(20),\n\t},\n\tebs: &ebsOptions{\n\t\tvolumeSize: jsii.Number(20),\n\t},\n\tzoneAwareness: &zoneAwarenessConfig{\n\t\tavailabilityZoneCount: jsii.Number(3),\n\t},\n\tlogging: &loggingOptions{\n\t\tslowSearchLogEnabled: jsii.Boolean(true),\n\t\tappLogEnabled: jsii.Boolean(true),\n\t\tslowIndexLogEnabled: jsii.Boolean(true),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const prodDomain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  capacity: {\n    masterNodes: 5,\n    dataNodes: 20,\n  },\n  ebs: {\n    volumeSize: 20,\n  },\n  zoneAwareness: {\n    availabilityZoneCount: 3,\n  },\n  logging: {\n    slowSearchLogEnabled: true,\n    appLogEnabled: true,\n    slowIndexLogEnabled: true,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 37
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CapacityConfig",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.EbsOptions",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_1",
        "@aws-cdk/aws-elasticsearch.LoggingOptions",
        "@aws-cdk/aws-elasticsearch.ZoneAwarenessConfig",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst prodDomain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  capacity: {\n    masterNodes: 5,\n    dataNodes: 20,\n  },\n  ebs: {\n    volumeSize: 20,\n  },\n  zoneAwareness: {\n    availabilityZoneCount: 3,\n  },\n  logging: {\n    slowSearchLogEnabled: true,\n    appLogEnabled: true,\n    slowIndexLogEnabled: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 1,
        "75": 18,
        "104": 1,
        "106": 3,
        "193": 5,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 12
      },
      "fqnsFingerprint": "bc87b57348d870dc8024e2bde14192dd05cd5a85e8cdc515f479ba1e2463a994"
    },
    "9490addd3a48b2344089c435e2b02e343c72fe56ec9169180313bc4f90363df7": {
      "translations": {
        "python": {
          "source": "slr = iam.CfnServiceLinkedRole(self, \"ElasticSLR\",\n    aws_service_name=\"es.amazonaws.com\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "CfnServiceLinkedRole slr = new CfnServiceLinkedRole(this, \"ElasticSLR\", new CfnServiceLinkedRoleProps {\n    AwsServiceName = \"es.amazonaws.com\"\n});",
          "version": "1"
        },
        "java": {
          "source": "CfnServiceLinkedRole slr = CfnServiceLinkedRole.Builder.create(this, \"ElasticSLR\")\n        .awsServiceName(\"es.amazonaws.com\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "slr := iam.NewCfnServiceLinkedRole(this, jsii.String(\"ElasticSLR\"), &cfnServiceLinkedRoleProps{\n\tawsServiceName: jsii.String(\"es.amazonaws.com\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "const slr = new iam.CfnServiceLinkedRole(this, 'ElasticSLR', {\n  awsServiceName: 'es.amazonaws.com',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 79
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.CfnServiceLinkedRole",
        "@aws-cdk/aws-iam.CfnServiceLinkedRoleProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst slr = new iam.CfnServiceLinkedRole(this, 'ElasticSLR', {\n  awsServiceName: 'es.amazonaws.com',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 4,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "6180e6715b98dc4c5671e9278fa77925c150afafb6e11021fb1410db628d5cf4"
    },
    "732f630e15ac38af6c49adc6dd2a4788d5b87effa4e9fe1a22abc11737ffcfc5": {
      "translations": {
        "python": {
          "source": "domain_endpoint = \"https://my-domain-jcjotrt6f7otem4sqcwbch3c4u.us-east-1.es.amazonaws.com\"\ndomain = es.Domain.from_domain_endpoint(self, \"ImportedDomain\", domain_endpoint)",
          "version": "2"
        },
        "csharp": {
          "source": "string domainEndpoint = \"https://my-domain-jcjotrt6f7otem4sqcwbch3c4u.us-east-1.es.amazonaws.com\";\nIDomain domain = Domain.FromDomainEndpoint(this, \"ImportedDomain\", domainEndpoint);",
          "version": "1"
        },
        "java": {
          "source": "String domainEndpoint = \"https://my-domain-jcjotrt6f7otem4sqcwbch3c4u.us-east-1.es.amazonaws.com\";\nIDomain domain = Domain.fromDomainEndpoint(this, \"ImportedDomain\", domainEndpoint);",
          "version": "1"
        },
        "go": {
          "source": "domainEndpoint := \"https://my-domain-jcjotrt6f7otem4sqcwbch3c4u.us-east-1.es.amazonaws.com\"\ndomain := es.domain.fromDomainEndpoint(this, jsii.String(\"ImportedDomain\"), domainEndpoint)",
          "version": "1"
        },
        "$": {
          "source": "const domainEndpoint = 'https://my-domain-jcjotrt6f7otem4sqcwbch3c4u.us-east-1.es.amazonaws.com';\nconst domain = es.Domain.fromDomainEndpoint(this, 'ImportedDomain', domainEndpoint);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 90
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.Domain#fromDomainEndpoint",
        "@aws-cdk/aws-elasticsearch.IDomain",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst domainEndpoint = 'https://my-domain-jcjotrt6f7otem4sqcwbch3c4u.us-east-1.es.amazonaws.com';\nconst domain = es.Domain.fromDomainEndpoint(this, 'ImportedDomain', domainEndpoint);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "104": 1,
        "194": 2,
        "196": 1,
        "225": 2,
        "242": 2,
        "243": 2
      },
      "fqnsFingerprint": "540eed21c6343abfef72a557f9b3bd3dad64e4e957c14eb6326bd929473ef6fe"
    },
    "dc23a2f2feca03b5ef4b30577fe9e0c9f1b0a5a0843c82175b7cdd01519dc542": {
      "translations": {
        "python": {
          "source": "# fn: lambda.Function\n# domain: es.Domain\n\n\n# Grant write access to the app-search index\ndomain.grant_index_write(\"app-search\", fn)\n\n# Grant read access to the 'app-search/_search' path\ndomain.grant_path_read(\"app-search/_search\", fn)",
          "version": "2"
        },
        "csharp": {
          "source": "Function fn;\nDomain domain;\n\n\n// Grant write access to the app-search index\ndomain.GrantIndexWrite(\"app-search\", fn);\n\n// Grant read access to the 'app-search/_search' path\ndomain.GrantPathRead(\"app-search/_search\", fn);",
          "version": "1"
        },
        "java": {
          "source": "Function fn;\nDomain domain;\n\n\n// Grant write access to the app-search index\ndomain.grantIndexWrite(\"app-search\", fn);\n\n// Grant read access to the 'app-search/_search' path\ndomain.grantPathRead(\"app-search/_search\", fn);",
          "version": "1"
        },
        "go": {
          "source": "var fn function\nvar domain domain\n\n\n// Grant write access to the app-search index\ndomain.grantIndexWrite(jsii.String(\"app-search\"), fn)\n\n// Grant read access to the 'app-search/_search' path\ndomain.grantPathRead(jsii.String(\"app-search/_search\"), fn)",
          "version": "1"
        },
        "$": {
          "source": "declare const fn: lambda.Function;\ndeclare const domain: es.Domain;\n\n// Grant write access to the app-search index\ndomain.grantIndexWrite('app-search', fn);\n\n// Grant read access to the 'app-search/_search' path\ndomain.grantPathRead('app-search/_search', fn);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 101
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IGrantable"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const fn: lambda.Function;\ndeclare const domain: es.Domain;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// Grant write access to the app-search index\ndomain.grantIndexWrite('app-search', fn);\n\n// Grant read access to the 'app-search/_search' path\ndomain.grantPathRead('app-search/_search', fn);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 12,
        "130": 2,
        "153": 2,
        "169": 2,
        "194": 2,
        "196": 2,
        "225": 2,
        "226": 2,
        "242": 2,
        "243": 2,
        "290": 1
      },
      "fqnsFingerprint": "1323b60ab94a88d4cf4c7c846ab0af5927a24713050028234cb9426c28ace47b"
    },
    "d806021bef1b79b1bcaeb5c8623ef282c585c7b1d9aa8afd68de2a7c1ed9d6ad": {
      "translations": {
        "python": {
          "source": "domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_4,\n    ebs=es.EbsOptions(\n        volume_size=100,\n        volume_type=ec2.EbsDeviceVolumeType.GENERAL_PURPOSE_SSD\n    ),\n    node_to_node_encryption=True,\n    encryption_at_rest=es.EncryptionAtRestOptions(\n        enabled=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Domain domain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_4,\n    Ebs = new EbsOptions {\n        VolumeSize = 100,\n        VolumeType = EbsDeviceVolumeType.GENERAL_PURPOSE_SSD\n    },\n    NodeToNodeEncryption = true,\n    EncryptionAtRest = new EncryptionAtRestOptions {\n        Enabled = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain domain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_4)\n        .ebs(EbsOptions.builder()\n                .volumeSize(100)\n                .volumeType(EbsDeviceVolumeType.GENERAL_PURPOSE_SSD)\n                .build())\n        .nodeToNodeEncryption(true)\n        .encryptionAtRest(EncryptionAtRestOptions.builder()\n                .enabled(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "domain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_4(),\n\tebs: &ebsOptions{\n\t\tvolumeSize: jsii.Number(100),\n\t\tvolumeType: ec2.ebsDeviceVolumeType_GENERAL_PURPOSE_SSD,\n\t},\n\tnodeToNodeEncryption: jsii.Boolean(true),\n\tencryptionAtRest: &encryptionAtRestOptions{\n\t\tenabled: jsii.Boolean(true),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_4,\n  ebs: {\n    volumeSize: 100,\n    volumeType: ec2.EbsDeviceVolumeType.GENERAL_PURPOSE_SSD,\n  },\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 116
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.EbsDeviceVolumeType",
        "@aws-cdk/aws-ec2.EbsDeviceVolumeType#GENERAL_PURPOSE_SSD",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.EbsOptions",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_4",
        "@aws-cdk/aws-elasticsearch.EncryptionAtRestOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_4,\n  ebs: {\n    volumeSize: 100,\n    volumeType: ec2.EbsDeviceVolumeType.GENERAL_PURPOSE_SSD,\n  },\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 16,
        "104": 1,
        "106": 2,
        "193": 3,
        "194": 5,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 7
      },
      "fqnsFingerprint": "889b8760a949f539f9964e36f45d2de2bf7f9e836e2a01312679170cccd1951d"
    },
    "6cc9216db76a4368d190bc0a186ea13ebbba01e1d14ef323f6a9d17e8740074a": {
      "translations": {
        "python": {
          "source": "vpc = ec2.Vpc(self, \"Vpc\")\ndomain_props = es.DomainProps(\n    version=es.ElasticsearchVersion.V7_1,\n    removal_policy=RemovalPolicy.DESTROY,\n    vpc=vpc,\n    # must be enabled since our VPC contains multiple private subnets.\n    zone_awareness=es.ZoneAwarenessConfig(\n        enabled=True\n    ),\n    capacity=es.CapacityConfig(\n        # must be an even number since the default az count is 2.\n        data_nodes=2\n    )\n)\nes.Domain(self, \"Domain\", domain_props)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc = new Vpc(this, \"Vpc\");\nDomainProps domainProps = new DomainProps {\n    Version = ElasticsearchVersion.V7_1,\n    RemovalPolicy = RemovalPolicy.DESTROY,\n    Vpc = vpc,\n    // must be enabled since our VPC contains multiple private subnets.\n    ZoneAwareness = new ZoneAwarenessConfig {\n        Enabled = true\n    },\n    Capacity = new CapacityConfig {\n        // must be an even number since the default az count is 2.\n        DataNodes = 2\n    }\n};\nnew Domain(this, \"Domain\", domainProps);",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc = new Vpc(this, \"Vpc\");\nDomainProps domainProps = DomainProps.builder()\n        .version(ElasticsearchVersion.V7_1)\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .vpc(vpc)\n        // must be enabled since our VPC contains multiple private subnets.\n        .zoneAwareness(ZoneAwarenessConfig.builder()\n                .enabled(true)\n                .build())\n        .capacity(CapacityConfig.builder()\n                // must be an even number since the default az count is 2.\n                .dataNodes(2)\n                .build())\n        .build();\nnew Domain(this, \"Domain\", domainProps);",
          "version": "1"
        },
        "go": {
          "source": "vpc := ec2.NewVpc(this, jsii.String(\"Vpc\"))\ndomainProps := &domainProps{\n\tversion: es.elasticsearchVersion_V7_1(),\n\tremovalPolicy: *awscdkcore.RemovalPolicy_DESTROY,\n\tvpc: vpc,\n\t// must be enabled since our VPC contains multiple private subnets.\n\tzoneAwareness: &zoneAwarenessConfig{\n\t\tenabled: jsii.Boolean(true),\n\t},\n\tcapacity: &capacityConfig{\n\t\t// must be an even number since the default az count is 2.\n\t\tdataNodes: jsii.Number(2),\n\t},\n}\nes.NewDomain(this, jsii.String(\"Domain\"), domainProps)",
          "version": "1"
        },
        "$": {
          "source": "const vpc = new ec2.Vpc(this, 'Vpc');\nconst domainProps: es.DomainProps = {\n  version: es.ElasticsearchVersion.V7_1,\n  removalPolicy: RemovalPolicy.DESTROY,\n  vpc,\n  // must be enabled since our VPC contains multiple private subnets.\n  zoneAwareness: {\n    enabled: true,\n  },\n  capacity: {\n    // must be an even number since the default az count is 2.\n    dataNodes: 2,\n  },\n};\nnew es.Domain(this, 'Domain', domainProps);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 140
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.Vpc",
        "@aws-cdk/aws-elasticsearch.CapacityConfig",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_1",
        "@aws-cdk/aws-elasticsearch.ZoneAwarenessConfig",
        "@aws-cdk/core.RemovalPolicy",
        "@aws-cdk/core.RemovalPolicy#DESTROY",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst vpc = new ec2.Vpc(this, 'Vpc');\nconst domainProps: es.DomainProps = {\n  version: es.ElasticsearchVersion.V7_1,\n  removalPolicy: RemovalPolicy.DESTROY,\n  vpc,\n  // must be enabled since our VPC contains multiple private subnets.\n  zoneAwareness: {\n    enabled: true,\n  },\n  capacity: {\n    // must be an even number since the default az count is 2.\n    dataNodes: 2,\n  },\n};\nnew es.Domain(this, 'Domain', domainProps);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 21,
        "104": 2,
        "106": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 5,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 6,
        "282": 1
      },
      "fqnsFingerprint": "fa0128654b0578b2d9d39db41c41542e066c1aac9b109439629f8618769ea5fd"
    },
    "73d451fc9d27a880c4cce47b6e12f9ebbcafe1fd9c81e7ca4a8969de4454cf0f": {
      "translations": {
        "python": {
          "source": "# domain: es.Domain\n\nfree_storage_space = domain.metric_free_storage_space()\nmaster_sys_memory_utilization = domain.metric(\"MasterSysMemoryUtilization\")",
          "version": "2"
        },
        "csharp": {
          "source": "Domain domain;\n\nMetric freeStorageSpace = domain.MetricFreeStorageSpace();\nMetric masterSysMemoryUtilization = domain.Metric(\"MasterSysMemoryUtilization\");",
          "version": "1"
        },
        "java": {
          "source": "Domain domain;\n\nMetric freeStorageSpace = domain.metricFreeStorageSpace();\nMetric masterSysMemoryUtilization = domain.metric(\"MasterSysMemoryUtilization\");",
          "version": "1"
        },
        "go": {
          "source": "var domain domain\n\nfreeStorageSpace := domain.metricFreeStorageSpace()\nmasterSysMemoryUtilization := domain.metric(jsii.String(\"MasterSysMemoryUtilization\"))",
          "version": "1"
        },
        "$": {
          "source": "declare const domain: es.Domain;\nconst freeStorageSpace = domain.metricFreeStorageSpace();\nconst masterSysMemoryUtilization = domain.metric('MasterSysMemoryUtilization');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 165
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudwatch.Metric"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const domain: es.Domain;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst freeStorageSpace = domain.metricFreeStorageSpace();\nconst masterSysMemoryUtilization = domain.metric('MasterSysMemoryUtilization');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 9,
        "130": 1,
        "153": 1,
        "169": 1,
        "194": 2,
        "196": 2,
        "225": 3,
        "242": 3,
        "243": 3,
        "290": 1
      },
      "fqnsFingerprint": "e7f611dea3980ddf6b3c7294b6be09f970eafe1ce82120fe915fb0eeae7422a3"
    },
    "aff58173d35b3f7eaeab554eba3ed2a16fa192a9387e5b6d8add57f79bce42bb": {
      "translations": {
        "python": {
          "source": "domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_1,\n    enforce_https=True,\n    node_to_node_encryption=True,\n    encryption_at_rest=es.EncryptionAtRestOptions(\n        enabled=True\n    ),\n    fine_grained_access_control=es.AdvancedSecurityOptions(\n        master_user_name=\"master-user\"\n    )\n)\n\nmaster_user_password = domain.master_user_password",
          "version": "2"
        },
        "csharp": {
          "source": "Domain domain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_1,\n    EnforceHttps = true,\n    NodeToNodeEncryption = true,\n    EncryptionAtRest = new EncryptionAtRestOptions {\n        Enabled = true\n    },\n    FineGrainedAccessControl = new AdvancedSecurityOptions {\n        MasterUserName = \"master-user\"\n    }\n});\n\nSecretValue? masterUserPassword = domain.MasterUserPassword;",
          "version": "1"
        },
        "java": {
          "source": "Domain domain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_1)\n        .enforceHttps(true)\n        .nodeToNodeEncryption(true)\n        .encryptionAtRest(EncryptionAtRestOptions.builder()\n                .enabled(true)\n                .build())\n        .fineGrainedAccessControl(AdvancedSecurityOptions.builder()\n                .masterUserName(\"master-user\")\n                .build())\n        .build();\n\nSecretValue masterUserPassword = domain.getMasterUserPassword();",
          "version": "1"
        },
        "go": {
          "source": "domain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_1(),\n\tenforceHttps: jsii.Boolean(true),\n\tnodeToNodeEncryption: jsii.Boolean(true),\n\tencryptionAtRest: &encryptionAtRestOptions{\n\t\tenabled: jsii.Boolean(true),\n\t},\n\tfineGrainedAccessControl: &advancedSecurityOptions{\n\t\tmasterUserName: jsii.String(\"master-user\"),\n\t},\n})\n\nmasterUserPassword := domain.masterUserPassword",
          "version": "1"
        },
        "$": {
          "source": "const domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  enforceHttps: true,\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n  fineGrainedAccessControl: {\n    masterUserName: 'master-user',\n  },\n});\n\nconst masterUserPassword = domain.masterUserPassword;",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 178
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.AdvancedSecurityOptions",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.Domain#masterUserPassword",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_1",
        "@aws-cdk/aws-elasticsearch.EncryptionAtRestOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  enforceHttps: true,\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n  fineGrainedAccessControl: {\n    masterUserName: 'master-user',\n  },\n});\n\nconst masterUserPassword = domain.masterUserPassword;\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 16,
        "104": 1,
        "106": 3,
        "193": 3,
        "194": 4,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 7
      },
      "fqnsFingerprint": "6093278a5fb2437de2a0a0abaff995e75bb23c5f163d7d0a25151d34b91c576e"
    },
    "7c30342498afd32e37a83ac1d2d95cc9db3961a1247d8dfea42c5b659e1ab2f6": {
      "translations": {
        "python": {
          "source": "domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_1,\n    use_unsigned_basic_auth=True\n)\n\nmaster_user_password = domain.master_user_password",
          "version": "2"
        },
        "csharp": {
          "source": "Domain domain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_1,\n    UseUnsignedBasicAuth = true\n});\n\nSecretValue? masterUserPassword = domain.MasterUserPassword;",
          "version": "1"
        },
        "java": {
          "source": "Domain domain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_1)\n        .useUnsignedBasicAuth(true)\n        .build();\n\nSecretValue masterUserPassword = domain.getMasterUserPassword();",
          "version": "1"
        },
        "go": {
          "source": "domain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_1(),\n\tuseUnsignedBasicAuth: jsii.Boolean(true),\n})\n\nmasterUserPassword := domain.masterUserPassword",
          "version": "1"
        },
        "$": {
          "source": "const domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  useUnsignedBasicAuth: true,\n});\n\nconst masterUserPassword = domain.masterUserPassword;",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 216
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.Domain#masterUserPassword",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_1",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  useUnsignedBasicAuth: true,\n});\n\nconst masterUserPassword = domain.masterUserPassword;\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 11,
        "104": 1,
        "106": 1,
        "193": 1,
        "194": 4,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 2
      },
      "fqnsFingerprint": "acce3bc318bba6c8a7bc16a76637863b20068cf766003690c9f111780d95daad"
    },
    "d709cdb58471fa4f3175c1aab900772025c66d0991a9859d464608416bfbedf7": {
      "translations": {
        "python": {
          "source": "domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_1,\n    access_policies=[\n        iam.PolicyStatement(\n            actions=[\"es:*ESHttpPost\", \"es:ESHttpPut*\"],\n            effect=iam.Effect.ALLOW,\n            principals=[iam.AccountPrincipal(\"123456789012\")],\n            resources=[\"*\"]\n        )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Domain domain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_1,\n    AccessPolicies = new [] {\n        new PolicyStatement(new PolicyStatementProps {\n            Actions = new [] { \"es:*ESHttpPost\", \"es:ESHttpPut*\" },\n            Effect = Effect.ALLOW,\n            Principals = new [] { new AccountPrincipal(\"123456789012\") },\n            Resources = new [] { \"*\" }\n        }) }\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain domain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_1)\n        .accessPolicies(List.of(\n            PolicyStatement.Builder.create()\n                    .actions(List.of(\"es:*ESHttpPost\", \"es:ESHttpPut*\"))\n                    .effect(Effect.ALLOW)\n                    .principals(List.of(new AccountPrincipal(\"123456789012\")))\n                    .resources(List.of(\"*\"))\n                    .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "domain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_1(),\n\taccessPolicies: []policyStatement{\n\t\tiam.NewPolicyStatement(&policyStatementProps{\n\t\t\tactions: []*string{\n\t\t\t\tjsii.String(\"es:*ESHttpPost\"),\n\t\t\t\tjsii.String(\"es:ESHttpPut*\"),\n\t\t\t},\n\t\t\teffect: iam.effect_ALLOW,\n\t\t\tprincipals: []iPrincipal{\n\t\t\t\tiam.NewAccountPrincipal(jsii.String(\"123456789012\")),\n\t\t\t},\n\t\t\tresources: []*string{\n\t\t\t\tjsii.String(\"*\"),\n\t\t\t},\n\t\t}),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  accessPolicies: [\n    new iam.PolicyStatement({\n      actions: ['es:*ESHttpPost', 'es:ESHttpPut*'],\n      effect: iam.Effect.ALLOW,\n      principals: [new iam.AccountPrincipal('123456789012')],\n      resources: ['*'],\n    }),\n  ]\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 232
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_1",
        "@aws-cdk/aws-iam.AccountPrincipal",
        "@aws-cdk/aws-iam.Effect",
        "@aws-cdk/aws-iam.Effect#ALLOW",
        "@aws-cdk/aws-iam.PolicyStatement",
        "@aws-cdk/aws-iam.PolicyStatementProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  accessPolicies: [\n    new iam.PolicyStatement({\n      actions: ['es:*ESHttpPost', 'es:ESHttpPut*'],\n      effect: iam.Effect.ALLOW,\n      principals: [new iam.AccountPrincipal('123456789012')],\n      resources: ['*'],\n    }),\n  ]\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 19,
        "104": 1,
        "192": 4,
        "193": 2,
        "194": 7,
        "197": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 6
      },
      "fqnsFingerprint": "0565526d87430bb7b5aa14083917c376b500c98194d64b86812672bb0312f783"
    },
    "fbda2e161639ef0830e4338f5e84893ca095e60dc30bdb6c89d4a1cf12690379": {
      "translations": {
        "python": {
          "source": "domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_1\n)\n\ndomain.add_access_policies(\n    iam.PolicyStatement(\n        actions=[\"es:ESHttpPost\", \"es:ESHttpPut\"],\n        effect=iam.Effect.ALLOW,\n        principals=[iam.AccountPrincipal(\"123456789012\")],\n        resources=[domain.domain_arn, f\"{domain.domainArn}/*\"]\n    ),\n    iam.PolicyStatement(\n        actions=[\"es:ESHttpGet\"],\n        effect=iam.Effect.ALLOW,\n        principals=[iam.AccountPrincipal(\"123456789012\")],\n        resources=[f\"{domain.domainArn}/_all/_settings\", f\"{domain.domainArn}/_cluster/stats\", f\"{domain.domainArn}/index-name*/_mapping/type-name\", f\"{domain.domainArn}/roletest*/_mapping/roletest\", f\"{domain.domainArn}/_nodes\", f\"{domain.domainArn}/_nodes/stats\", f\"{domain.domainArn}/_nodes/*/stats\", f\"{domain.domainArn}/_stats\", f\"{domain.domainArn}/index-name*/_stats\", f\"{domain.domainArn}/roletest*/_stat\"\n        ]\n    ))",
          "version": "2"
        },
        "csharp": {
          "source": "Domain domain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_1\n});\n\ndomain.AddAccessPolicies(\nnew PolicyStatement(new PolicyStatementProps {\n    Actions = new [] { \"es:ESHttpPost\", \"es:ESHttpPut\" },\n    Effect = Effect.ALLOW,\n    Principals = new [] { new AccountPrincipal(\"123456789012\") },\n    Resources = new [] { domain.DomainArn, $\"{domain.domainArn}/*\" }\n}),\nnew PolicyStatement(new PolicyStatementProps {\n    Actions = new [] { \"es:ESHttpGet\" },\n    Effect = Effect.ALLOW,\n    Principals = new [] { new AccountPrincipal(\"123456789012\") },\n    Resources = new [] { $\"{domain.domainArn}/_all/_settings\", $\"{domain.domainArn}/_cluster/stats\", $\"{domain.domainArn}/index-name*/_mapping/type-name\", $\"{domain.domainArn}/roletest*/_mapping/roletest\", $\"{domain.domainArn}/_nodes\", $\"{domain.domainArn}/_nodes/stats\", $\"{domain.domainArn}/_nodes/*/stats\", $\"{domain.domainArn}/_stats\", $\"{domain.domainArn}/index-name*/_stats\", $\"{domain.domainArn}/roletest*/_stat\" }\n}));",
          "version": "1"
        },
        "java": {
          "source": "Domain domain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_1)\n        .build();\n\ndomain.addAccessPolicies(\nPolicyStatement.Builder.create()\n        .actions(List.of(\"es:ESHttpPost\", \"es:ESHttpPut\"))\n        .effect(Effect.ALLOW)\n        .principals(List.of(new AccountPrincipal(\"123456789012\")))\n        .resources(List.of(domain.getDomainArn(), String.format(\"%s/*\", domain.getDomainArn())))\n        .build(),\nPolicyStatement.Builder.create()\n        .actions(List.of(\"es:ESHttpGet\"))\n        .effect(Effect.ALLOW)\n        .principals(List.of(new AccountPrincipal(\"123456789012\")))\n        .resources(List.of(String.format(\"%s/_all/_settings\", domain.getDomainArn()), String.format(\"%s/_cluster/stats\", domain.getDomainArn()), String.format(\"%s/index-name*/_mapping/type-name\", domain.getDomainArn()), String.format(\"%s/roletest*/_mapping/roletest\", domain.getDomainArn()), String.format(\"%s/_nodes\", domain.getDomainArn()), String.format(\"%s/_nodes/stats\", domain.getDomainArn()), String.format(\"%s/_nodes/*/stats\", domain.getDomainArn()), String.format(\"%s/_stats\", domain.getDomainArn()), String.format(\"%s/index-name*/_stats\", domain.getDomainArn()), String.format(\"%s/roletest*/_stat\", domain.getDomainArn())))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "domain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_1(),\n})\n\ndomain.addAccessPolicies(\niam.NewPolicyStatement(&policyStatementProps{\n\tactions: []*string{\n\t\tjsii.String(\"es:ESHttpPost\"),\n\t\tjsii.String(\"es:ESHttpPut\"),\n\t},\n\teffect: iam.effect_ALLOW,\n\tprincipals: []iPrincipal{\n\t\tiam.NewAccountPrincipal(jsii.String(\"123456789012\")),\n\t},\n\tresources: []*string{\n\t\tdomain.domainArn,\n\t\tfmt.Sprintf(\"%v/*\", domain.domainArn),\n\t},\n}),\niam.NewPolicyStatement(&policyStatementProps{\n\tactions: []*string{\n\t\tjsii.String(\"es:ESHttpGet\"),\n\t},\n\teffect: iam.*effect_ALLOW,\n\tprincipals: []*iPrincipal{\n\t\tiam.NewAccountPrincipal(jsii.String(\"123456789012\")),\n\t},\n\tresources: []*string{\n\t\tfmt.Sprintf(\"%v/_all/_settings\", domain.domainArn),\n\t\tfmt.Sprintf(\"%v/_cluster/stats\", domain.domainArn),\n\t\tfmt.Sprintf(\"%v/index-name*/_mapping/type-name\", domain.domainArn),\n\t\tfmt.Sprintf(\"%v/roletest*/_mapping/roletest\", domain.domainArn),\n\t\tfmt.Sprintf(\"%v/_nodes\", domain.domainArn),\n\t\tfmt.Sprintf(\"%v/_nodes/stats\", domain.domainArn),\n\t\tfmt.Sprintf(\"%v/_nodes/*/stats\", domain.domainArn),\n\t\tfmt.Sprintf(\"%v/_stats\", domain.domainArn),\n\t\tfmt.Sprintf(\"%v/index-name*/_stats\", domain.domainArn),\n\t\tfmt.Sprintf(\"%v/roletest*/_stat\", domain.domainArn),\n\t},\n}))",
          "version": "1"
        },
        "$": {
          "source": "const domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n});\n\ndomain.addAccessPolicies(\n  new iam.PolicyStatement({\n    actions: ['es:ESHttpPost', 'es:ESHttpPut'],\n    effect: iam.Effect.ALLOW,\n    principals: [new iam.AccountPrincipal('123456789012')],\n    resources: [domain.domainArn, `${domain.domainArn}/*`],\n  }),\n  new iam.PolicyStatement({\n    actions: ['es:ESHttpGet'],\n    effect: iam.Effect.ALLOW,\n    principals: [new iam.AccountPrincipal('123456789012')],\n    resources: [\n      `${domain.domainArn}/_all/_settings`,\n      `${domain.domainArn}/_cluster/stats`,\n      `${domain.domainArn}/index-name*/_mapping/type-name`,\n      `${domain.domainArn}/roletest*/_mapping/roletest`,\n      `${domain.domainArn}/_nodes`,\n      `${domain.domainArn}/_nodes/stats`,\n      `${domain.domainArn}/_nodes/*/stats`,\n      `${domain.domainArn}/_stats`,\n      `${domain.domainArn}/index-name*/_stats`,\n      `${domain.domainArn}/roletest*/_stat`,\n    ],\n  }),\n);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 250
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.Domain#addAccessPolicies",
        "@aws-cdk/aws-elasticsearch.Domain#domainArn",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_1",
        "@aws-cdk/aws-iam.AccountPrincipal",
        "@aws-cdk/aws-iam.Effect",
        "@aws-cdk/aws-iam.Effect#ALLOW",
        "@aws-cdk/aws-iam.PolicyStatement",
        "@aws-cdk/aws-iam.PolicyStatementProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n});\n\ndomain.addAccessPolicies(\n  new iam.PolicyStatement({\n    actions: ['es:ESHttpPost', 'es:ESHttpPut'],\n    effect: iam.Effect.ALLOW,\n    principals: [new iam.AccountPrincipal('123456789012')],\n    resources: [domain.domainArn, `${domain.domainArn}/*`],\n  }),\n  new iam.PolicyStatement({\n    actions: ['es:ESHttpGet'],\n    effect: iam.Effect.ALLOW,\n    principals: [new iam.AccountPrincipal('123456789012')],\n    resources: [\n      `${domain.domainArn}/_all/_settings`,\n      `${domain.domainArn}/_cluster/stats`,\n      `${domain.domainArn}/index-name*/_mapping/type-name`,\n      `${domain.domainArn}/roletest*/_mapping/roletest`,\n      `${domain.domainArn}/_nodes`,\n      `${domain.domainArn}/_nodes/stats`,\n      `${domain.domainArn}/_nodes/*/stats`,\n      `${domain.domainArn}/_stats`,\n      `${domain.domainArn}/index-name*/_stats`,\n      `${domain.domainArn}/roletest*/_stat`,\n    ],\n  }),\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "15": 11,
        "17": 11,
        "75": 55,
        "104": 1,
        "192": 6,
        "193": 3,
        "194": 24,
        "196": 1,
        "197": 5,
        "211": 11,
        "221": 11,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 9
      },
      "fqnsFingerprint": "3dad3a1975a0d81ff7206952fdedc1770aca83e30bf448f775b160b68f99f589"
    },
    "56b04620fa301b763d04785748b8878a06332b10887d16166ec1d54fe2a5cd3b": {
      "translations": {
        "python": {
          "source": "domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_1,\n    enforce_https=True,\n    node_to_node_encryption=True,\n    encryption_at_rest=es.EncryptionAtRestOptions(\n        enabled=True\n    ),\n    fine_grained_access_control=es.AdvancedSecurityOptions(\n        master_user_name=\"master-user\"\n    ),\n    logging=es.LoggingOptions(\n        audit_log_enabled=True,\n        slow_search_log_enabled=True,\n        app_log_enabled=True,\n        slow_index_log_enabled=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Domain domain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_1,\n    EnforceHttps = true,\n    NodeToNodeEncryption = true,\n    EncryptionAtRest = new EncryptionAtRestOptions {\n        Enabled = true\n    },\n    FineGrainedAccessControl = new AdvancedSecurityOptions {\n        MasterUserName = \"master-user\"\n    },\n    Logging = new LoggingOptions {\n        AuditLogEnabled = true,\n        SlowSearchLogEnabled = true,\n        AppLogEnabled = true,\n        SlowIndexLogEnabled = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain domain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_1)\n        .enforceHttps(true)\n        .nodeToNodeEncryption(true)\n        .encryptionAtRest(EncryptionAtRestOptions.builder()\n                .enabled(true)\n                .build())\n        .fineGrainedAccessControl(AdvancedSecurityOptions.builder()\n                .masterUserName(\"master-user\")\n                .build())\n        .logging(LoggingOptions.builder()\n                .auditLogEnabled(true)\n                .slowSearchLogEnabled(true)\n                .appLogEnabled(true)\n                .slowIndexLogEnabled(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "domain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_1(),\n\tenforceHttps: jsii.Boolean(true),\n\tnodeToNodeEncryption: jsii.Boolean(true),\n\tencryptionAtRest: &encryptionAtRestOptions{\n\t\tenabled: jsii.Boolean(true),\n\t},\n\tfineGrainedAccessControl: &advancedSecurityOptions{\n\t\tmasterUserName: jsii.String(\"master-user\"),\n\t},\n\tlogging: &loggingOptions{\n\t\tauditLogEnabled: jsii.Boolean(true),\n\t\tslowSearchLogEnabled: jsii.Boolean(true),\n\t\tappLogEnabled: jsii.Boolean(true),\n\t\tslowIndexLogEnabled: jsii.Boolean(true),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  enforceHttps: true,\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n  fineGrainedAccessControl: {\n    masterUserName: 'master-user',\n  },\n  logging: {\n    auditLogEnabled: true,\n    slowSearchLogEnabled: true,\n    appLogEnabled: true,\n    slowIndexLogEnabled: true,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 286
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.AdvancedSecurityOptions",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_1",
        "@aws-cdk/aws-elasticsearch.EncryptionAtRestOptions",
        "@aws-cdk/aws-elasticsearch.LoggingOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  enforceHttps: true,\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n  fineGrainedAccessControl: {\n    masterUserName: 'master-user',\n  },\n  logging: {\n    auditLogEnabled: true,\n    slowSearchLogEnabled: true,\n    appLogEnabled: true,\n    slowIndexLogEnabled: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 18,
        "104": 1,
        "106": 7,
        "193": 4,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 12
      },
      "fqnsFingerprint": "7c036dadd9cc92c2e425af21f378d0f2b7c8d30b3ddbbe8e50dc955b7af15bca"
    },
    "7e5002fcd03cd526c1e703c749e89513c96ab9598b92c3e644bcf9c725942877": {
      "translations": {
        "python": {
          "source": "domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_10,\n    capacity=es.CapacityConfig(\n        master_nodes=2,\n        warm_nodes=2,\n        warm_instance_type=\"ultrawarm1.medium.elasticsearch\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Domain domain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_10,\n    Capacity = new CapacityConfig {\n        MasterNodes = 2,\n        WarmNodes = 2,\n        WarmInstanceType = \"ultrawarm1.medium.elasticsearch\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain domain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_10)\n        .capacity(CapacityConfig.builder()\n                .masterNodes(2)\n                .warmNodes(2)\n                .warmInstanceType(\"ultrawarm1.medium.elasticsearch\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "domain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_10(),\n\tcapacity: &capacityConfig{\n\t\tmasterNodes: jsii.Number(2),\n\t\twarmNodes: jsii.Number(2),\n\t\twarmInstanceType: jsii.String(\"ultrawarm1.medium.elasticsearch\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_10,\n  capacity: {\n    masterNodes: 2,\n    warmNodes: 2,\n    warmInstanceType: 'ultrawarm1.medium.elasticsearch',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 310
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CapacityConfig",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_10",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_10,\n  capacity: {\n    masterNodes: 2,\n    warmNodes: 2,\n    warmInstanceType: 'ultrawarm1.medium.elasticsearch',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 11,
        "104": 1,
        "193": 2,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 5
      },
      "fqnsFingerprint": "8e6be72fcef3618b68c3b13e1218d323adace7e920cbc45791acfa8e409232be"
    },
    "a9dbe98a6662a8925575e38e7b15aadf6b06f72f3073860ad7e4bb0d8c09ad4c": {
      "translations": {
        "python": {
          "source": "es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_7,\n    custom_endpoint=es.CustomEndpointOptions(\n        domain_name=\"search.example.com\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_7,\n    CustomEndpoint = new CustomEndpointOptions {\n        DomainName = \"search.example.com\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_7)\n        .customEndpoint(CustomEndpointOptions.builder()\n                .domainName(\"search.example.com\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_7(),\n\tcustomEndpoint: &customEndpointOptions{\n\t\tdomainName: jsii.String(\"search.example.com\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_7,\n  customEndpoint: {\n    domainName: 'search.example.com',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 325
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CustomEndpointOptions",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_7",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_7,\n  customEndpoint: {\n    domainName: 'search.example.com',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 8,
        "104": 1,
        "193": 2,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 3
      },
      "fqnsFingerprint": "b2cc0445ca7d4da3bba2881509b2445db740b812011a50ace5a0a46e1aa7bc9a"
    },
    "587e0dda5ce69325405d9b5c9d043250984095ff7368154e22ef930224c89ff6": {
      "translations": {
        "python": {
          "source": "es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_7,\n    advanced_options={\n        \"rest.action.multi.allow_explicit_index\": \"false\",\n        \"indices.fielddata.cache.size\": \"25\",\n        \"indices.query.bool.max_clause_count\": \"2048\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_7,\n    AdvancedOptions = new Dictionary<string, string> {\n        { \"rest.action.multi.allow_explicit_index\", \"false\" },\n        { \"indices.fielddata.cache.size\", \"25\" },\n        { \"indices.query.bool.max_clause_count\", \"2048\" }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_7)\n        .advancedOptions(Map.of(\n                \"rest.action.multi.allow_explicit_index\", \"false\",\n                \"indices.fielddata.cache.size\", \"25\",\n                \"indices.query.bool.max_clause_count\", \"2048\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_7(),\n\tadvancedOptions: map[string]*string{\n\t\t\"rest.action.multi.allow_explicit_index\": jsii.String(\"false\"),\n\t\t\"indices.fielddata.cache.size\": jsii.String(\"25\"),\n\t\t\"indices.query.bool.max_clause_count\": jsii.String(\"2048\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_7,\n  advancedOptions: {\n    'rest.action.multi.allow_explicit_index': 'false',\n    'indices.fielddata.cache.size': '25',\n    'indices.query.bool.max_clause_count': '2048',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 342
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_7",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_7,\n  advancedOptions: {\n    'rest.action.multi.allow_explicit_index': 'false',\n    'indices.fielddata.cache.size': '25',\n    'indices.query.bool.max_clause_count': '2048',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 7,
        "75": 7,
        "104": 1,
        "193": 2,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 5
      },
      "fqnsFingerprint": "e307c873631740db7730c185997514b0f754e80a670f234876ad118a3f6805cb"
    },
    "dde7a64624d82407acfbbcaf2a2fdc83861d720d09f853b9d631374a3fd2b162": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_elasticsearch as es\nfrom aws_cdk.aws_elasticsearch import Domain",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Elasticsearch;",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.elasticsearch.*;\nimport software.amazon.awscdk.services.elasticsearch.Domain;",
          "version": "1"
        },
        "go": {
          "source": "import es \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\nimport \"github.com/aws-samples/dummy/awscdkawselasticsearch\"",
          "version": "1"
        },
        "$": {
          "source": "import * as es from '@aws-cdk/aws-elasticsearch';\nimport { Domain } from '@aws-cdk/aws-elasticsearch';",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 364
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "import * as es from '@aws-cdk/aws-elasticsearch';\nimport { Domain } from '@aws-cdk/aws-elasticsearch';",
      "syntaxKindCounter": {
        "10": 2,
        "75": 2,
        "254": 2,
        "255": 2,
        "256": 1,
        "257": 1,
        "258": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "b3f622e4ec12b760925eba44a851ecb574086fd2f14f4236d20e6dfeed0fea02": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_opensearchservice as opensearch\nfrom aws_cdk.aws_opensearchservice import Domain",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.OpenSearchService;",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.opensearchservice.*;\nimport software.amazon.awscdk.services.opensearchservice.Domain;",
          "version": "1"
        },
        "go": {
          "source": "import opensearch \"github.com/aws-samples/dummy/awscdkawsopensearchservice\"\nimport \"github.com/aws-samples/dummy/awscdkawsopensearchservice\"",
          "version": "1"
        },
        "$": {
          "source": "import * as opensearch from '@aws-cdk/aws-opensearchservice';\nimport { Domain } from '@aws-cdk/aws-opensearchservice';",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 371
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "import * as opensearch from '@aws-cdk/aws-opensearchservice';\nimport { Domain } from '@aws-cdk/aws-opensearchservice';",
      "syntaxKindCounter": {
        "10": 2,
        "75": 2,
        "254": 2,
        "255": 2,
        "256": 1,
        "257": 1,
        "258": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "36357fdcc522e951c674cb46f40a6a33d2c8b3d2b126e7f427fe197771dc6a82": {
      "translations": {
        "python": {
          "source": "version = es.ElasticsearchVersion.V7_1",
          "version": "2"
        },
        "csharp": {
          "source": "ElasticsearchVersion version = ElasticsearchVersion.V7_1;",
          "version": "1"
        },
        "java": {
          "source": "ElasticsearchVersion version = ElasticsearchVersion.V7_1;",
          "version": "1"
        },
        "go": {
          "source": "version := es.elasticsearchVersion_V7_1()",
          "version": "1"
        },
        "$": {
          "source": "const version = es.ElasticsearchVersion.V7_1;",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 379
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_1"
      ],
      "fullSource": "import * as cdk from '@aws-cdk/core';\nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as opensearch from '@aws-cdk/aws-opensearchservice';\n\ndeclare const role: iam.IRole;\ndeclare const elasticsearchVersion: es.ElasticsearchVersion;\ndeclare const openSearchVersion: opensearch.EngineVersion;\n\nclass Fixture extends cdk.Construct {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst version = es.ElasticsearchVersion.V7_1;\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "75": 4,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1
      },
      "fqnsFingerprint": "5bd8ee5d95aeec558b36f46dbd9fc761df679f798a7e5341d7f9f76a60b57165"
    },
    "f1bdfc207d0e788c841c0486e2b92032d10df21f3243cfe5a687c50c1198fc13": {
      "translations": {
        "python": {
          "source": "version = opensearch.EngineVersion.ELASTICSEARCH_7_1",
          "version": "2"
        },
        "csharp": {
          "source": "EngineVersion version = EngineVersion.ELASTICSEARCH_7_1;",
          "version": "1"
        },
        "java": {
          "source": "EngineVersion version = EngineVersion.ELASTICSEARCH_7_1;",
          "version": "1"
        },
        "go": {
          "source": "version := opensearch.engineVersion_ELASTICSEARCH_7_1()",
          "version": "1"
        },
        "$": {
          "source": "const version = opensearch.EngineVersion.ELASTICSEARCH_7_1;",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 385
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-opensearchservice.EngineVersion",
        "@aws-cdk/aws-opensearchservice.EngineVersion#ELASTICSEARCH_7_1"
      ],
      "fullSource": "import * as cdk from '@aws-cdk/core';\nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as opensearch from '@aws-cdk/aws-opensearchservice';\n\ndeclare const role: iam.IRole;\ndeclare const elasticsearchVersion: es.ElasticsearchVersion;\ndeclare const openSearchVersion: opensearch.EngineVersion;\n\nclass Fixture extends cdk.Construct {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst version = opensearch.EngineVersion.ELASTICSEARCH_7_1;\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "75": 4,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1
      },
      "fqnsFingerprint": "03513a979e5d191a8d938f974dad39faf32e1b04593ff4ca233faafd3c4df62d"
    },
    "5ecc9da8738bbb082e0a94bceb30eb8ece69b37066159a5d1635a88907d8c560": {
      "translations": {
        "python": {
          "source": "es.Domain(self, \"Domain\",\n    cognito_kibana_auth=es.CognitoOptions(\n        identity_pool_id=\"test-identity-pool-id\",\n        user_pool_id=\"test-user-pool-id\",\n        role=role\n    ),\n    version=elasticsearch_version\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Domain(this, \"Domain\", new DomainProps {\n    CognitoKibanaAuth = new CognitoOptions {\n        IdentityPoolId = \"test-identity-pool-id\",\n        UserPoolId = \"test-user-pool-id\",\n        Role = role\n    },\n    Version = elasticsearchVersion\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain.Builder.create(this, \"Domain\")\n        .cognitoKibanaAuth(CognitoOptions.builder()\n                .identityPoolId(\"test-identity-pool-id\")\n                .userPoolId(\"test-user-pool-id\")\n                .role(role)\n                .build())\n        .version(elasticsearchVersion)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tcognitoKibanaAuth: &cognitoOptions{\n\t\tidentityPoolId: jsii.String(\"test-identity-pool-id\"),\n\t\tuserPoolId: jsii.String(\"test-user-pool-id\"),\n\t\trole: role,\n\t},\n\tversion: elasticsearchVersion,\n})",
          "version": "1"
        },
        "$": {
          "source": "new es.Domain(this, 'Domain', {\n  cognitoKibanaAuth: {\n    identityPoolId: 'test-identity-pool-id',\n    userPoolId: 'test-user-pool-id',\n    role: role,\n  },\n  version: elasticsearchVersion,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 392
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CognitoOptions",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-iam.IRole",
        "constructs.Construct"
      ],
      "fullSource": "import * as cdk from '@aws-cdk/core';\nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as opensearch from '@aws-cdk/aws-opensearchservice';\n\ndeclare const role: iam.IRole;\ndeclare const elasticsearchVersion: es.ElasticsearchVersion;\ndeclare const openSearchVersion: opensearch.EngineVersion;\n\nclass Fixture extends cdk.Construct {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew es.Domain(this, 'Domain', {\n  cognitoKibanaAuth: {\n    identityPoolId: 'test-identity-pool-id',\n    userPoolId: 'test-user-pool-id',\n    role: role,\n  },\n  version: elasticsearchVersion,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "104": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 5
      },
      "fqnsFingerprint": "3dddb059f05193b411931cfd1e463acd6b61a5a59aedd52fe69e3b1ed9aa8cc1"
    },
    "a180534c220da9d22b8550227513e766876419a87ffbbdc47febc93b9d3968a6": {
      "translations": {
        "python": {
          "source": "opensearch.Domain(self, \"Domain\",\n    cognito_dashboards_auth=opensearch.CognitoOptions(\n        identity_pool_id=\"test-identity-pool-id\",\n        user_pool_id=\"test-user-pool-id\",\n        role=role\n    ),\n    version=open_search_version\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Domain(this, \"Domain\", new DomainProps {\n    CognitoDashboardsAuth = new CognitoOptions {\n        IdentityPoolId = \"test-identity-pool-id\",\n        UserPoolId = \"test-user-pool-id\",\n        Role = role\n    },\n    Version = openSearchVersion\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain.Builder.create(this, \"Domain\")\n        .cognitoDashboardsAuth(CognitoOptions.builder()\n                .identityPoolId(\"test-identity-pool-id\")\n                .userPoolId(\"test-user-pool-id\")\n                .role(role)\n                .build())\n        .version(openSearchVersion)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "opensearch.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tcognitoDashboardsAuth: &cognitoOptions{\n\t\tidentityPoolId: jsii.String(\"test-identity-pool-id\"),\n\t\tuserPoolId: jsii.String(\"test-user-pool-id\"),\n\t\trole: role,\n\t},\n\tversion: openSearchVersion,\n})",
          "version": "1"
        },
        "$": {
          "source": "new opensearch.Domain(this, 'Domain', {\n  cognitoDashboardsAuth: {\n    identityPoolId: 'test-identity-pool-id',\n    userPoolId: 'test-user-pool-id',\n    role: role,\n  },\n  version: openSearchVersion,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 405
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IRole",
        "@aws-cdk/aws-opensearchservice.CognitoOptions",
        "@aws-cdk/aws-opensearchservice.Domain",
        "@aws-cdk/aws-opensearchservice.DomainProps",
        "@aws-cdk/aws-opensearchservice.EngineVersion",
        "constructs.Construct"
      ],
      "fullSource": "import * as cdk from '@aws-cdk/core';\nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as opensearch from '@aws-cdk/aws-opensearchservice';\n\ndeclare const role: iam.IRole;\ndeclare const elasticsearchVersion: es.ElasticsearchVersion;\ndeclare const openSearchVersion: opensearch.EngineVersion;\n\nclass Fixture extends cdk.Construct {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew opensearch.Domain(this, 'Domain', {\n  cognitoDashboardsAuth: {\n    identityPoolId: 'test-identity-pool-id',\n    userPoolId: 'test-user-pool-id',\n    role: role,\n  },\n  version: openSearchVersion,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "104": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 5
      },
      "fqnsFingerprint": "977ef3cc41a46591f363171157f3c013f9a4876376a32a019e566ba1221abd6f"
    },
    "8eaca816bd6abe505e8444cfb7c1c589083d9b7963a5271d129baef198adf47b": {
      "translations": {
        "python": {
          "source": "es.Domain(self, \"Domain\",\n    capacity=es.CapacityConfig(\n        master_node_instance_type=\"r5.large.elasticsearch\"\n    ),\n    version=elasticsearch_version\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Domain(this, \"Domain\", new DomainProps {\n    Capacity = new CapacityConfig {\n        MasterNodeInstanceType = \"r5.large.elasticsearch\"\n    },\n    Version = elasticsearchVersion\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain.Builder.create(this, \"Domain\")\n        .capacity(CapacityConfig.builder()\n                .masterNodeInstanceType(\"r5.large.elasticsearch\")\n                .build())\n        .version(elasticsearchVersion)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tcapacity: &capacityConfig{\n\t\tmasterNodeInstanceType: jsii.String(\"r5.large.elasticsearch\"),\n\t},\n\tversion: elasticsearchVersion,\n})",
          "version": "1"
        },
        "$": {
          "source": "new es.Domain(this, 'Domain', {\n  capacity: {\n    masterNodeInstanceType: 'r5.large.elasticsearch',\n  },\n  version: elasticsearchVersion,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 419
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CapacityConfig",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "constructs.Construct"
      ],
      "fullSource": "import * as cdk from '@aws-cdk/core';\nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as opensearch from '@aws-cdk/aws-opensearchservice';\n\ndeclare const role: iam.IRole;\ndeclare const elasticsearchVersion: es.ElasticsearchVersion;\ndeclare const openSearchVersion: opensearch.EngineVersion;\n\nclass Fixture extends cdk.Construct {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew es.Domain(this, 'Domain', {\n  capacity: {\n    masterNodeInstanceType: 'r5.large.elasticsearch',\n  },\n  version: elasticsearchVersion,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "104": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 3
      },
      "fqnsFingerprint": "0835d71938edb52bf8313de3a028e77827924cd3d3aff53d2287cb43f7aba1e6"
    },
    "350b5321f0857ea54dee742e2287bcac604ccb19d9fd9d3ebfb8ade8be2219d5": {
      "translations": {
        "python": {
          "source": "opensearch.Domain(self, \"Domain\",\n    capacity=opensearch.CapacityConfig(\n        master_node_instance_type=\"r5.large.search\"\n    ),\n    version=open_search_version\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Domain(this, \"Domain\", new DomainProps {\n    Capacity = new CapacityConfig {\n        MasterNodeInstanceType = \"r5.large.search\"\n    },\n    Version = openSearchVersion\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain.Builder.create(this, \"Domain\")\n        .capacity(CapacityConfig.builder()\n                .masterNodeInstanceType(\"r5.large.search\")\n                .build())\n        .version(openSearchVersion)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "opensearch.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tcapacity: &capacityConfig{\n\t\tmasterNodeInstanceType: jsii.String(\"r5.large.search\"),\n\t},\n\tversion: openSearchVersion,\n})",
          "version": "1"
        },
        "$": {
          "source": "new opensearch.Domain(this, 'Domain', {\n  capacity: {\n    masterNodeInstanceType: 'r5.large.search',\n  },\n  version: openSearchVersion,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticsearch"
        },
        "field": {
          "field": "markdown",
          "line": 430
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-opensearchservice.CapacityConfig",
        "@aws-cdk/aws-opensearchservice.Domain",
        "@aws-cdk/aws-opensearchservice.DomainProps",
        "@aws-cdk/aws-opensearchservice.EngineVersion",
        "constructs.Construct"
      ],
      "fullSource": "import * as cdk from '@aws-cdk/core';\nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as opensearch from '@aws-cdk/aws-opensearchservice';\n\ndeclare const role: iam.IRole;\ndeclare const elasticsearchVersion: es.ElasticsearchVersion;\ndeclare const openSearchVersion: opensearch.EngineVersion;\n\nclass Fixture extends cdk.Construct {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew opensearch.Domain(this, 'Domain', {\n  capacity: {\n    masterNodeInstanceType: 'r5.large.search',\n  },\n  version: openSearchVersion,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "104": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 3
      },
      "fqnsFingerprint": "460a3d954c8a48f93661c3e7b665aabaaa540b9b4b7d2e688dcecb27d049c246"
    },
    "a7e391d97f409945af0c6e365fea752040fe399ab7595b81a813f73b8fd14304": {
      "translations": {
        "python": {
          "source": "domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_1,\n    enforce_https=True,\n    node_to_node_encryption=True,\n    encryption_at_rest=es.EncryptionAtRestOptions(\n        enabled=True\n    ),\n    fine_grained_access_control=es.AdvancedSecurityOptions(\n        master_user_name=\"master-user\"\n    )\n)\n\nmaster_user_password = domain.master_user_password",
          "version": "2"
        },
        "csharp": {
          "source": "Domain domain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_1,\n    EnforceHttps = true,\n    NodeToNodeEncryption = true,\n    EncryptionAtRest = new EncryptionAtRestOptions {\n        Enabled = true\n    },\n    FineGrainedAccessControl = new AdvancedSecurityOptions {\n        MasterUserName = \"master-user\"\n    }\n});\n\nSecretValue? masterUserPassword = domain.MasterUserPassword;",
          "version": "1"
        },
        "java": {
          "source": "Domain domain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_1)\n        .enforceHttps(true)\n        .nodeToNodeEncryption(true)\n        .encryptionAtRest(EncryptionAtRestOptions.builder()\n                .enabled(true)\n                .build())\n        .fineGrainedAccessControl(AdvancedSecurityOptions.builder()\n                .masterUserName(\"master-user\")\n                .build())\n        .build();\n\nSecretValue masterUserPassword = domain.getMasterUserPassword();",
          "version": "1"
        },
        "go": {
          "source": "domain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_1(),\n\tenforceHttps: jsii.Boolean(true),\n\tnodeToNodeEncryption: jsii.Boolean(true),\n\tencryptionAtRest: &encryptionAtRestOptions{\n\t\tenabled: jsii.Boolean(true),\n\t},\n\tfineGrainedAccessControl: &advancedSecurityOptions{\n\t\tmasterUserName: jsii.String(\"master-user\"),\n\t},\n})\n\nmasterUserPassword := domain.masterUserPassword",
          "version": "1"
        },
        "$": {
          "source": "const domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  enforceHttps: true,\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n  fineGrainedAccessControl: {\n    masterUserName: 'master-user',\n  },\n});\n\nconst masterUserPassword = domain.masterUserPassword;",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.AdvancedSecurityOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.AdvancedSecurityOptions",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.Domain#masterUserPassword",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_1",
        "@aws-cdk/aws-elasticsearch.EncryptionAtRestOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  enforceHttps: true,\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n  fineGrainedAccessControl: {\n    masterUserName: 'master-user',\n  },\n});\n\nconst masterUserPassword = domain.masterUserPassword;\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 16,
        "104": 1,
        "106": 3,
        "193": 3,
        "194": 4,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 7
      },
      "fqnsFingerprint": "6093278a5fb2437de2a0a0abaff995e75bb23c5f163d7d0a25151d34b91c576e"
    },
    "35b2b723656a0493802c39690384f2c85c1c692e5ffe44b28a3e4034d15824ec": {
      "translations": {
        "python": {
          "source": "domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_10,\n    capacity=es.CapacityConfig(\n        master_nodes=2,\n        warm_nodes=2,\n        warm_instance_type=\"ultrawarm1.medium.elasticsearch\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Domain domain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_10,\n    Capacity = new CapacityConfig {\n        MasterNodes = 2,\n        WarmNodes = 2,\n        WarmInstanceType = \"ultrawarm1.medium.elasticsearch\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain domain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_10)\n        .capacity(CapacityConfig.builder()\n                .masterNodes(2)\n                .warmNodes(2)\n                .warmInstanceType(\"ultrawarm1.medium.elasticsearch\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "domain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_10(),\n\tcapacity: &capacityConfig{\n\t\tmasterNodes: jsii.Number(2),\n\t\twarmNodes: jsii.Number(2),\n\t\twarmInstanceType: jsii.String(\"ultrawarm1.medium.elasticsearch\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_10,\n  capacity: {\n    masterNodes: 2,\n    warmNodes: 2,\n    warmInstanceType: 'ultrawarm1.medium.elasticsearch',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CapacityConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CapacityConfig",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_10",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_10,\n  capacity: {\n    masterNodes: 2,\n    warmNodes: 2,\n    warmInstanceType: 'ultrawarm1.medium.elasticsearch',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 11,
        "104": 1,
        "193": 2,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 5
      },
      "fqnsFingerprint": "8e6be72fcef3618b68c3b13e1218d323adace7e920cbc45791acfa8e409232be"
    },
    "7befdc1e648164409af52cdbf0548b826d3522629cb4cc1d2a78078f402b2ded": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\n# access_policies: Any\n\ncfn_domain = elasticsearch.CfnDomain(self, \"MyCfnDomain\",\n    access_policies=access_policies,\n    advanced_options={\n        \"advanced_options_key\": \"advancedOptions\"\n    },\n    advanced_security_options=elasticsearch.CfnDomain.AdvancedSecurityOptionsInputProperty(\n        anonymous_auth_enabled=False,\n        enabled=False,\n        internal_user_database_enabled=False,\n        master_user_options=elasticsearch.CfnDomain.MasterUserOptionsProperty(\n            master_user_arn=\"masterUserArn\",\n            master_user_name=\"masterUserName\",\n            master_user_password=\"masterUserPassword\"\n        )\n    ),\n    cognito_options=elasticsearch.CfnDomain.CognitoOptionsProperty(\n        enabled=False,\n        identity_pool_id=\"identityPoolId\",\n        role_arn=\"roleArn\",\n        user_pool_id=\"userPoolId\"\n    ),\n    domain_endpoint_options=elasticsearch.CfnDomain.DomainEndpointOptionsProperty(\n        custom_endpoint=\"customEndpoint\",\n        custom_endpoint_certificate_arn=\"customEndpointCertificateArn\",\n        custom_endpoint_enabled=False,\n        enforce_https=False,\n        tls_security_policy=\"tlsSecurityPolicy\"\n    ),\n    domain_name=\"domainName\",\n    ebs_options=elasticsearch.CfnDomain.EBSOptionsProperty(\n        ebs_enabled=False,\n        iops=123,\n        volume_size=123,\n        volume_type=\"volumeType\"\n    ),\n    elasticsearch_cluster_config=elasticsearch.CfnDomain.ElasticsearchClusterConfigProperty(\n        cold_storage_options=elasticsearch.CfnDomain.ColdStorageOptionsProperty(\n            enabled=False\n        ),\n        dedicated_master_count=123,\n        dedicated_master_enabled=False,\n        dedicated_master_type=\"dedicatedMasterType\",\n        instance_count=123,\n        instance_type=\"instanceType\",\n        warm_count=123,\n        warm_enabled=False,\n        warm_type=\"warmType\",\n        zone_awareness_config=elasticsearch.CfnDomain.ZoneAwarenessConfigProperty(\n            availability_zone_count=123\n        ),\n        zone_awareness_enabled=False\n    ),\n    elasticsearch_version=\"elasticsearchVersion\",\n    encryption_at_rest_options=elasticsearch.CfnDomain.EncryptionAtRestOptionsProperty(\n        enabled=False,\n        kms_key_id=\"kmsKeyId\"\n    ),\n    log_publishing_options={\n        \"log_publishing_options_key\": elasticsearch.CfnDomain.LogPublishingOptionProperty(\n            cloud_watch_logs_log_group_arn=\"cloudWatchLogsLogGroupArn\",\n            enabled=False\n        )\n    },\n    node_to_node_encryption_options=elasticsearch.CfnDomain.NodeToNodeEncryptionOptionsProperty(\n        enabled=False\n    ),\n    snapshot_options=elasticsearch.CfnDomain.SnapshotOptionsProperty(\n        automated_snapshot_start_hour=123\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    vpc_options=elasticsearch.CfnDomain.VPCOptionsProperty(\n        security_group_ids=[\"securityGroupIds\"],\n        subnet_ids=[\"subnetIds\"]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nvar accessPolicies;\n\nCfnDomain cfnDomain = new CfnDomain(this, \"MyCfnDomain\", new CfnDomainProps {\n    AccessPolicies = accessPolicies,\n    AdvancedOptions = new Dictionary<string, string> {\n        { \"advancedOptionsKey\", \"advancedOptions\" }\n    },\n    AdvancedSecurityOptions = new AdvancedSecurityOptionsInputProperty {\n        AnonymousAuthEnabled = false,\n        Enabled = false,\n        InternalUserDatabaseEnabled = false,\n        MasterUserOptions = new MasterUserOptionsProperty {\n            MasterUserArn = \"masterUserArn\",\n            MasterUserName = \"masterUserName\",\n            MasterUserPassword = \"masterUserPassword\"\n        }\n    },\n    CognitoOptions = new CognitoOptionsProperty {\n        Enabled = false,\n        IdentityPoolId = \"identityPoolId\",\n        RoleArn = \"roleArn\",\n        UserPoolId = \"userPoolId\"\n    },\n    DomainEndpointOptions = new DomainEndpointOptionsProperty {\n        CustomEndpoint = \"customEndpoint\",\n        CustomEndpointCertificateArn = \"customEndpointCertificateArn\",\n        CustomEndpointEnabled = false,\n        EnforceHttps = false,\n        TlsSecurityPolicy = \"tlsSecurityPolicy\"\n    },\n    DomainName = \"domainName\",\n    EbsOptions = new EBSOptionsProperty {\n        EbsEnabled = false,\n        Iops = 123,\n        VolumeSize = 123,\n        VolumeType = \"volumeType\"\n    },\n    ElasticsearchClusterConfig = new ElasticsearchClusterConfigProperty {\n        ColdStorageOptions = new ColdStorageOptionsProperty {\n            Enabled = false\n        },\n        DedicatedMasterCount = 123,\n        DedicatedMasterEnabled = false,\n        DedicatedMasterType = \"dedicatedMasterType\",\n        InstanceCount = 123,\n        InstanceType = \"instanceType\",\n        WarmCount = 123,\n        WarmEnabled = false,\n        WarmType = \"warmType\",\n        ZoneAwarenessConfig = new ZoneAwarenessConfigProperty {\n            AvailabilityZoneCount = 123\n        },\n        ZoneAwarenessEnabled = false\n    },\n    ElasticsearchVersion = \"elasticsearchVersion\",\n    EncryptionAtRestOptions = new EncryptionAtRestOptionsProperty {\n        Enabled = false,\n        KmsKeyId = \"kmsKeyId\"\n    },\n    LogPublishingOptions = new Dictionary<string, object> {\n        { \"logPublishingOptionsKey\", new LogPublishingOptionProperty {\n            CloudWatchLogsLogGroupArn = \"cloudWatchLogsLogGroupArn\",\n            Enabled = false\n        } }\n    },\n    NodeToNodeEncryptionOptions = new NodeToNodeEncryptionOptionsProperty {\n        Enabled = false\n    },\n    SnapshotOptions = new SnapshotOptionsProperty {\n        AutomatedSnapshotStartHour = 123\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    VpcOptions = new VPCOptionsProperty {\n        SecurityGroupIds = new [] { \"securityGroupIds\" },\n        SubnetIds = new [] { \"subnetIds\" }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nObject accessPolicies;\n\nCfnDomain cfnDomain = CfnDomain.Builder.create(this, \"MyCfnDomain\")\n        .accessPolicies(accessPolicies)\n        .advancedOptions(Map.of(\n                \"advancedOptionsKey\", \"advancedOptions\"))\n        .advancedSecurityOptions(AdvancedSecurityOptionsInputProperty.builder()\n                .anonymousAuthEnabled(false)\n                .enabled(false)\n                .internalUserDatabaseEnabled(false)\n                .masterUserOptions(MasterUserOptionsProperty.builder()\n                        .masterUserArn(\"masterUserArn\")\n                        .masterUserName(\"masterUserName\")\n                        .masterUserPassword(\"masterUserPassword\")\n                        .build())\n                .build())\n        .cognitoOptions(CognitoOptionsProperty.builder()\n                .enabled(false)\n                .identityPoolId(\"identityPoolId\")\n                .roleArn(\"roleArn\")\n                .userPoolId(\"userPoolId\")\n                .build())\n        .domainEndpointOptions(DomainEndpointOptionsProperty.builder()\n                .customEndpoint(\"customEndpoint\")\n                .customEndpointCertificateArn(\"customEndpointCertificateArn\")\n                .customEndpointEnabled(false)\n                .enforceHttps(false)\n                .tlsSecurityPolicy(\"tlsSecurityPolicy\")\n                .build())\n        .domainName(\"domainName\")\n        .ebsOptions(EBSOptionsProperty.builder()\n                .ebsEnabled(false)\n                .iops(123)\n                .volumeSize(123)\n                .volumeType(\"volumeType\")\n                .build())\n        .elasticsearchClusterConfig(ElasticsearchClusterConfigProperty.builder()\n                .coldStorageOptions(ColdStorageOptionsProperty.builder()\n                        .enabled(false)\n                        .build())\n                .dedicatedMasterCount(123)\n                .dedicatedMasterEnabled(false)\n                .dedicatedMasterType(\"dedicatedMasterType\")\n                .instanceCount(123)\n                .instanceType(\"instanceType\")\n                .warmCount(123)\n                .warmEnabled(false)\n                .warmType(\"warmType\")\n                .zoneAwarenessConfig(ZoneAwarenessConfigProperty.builder()\n                        .availabilityZoneCount(123)\n                        .build())\n                .zoneAwarenessEnabled(false)\n                .build())\n        .elasticsearchVersion(\"elasticsearchVersion\")\n        .encryptionAtRestOptions(EncryptionAtRestOptionsProperty.builder()\n                .enabled(false)\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .logPublishingOptions(Map.of(\n                \"logPublishingOptionsKey\", LogPublishingOptionProperty.builder()\n                        .cloudWatchLogsLogGroupArn(\"cloudWatchLogsLogGroupArn\")\n                        .enabled(false)\n                        .build()))\n        .nodeToNodeEncryptionOptions(NodeToNodeEncryptionOptionsProperty.builder()\n                .enabled(false)\n                .build())\n        .snapshotOptions(SnapshotOptionsProperty.builder()\n                .automatedSnapshotStartHour(123)\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .vpcOptions(VPCOptionsProperty.builder()\n                .securityGroupIds(List.of(\"securityGroupIds\"))\n                .subnetIds(List.of(\"subnetIds\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\nvar accessPolicies interface{}\n\ncfnDomain := elasticsearch.NewCfnDomain(this, jsii.String(\"MyCfnDomain\"), &cfnDomainProps{\n\taccessPolicies: accessPolicies,\n\tadvancedOptions: map[string]*string{\n\t\t\"advancedOptionsKey\": jsii.String(\"advancedOptions\"),\n\t},\n\tadvancedSecurityOptions: &advancedSecurityOptionsInputProperty{\n\t\tanonymousAuthEnabled: jsii.Boolean(false),\n\t\tenabled: jsii.Boolean(false),\n\t\tinternalUserDatabaseEnabled: jsii.Boolean(false),\n\t\tmasterUserOptions: &masterUserOptionsProperty{\n\t\t\tmasterUserArn: jsii.String(\"masterUserArn\"),\n\t\t\tmasterUserName: jsii.String(\"masterUserName\"),\n\t\t\tmasterUserPassword: jsii.String(\"masterUserPassword\"),\n\t\t},\n\t},\n\tcognitoOptions: &cognitoOptionsProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tidentityPoolId: jsii.String(\"identityPoolId\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\tuserPoolId: jsii.String(\"userPoolId\"),\n\t},\n\tdomainEndpointOptions: &domainEndpointOptionsProperty{\n\t\tcustomEndpoint: jsii.String(\"customEndpoint\"),\n\t\tcustomEndpointCertificateArn: jsii.String(\"customEndpointCertificateArn\"),\n\t\tcustomEndpointEnabled: jsii.Boolean(false),\n\t\tenforceHttps: jsii.Boolean(false),\n\t\ttlsSecurityPolicy: jsii.String(\"tlsSecurityPolicy\"),\n\t},\n\tdomainName: jsii.String(\"domainName\"),\n\tebsOptions: &eBSOptionsProperty{\n\t\tebsEnabled: jsii.Boolean(false),\n\t\tiops: jsii.Number(123),\n\t\tvolumeSize: jsii.Number(123),\n\t\tvolumeType: jsii.String(\"volumeType\"),\n\t},\n\telasticsearchClusterConfig: &elasticsearchClusterConfigProperty{\n\t\tcoldStorageOptions: &coldStorageOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tdedicatedMasterCount: jsii.Number(123),\n\t\tdedicatedMasterEnabled: jsii.Boolean(false),\n\t\tdedicatedMasterType: jsii.String(\"dedicatedMasterType\"),\n\t\tinstanceCount: jsii.Number(123),\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\twarmCount: jsii.Number(123),\n\t\twarmEnabled: jsii.Boolean(false),\n\t\twarmType: jsii.String(\"warmType\"),\n\t\tzoneAwarenessConfig: &zoneAwarenessConfigProperty{\n\t\t\tavailabilityZoneCount: jsii.Number(123),\n\t\t},\n\t\tzoneAwarenessEnabled: jsii.Boolean(false),\n\t},\n\telasticsearchVersion: jsii.String(\"elasticsearchVersion\"),\n\tencryptionAtRestOptions: &encryptionAtRestOptionsProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\tlogPublishingOptions: map[string]interface{}{\n\t\t\"logPublishingOptionsKey\": &LogPublishingOptionProperty{\n\t\t\t\"cloudWatchLogsLogGroupArn\": jsii.String(\"cloudWatchLogsLogGroupArn\"),\n\t\t\t\"enabled\": jsii.Boolean(false),\n\t\t},\n\t},\n\tnodeToNodeEncryptionOptions: &nodeToNodeEncryptionOptionsProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tsnapshotOptions: &snapshotOptionsProperty{\n\t\tautomatedSnapshotStartHour: jsii.Number(123),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tvpcOptions: &vPCOptionsProperty{\n\t\tsecurityGroupIds: []*string{\n\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t},\n\t\tsubnetIds: []*string{\n\t\t\tjsii.String(\"subnetIds\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n\ndeclare const accessPolicies: any;\nconst cfnDomain = new elasticsearch.CfnDomain(this, 'MyCfnDomain', /* all optional props */ {\n  accessPolicies: accessPolicies,\n  advancedOptions: {\n    advancedOptionsKey: 'advancedOptions',\n  },\n  advancedSecurityOptions: {\n    anonymousAuthEnabled: false,\n    enabled: false,\n    internalUserDatabaseEnabled: false,\n    masterUserOptions: {\n      masterUserArn: 'masterUserArn',\n      masterUserName: 'masterUserName',\n      masterUserPassword: 'masterUserPassword',\n    },\n  },\n  cognitoOptions: {\n    enabled: false,\n    identityPoolId: 'identityPoolId',\n    roleArn: 'roleArn',\n    userPoolId: 'userPoolId',\n  },\n  domainEndpointOptions: {\n    customEndpoint: 'customEndpoint',\n    customEndpointCertificateArn: 'customEndpointCertificateArn',\n    customEndpointEnabled: false,\n    enforceHttps: false,\n    tlsSecurityPolicy: 'tlsSecurityPolicy',\n  },\n  domainName: 'domainName',\n  ebsOptions: {\n    ebsEnabled: false,\n    iops: 123,\n    volumeSize: 123,\n    volumeType: 'volumeType',\n  },\n  elasticsearchClusterConfig: {\n    coldStorageOptions: {\n      enabled: false,\n    },\n    dedicatedMasterCount: 123,\n    dedicatedMasterEnabled: false,\n    dedicatedMasterType: 'dedicatedMasterType',\n    instanceCount: 123,\n    instanceType: 'instanceType',\n    warmCount: 123,\n    warmEnabled: false,\n    warmType: 'warmType',\n    zoneAwarenessConfig: {\n      availabilityZoneCount: 123,\n    },\n    zoneAwarenessEnabled: false,\n  },\n  elasticsearchVersion: 'elasticsearchVersion',\n  encryptionAtRestOptions: {\n    enabled: false,\n    kmsKeyId: 'kmsKeyId',\n  },\n  logPublishingOptions: {\n    logPublishingOptionsKey: {\n      cloudWatchLogsLogGroupArn: 'cloudWatchLogsLogGroupArn',\n      enabled: false,\n    },\n  },\n  nodeToNodeEncryptionOptions: {\n    enabled: false,\n  },\n  snapshotOptions: {\n    automatedSnapshotStartHour: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcOptions: {\n    securityGroupIds: ['securityGroupIds'],\n    subnetIds: ['subnetIds'],\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CfnDomain"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CfnDomain",
        "@aws-cdk/aws-elasticsearch.CfnDomainProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n\ndeclare const accessPolicies: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDomain = new elasticsearch.CfnDomain(this, 'MyCfnDomain', /* all optional props */ {\n  accessPolicies: accessPolicies,\n  advancedOptions: {\n    advancedOptionsKey: 'advancedOptions',\n  },\n  advancedSecurityOptions: {\n    anonymousAuthEnabled: false,\n    enabled: false,\n    internalUserDatabaseEnabled: false,\n    masterUserOptions: {\n      masterUserArn: 'masterUserArn',\n      masterUserName: 'masterUserName',\n      masterUserPassword: 'masterUserPassword',\n    },\n  },\n  cognitoOptions: {\n    enabled: false,\n    identityPoolId: 'identityPoolId',\n    roleArn: 'roleArn',\n    userPoolId: 'userPoolId',\n  },\n  domainEndpointOptions: {\n    customEndpoint: 'customEndpoint',\n    customEndpointCertificateArn: 'customEndpointCertificateArn',\n    customEndpointEnabled: false,\n    enforceHttps: false,\n    tlsSecurityPolicy: 'tlsSecurityPolicy',\n  },\n  domainName: 'domainName',\n  ebsOptions: {\n    ebsEnabled: false,\n    iops: 123,\n    volumeSize: 123,\n    volumeType: 'volumeType',\n  },\n  elasticsearchClusterConfig: {\n    coldStorageOptions: {\n      enabled: false,\n    },\n    dedicatedMasterCount: 123,\n    dedicatedMasterEnabled: false,\n    dedicatedMasterType: 'dedicatedMasterType',\n    instanceCount: 123,\n    instanceType: 'instanceType',\n    warmCount: 123,\n    warmEnabled: false,\n    warmType: 'warmType',\n    zoneAwarenessConfig: {\n      availabilityZoneCount: 123,\n    },\n    zoneAwarenessEnabled: false,\n  },\n  elasticsearchVersion: 'elasticsearchVersion',\n  encryptionAtRestOptions: {\n    enabled: false,\n    kmsKeyId: 'kmsKeyId',\n  },\n  logPublishingOptions: {\n    logPublishingOptionsKey: {\n      cloudWatchLogsLogGroupArn: 'cloudWatchLogsLogGroupArn',\n      enabled: false,\n    },\n  },\n  nodeToNodeEncryptionOptions: {\n    enabled: false,\n  },\n  snapshotOptions: {\n    automatedSnapshotStartHour: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcOptions: {\n    securityGroupIds: ['securityGroupIds'],\n    subnetIds: ['subnetIds'],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 7,
        "10": 24,
        "75": 66,
        "91": 14,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 3,
        "193": 17,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 60,
        "290": 1
      },
      "fqnsFingerprint": "ed4201ed32c288779119fdb92bd1b135553f32f4c3b46179f4f99637369f5f02"
    },
    "c8e1696204412e644ddb2f6540c4a6665eddae7d64845dc38098d34cb06f12ea": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\nadvanced_security_options_input_property = elasticsearch.CfnDomain.AdvancedSecurityOptionsInputProperty(\n    anonymous_auth_enabled=False,\n    enabled=False,\n    internal_user_database_enabled=False,\n    master_user_options=elasticsearch.CfnDomain.MasterUserOptionsProperty(\n        master_user_arn=\"masterUserArn\",\n        master_user_name=\"masterUserName\",\n        master_user_password=\"masterUserPassword\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nAdvancedSecurityOptionsInputProperty advancedSecurityOptionsInputProperty = new AdvancedSecurityOptionsInputProperty {\n    AnonymousAuthEnabled = false,\n    Enabled = false,\n    InternalUserDatabaseEnabled = false,\n    MasterUserOptions = new MasterUserOptionsProperty {\n        MasterUserArn = \"masterUserArn\",\n        MasterUserName = \"masterUserName\",\n        MasterUserPassword = \"masterUserPassword\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nAdvancedSecurityOptionsInputProperty advancedSecurityOptionsInputProperty = AdvancedSecurityOptionsInputProperty.builder()\n        .anonymousAuthEnabled(false)\n        .enabled(false)\n        .internalUserDatabaseEnabled(false)\n        .masterUserOptions(MasterUserOptionsProperty.builder()\n                .masterUserArn(\"masterUserArn\")\n                .masterUserName(\"masterUserName\")\n                .masterUserPassword(\"masterUserPassword\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\nadvancedSecurityOptionsInputProperty := &advancedSecurityOptionsInputProperty{\n\tanonymousAuthEnabled: jsii.Boolean(false),\n\tenabled: jsii.Boolean(false),\n\tinternalUserDatabaseEnabled: jsii.Boolean(false),\n\tmasterUserOptions: &masterUserOptionsProperty{\n\t\tmasterUserArn: jsii.String(\"masterUserArn\"),\n\t\tmasterUserName: jsii.String(\"masterUserName\"),\n\t\tmasterUserPassword: jsii.String(\"masterUserPassword\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\nconst advancedSecurityOptionsInputProperty: elasticsearch.CfnDomain.AdvancedSecurityOptionsInputProperty = {\n  anonymousAuthEnabled: false,\n  enabled: false,\n  internalUserDatabaseEnabled: false,\n  masterUserOptions: {\n    masterUserArn: 'masterUserArn',\n    masterUserName: 'masterUserName',\n    masterUserPassword: 'masterUserPassword',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CfnDomain.AdvancedSecurityOptionsInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CfnDomain.AdvancedSecurityOptionsInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst advancedSecurityOptionsInputProperty: elasticsearch.CfnDomain.AdvancedSecurityOptionsInputProperty = {\n  anonymousAuthEnabled: false,\n  enabled: false,\n  internalUserDatabaseEnabled: false,\n  masterUserOptions: {\n    masterUserArn: 'masterUserArn',\n    masterUserName: 'masterUserName',\n    masterUserPassword: 'masterUserPassword',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 12,
        "91": 3,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "bd53dc5cc10d73920111de6ca4fe5289487f5f200f8714eca7f53cef2173c3db"
    },
    "0042443d4c057cdd838df0b19d6276aaacea8de43399e0c4ace07f97c5d8a04f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\ncognito_options_property = elasticsearch.CfnDomain.CognitoOptionsProperty(\n    enabled=False,\n    identity_pool_id=\"identityPoolId\",\n    role_arn=\"roleArn\",\n    user_pool_id=\"userPoolId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nCognitoOptionsProperty cognitoOptionsProperty = new CognitoOptionsProperty {\n    Enabled = false,\n    IdentityPoolId = \"identityPoolId\",\n    RoleArn = \"roleArn\",\n    UserPoolId = \"userPoolId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nCognitoOptionsProperty cognitoOptionsProperty = CognitoOptionsProperty.builder()\n        .enabled(false)\n        .identityPoolId(\"identityPoolId\")\n        .roleArn(\"roleArn\")\n        .userPoolId(\"userPoolId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\ncognitoOptionsProperty := &cognitoOptionsProperty{\n\tenabled: jsii.Boolean(false),\n\tidentityPoolId: jsii.String(\"identityPoolId\"),\n\troleArn: jsii.String(\"roleArn\"),\n\tuserPoolId: jsii.String(\"userPoolId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\nconst cognitoOptionsProperty: elasticsearch.CfnDomain.CognitoOptionsProperty = {\n  enabled: false,\n  identityPoolId: 'identityPoolId',\n  roleArn: 'roleArn',\n  userPoolId: 'userPoolId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CfnDomain.CognitoOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CfnDomain.CognitoOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cognitoOptionsProperty: elasticsearch.CfnDomain.CognitoOptionsProperty = {\n  enabled: false,\n  identityPoolId: 'identityPoolId',\n  roleArn: 'roleArn',\n  userPoolId: 'userPoolId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "62fd0dd3c8edd6030d95454cdd5685bf1f0ad355f13a730760c1ca8116cd7312"
    },
    "48477ab073b2b102f182ddf1a5d2db9cb57bf3c0694da50f4f103af6cc496210": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\ncold_storage_options_property = elasticsearch.CfnDomain.ColdStorageOptionsProperty(\n    enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nColdStorageOptionsProperty coldStorageOptionsProperty = new ColdStorageOptionsProperty {\n    Enabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nColdStorageOptionsProperty coldStorageOptionsProperty = ColdStorageOptionsProperty.builder()\n        .enabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\ncoldStorageOptionsProperty := &coldStorageOptionsProperty{\n\tenabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\nconst coldStorageOptionsProperty: elasticsearch.CfnDomain.ColdStorageOptionsProperty = {\n  enabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CfnDomain.ColdStorageOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CfnDomain.ColdStorageOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst coldStorageOptionsProperty: elasticsearch.CfnDomain.ColdStorageOptionsProperty = {\n  enabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "b8b439d48da70c90e5ed481226b7f0bb03e56dbb0b087c384db95d49c43dc3a1"
    },
    "5859c22f3aebc587770c0d76eb99df13a9cea5d28f7e813bf7113dfb418a2cf9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\ndomain_endpoint_options_property = elasticsearch.CfnDomain.DomainEndpointOptionsProperty(\n    custom_endpoint=\"customEndpoint\",\n    custom_endpoint_certificate_arn=\"customEndpointCertificateArn\",\n    custom_endpoint_enabled=False,\n    enforce_https=False,\n    tls_security_policy=\"tlsSecurityPolicy\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nDomainEndpointOptionsProperty domainEndpointOptionsProperty = new DomainEndpointOptionsProperty {\n    CustomEndpoint = \"customEndpoint\",\n    CustomEndpointCertificateArn = \"customEndpointCertificateArn\",\n    CustomEndpointEnabled = false,\n    EnforceHttps = false,\n    TlsSecurityPolicy = \"tlsSecurityPolicy\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nDomainEndpointOptionsProperty domainEndpointOptionsProperty = DomainEndpointOptionsProperty.builder()\n        .customEndpoint(\"customEndpoint\")\n        .customEndpointCertificateArn(\"customEndpointCertificateArn\")\n        .customEndpointEnabled(false)\n        .enforceHttps(false)\n        .tlsSecurityPolicy(\"tlsSecurityPolicy\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\ndomainEndpointOptionsProperty := &domainEndpointOptionsProperty{\n\tcustomEndpoint: jsii.String(\"customEndpoint\"),\n\tcustomEndpointCertificateArn: jsii.String(\"customEndpointCertificateArn\"),\n\tcustomEndpointEnabled: jsii.Boolean(false),\n\tenforceHttps: jsii.Boolean(false),\n\ttlsSecurityPolicy: jsii.String(\"tlsSecurityPolicy\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\nconst domainEndpointOptionsProperty: elasticsearch.CfnDomain.DomainEndpointOptionsProperty = {\n  customEndpoint: 'customEndpoint',\n  customEndpointCertificateArn: 'customEndpointCertificateArn',\n  customEndpointEnabled: false,\n  enforceHttps: false,\n  tlsSecurityPolicy: 'tlsSecurityPolicy',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CfnDomain.DomainEndpointOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CfnDomain.DomainEndpointOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst domainEndpointOptionsProperty: elasticsearch.CfnDomain.DomainEndpointOptionsProperty = {\n  customEndpoint: 'customEndpoint',\n  customEndpointCertificateArn: 'customEndpointCertificateArn',\n  customEndpointEnabled: false,\n  enforceHttps: false,\n  tlsSecurityPolicy: 'tlsSecurityPolicy',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 10,
        "91": 2,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "a22b1294b9e50b742329767527580a61755f1b31ee85481356495983e0ff15bb"
    },
    "ef65bae8aad2e387ae497ad9a1a439d832b9ae1ca2aa9cdd7e05565eae2704e5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\ne_bSOptions_property = elasticsearch.CfnDomain.EBSOptionsProperty(\n    ebs_enabled=False,\n    iops=123,\n    volume_size=123,\n    volume_type=\"volumeType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nEBSOptionsProperty eBSOptionsProperty = new EBSOptionsProperty {\n    EbsEnabled = false,\n    Iops = 123,\n    VolumeSize = 123,\n    VolumeType = \"volumeType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nEBSOptionsProperty eBSOptionsProperty = EBSOptionsProperty.builder()\n        .ebsEnabled(false)\n        .iops(123)\n        .volumeSize(123)\n        .volumeType(\"volumeType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\neBSOptionsProperty := &eBSOptionsProperty{\n\tebsEnabled: jsii.Boolean(false),\n\tiops: jsii.Number(123),\n\tvolumeSize: jsii.Number(123),\n\tvolumeType: jsii.String(\"volumeType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\nconst eBSOptionsProperty: elasticsearch.CfnDomain.EBSOptionsProperty = {\n  ebsEnabled: false,\n  iops: 123,\n  volumeSize: 123,\n  volumeType: 'volumeType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CfnDomain.EBSOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CfnDomain.EBSOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst eBSOptionsProperty: elasticsearch.CfnDomain.EBSOptionsProperty = {\n  ebsEnabled: false,\n  iops: 123,\n  volumeSize: 123,\n  volumeType: 'volumeType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 9,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "920b4ef91b2d01cc759b32bb9f9eda53643188f84619ec21bc83d47124310d2a"
    },
    "c4f02680159b7d3742d96427b99b059e155484a6ed85fd7c205a62e5244237f8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\nelasticsearch_cluster_config_property = elasticsearch.CfnDomain.ElasticsearchClusterConfigProperty(\n    cold_storage_options=elasticsearch.CfnDomain.ColdStorageOptionsProperty(\n        enabled=False\n    ),\n    dedicated_master_count=123,\n    dedicated_master_enabled=False,\n    dedicated_master_type=\"dedicatedMasterType\",\n    instance_count=123,\n    instance_type=\"instanceType\",\n    warm_count=123,\n    warm_enabled=False,\n    warm_type=\"warmType\",\n    zone_awareness_config=elasticsearch.CfnDomain.ZoneAwarenessConfigProperty(\n        availability_zone_count=123\n    ),\n    zone_awareness_enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nElasticsearchClusterConfigProperty elasticsearchClusterConfigProperty = new ElasticsearchClusterConfigProperty {\n    ColdStorageOptions = new ColdStorageOptionsProperty {\n        Enabled = false\n    },\n    DedicatedMasterCount = 123,\n    DedicatedMasterEnabled = false,\n    DedicatedMasterType = \"dedicatedMasterType\",\n    InstanceCount = 123,\n    InstanceType = \"instanceType\",\n    WarmCount = 123,\n    WarmEnabled = false,\n    WarmType = \"warmType\",\n    ZoneAwarenessConfig = new ZoneAwarenessConfigProperty {\n        AvailabilityZoneCount = 123\n    },\n    ZoneAwarenessEnabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nElasticsearchClusterConfigProperty elasticsearchClusterConfigProperty = ElasticsearchClusterConfigProperty.builder()\n        .coldStorageOptions(ColdStorageOptionsProperty.builder()\n                .enabled(false)\n                .build())\n        .dedicatedMasterCount(123)\n        .dedicatedMasterEnabled(false)\n        .dedicatedMasterType(\"dedicatedMasterType\")\n        .instanceCount(123)\n        .instanceType(\"instanceType\")\n        .warmCount(123)\n        .warmEnabled(false)\n        .warmType(\"warmType\")\n        .zoneAwarenessConfig(ZoneAwarenessConfigProperty.builder()\n                .availabilityZoneCount(123)\n                .build())\n        .zoneAwarenessEnabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\nelasticsearchClusterConfigProperty := &elasticsearchClusterConfigProperty{\n\tcoldStorageOptions: &coldStorageOptionsProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tdedicatedMasterCount: jsii.Number(123),\n\tdedicatedMasterEnabled: jsii.Boolean(false),\n\tdedicatedMasterType: jsii.String(\"dedicatedMasterType\"),\n\tinstanceCount: jsii.Number(123),\n\tinstanceType: jsii.String(\"instanceType\"),\n\twarmCount: jsii.Number(123),\n\twarmEnabled: jsii.Boolean(false),\n\twarmType: jsii.String(\"warmType\"),\n\tzoneAwarenessConfig: &zoneAwarenessConfigProperty{\n\t\tavailabilityZoneCount: jsii.Number(123),\n\t},\n\tzoneAwarenessEnabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\nconst elasticsearchClusterConfigProperty: elasticsearch.CfnDomain.ElasticsearchClusterConfigProperty = {\n  coldStorageOptions: {\n    enabled: false,\n  },\n  dedicatedMasterCount: 123,\n  dedicatedMasterEnabled: false,\n  dedicatedMasterType: 'dedicatedMasterType',\n  instanceCount: 123,\n  instanceType: 'instanceType',\n  warmCount: 123,\n  warmEnabled: false,\n  warmType: 'warmType',\n  zoneAwarenessConfig: {\n    availabilityZoneCount: 123,\n  },\n  zoneAwarenessEnabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CfnDomain.ElasticsearchClusterConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CfnDomain.ElasticsearchClusterConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst elasticsearchClusterConfigProperty: elasticsearch.CfnDomain.ElasticsearchClusterConfigProperty = {\n  coldStorageOptions: {\n    enabled: false,\n  },\n  dedicatedMasterCount: 123,\n  dedicatedMasterEnabled: false,\n  dedicatedMasterType: 'dedicatedMasterType',\n  instanceCount: 123,\n  instanceType: 'instanceType',\n  warmCount: 123,\n  warmEnabled: false,\n  warmType: 'warmType',\n  zoneAwarenessConfig: {\n    availabilityZoneCount: 123,\n  },\n  zoneAwarenessEnabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 4,
        "75": 18,
        "91": 4,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "88cd8e8af3a68fce279b4bba8b059fc7a08db1ca931d0d03cc5bc056ff83e03d"
    },
    "23b1c9e1b7af258fb624d1b6eb5f64eed0ec7444e4cee6f82737ebe75ba26e92": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\nencryption_at_rest_options_property = elasticsearch.CfnDomain.EncryptionAtRestOptionsProperty(\n    enabled=False,\n    kms_key_id=\"kmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nEncryptionAtRestOptionsProperty encryptionAtRestOptionsProperty = new EncryptionAtRestOptionsProperty {\n    Enabled = false,\n    KmsKeyId = \"kmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nEncryptionAtRestOptionsProperty encryptionAtRestOptionsProperty = EncryptionAtRestOptionsProperty.builder()\n        .enabled(false)\n        .kmsKeyId(\"kmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\nencryptionAtRestOptionsProperty := &encryptionAtRestOptionsProperty{\n\tenabled: jsii.Boolean(false),\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\nconst encryptionAtRestOptionsProperty: elasticsearch.CfnDomain.EncryptionAtRestOptionsProperty = {\n  enabled: false,\n  kmsKeyId: 'kmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CfnDomain.EncryptionAtRestOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CfnDomain.EncryptionAtRestOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst encryptionAtRestOptionsProperty: elasticsearch.CfnDomain.EncryptionAtRestOptionsProperty = {\n  enabled: false,\n  kmsKeyId: 'kmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "d79fd024de8dc5d6fcbb72b84257d988fdbea57ed159af701551888a3309f5b2"
    },
    "e52072f887f41ab0191bd416224632e7c82bfcf76f697b8e40900d84f97508b0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\nlog_publishing_option_property = elasticsearch.CfnDomain.LogPublishingOptionProperty(\n    cloud_watch_logs_log_group_arn=\"cloudWatchLogsLogGroupArn\",\n    enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nLogPublishingOptionProperty logPublishingOptionProperty = new LogPublishingOptionProperty {\n    CloudWatchLogsLogGroupArn = \"cloudWatchLogsLogGroupArn\",\n    Enabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nLogPublishingOptionProperty logPublishingOptionProperty = LogPublishingOptionProperty.builder()\n        .cloudWatchLogsLogGroupArn(\"cloudWatchLogsLogGroupArn\")\n        .enabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\nlogPublishingOptionProperty := &logPublishingOptionProperty{\n\tcloudWatchLogsLogGroupArn: jsii.String(\"cloudWatchLogsLogGroupArn\"),\n\tenabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\nconst logPublishingOptionProperty: elasticsearch.CfnDomain.LogPublishingOptionProperty = {\n  cloudWatchLogsLogGroupArn: 'cloudWatchLogsLogGroupArn',\n  enabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CfnDomain.LogPublishingOptionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CfnDomain.LogPublishingOptionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst logPublishingOptionProperty: elasticsearch.CfnDomain.LogPublishingOptionProperty = {\n  cloudWatchLogsLogGroupArn: 'cloudWatchLogsLogGroupArn',\n  enabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "fb3e27fc8129f33b93686e2b5b5fbf99a4c9a56369b382254ba37d78aba53a66"
    },
    "c83dd4bde2cf5b6794a7a01a295d1e680a75f66d7589cbef9a1c68f245424c9b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\nmaster_user_options_property = elasticsearch.CfnDomain.MasterUserOptionsProperty(\n    master_user_arn=\"masterUserArn\",\n    master_user_name=\"masterUserName\",\n    master_user_password=\"masterUserPassword\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nMasterUserOptionsProperty masterUserOptionsProperty = new MasterUserOptionsProperty {\n    MasterUserArn = \"masterUserArn\",\n    MasterUserName = \"masterUserName\",\n    MasterUserPassword = \"masterUserPassword\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nMasterUserOptionsProperty masterUserOptionsProperty = MasterUserOptionsProperty.builder()\n        .masterUserArn(\"masterUserArn\")\n        .masterUserName(\"masterUserName\")\n        .masterUserPassword(\"masterUserPassword\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\nmasterUserOptionsProperty := &masterUserOptionsProperty{\n\tmasterUserArn: jsii.String(\"masterUserArn\"),\n\tmasterUserName: jsii.String(\"masterUserName\"),\n\tmasterUserPassword: jsii.String(\"masterUserPassword\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\nconst masterUserOptionsProperty: elasticsearch.CfnDomain.MasterUserOptionsProperty = {\n  masterUserArn: 'masterUserArn',\n  masterUserName: 'masterUserName',\n  masterUserPassword: 'masterUserPassword',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CfnDomain.MasterUserOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CfnDomain.MasterUserOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst masterUserOptionsProperty: elasticsearch.CfnDomain.MasterUserOptionsProperty = {\n  masterUserArn: 'masterUserArn',\n  masterUserName: 'masterUserName',\n  masterUserPassword: 'masterUserPassword',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "14a6673571da515fe3a3658ec6b7e18138ceaa5198695ec3291667463531cefa"
    },
    "184a119e174d6a02fc6eb15e10cff855ae9ed8667a626623087e2a58c4c255c7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\nnode_to_node_encryption_options_property = elasticsearch.CfnDomain.NodeToNodeEncryptionOptionsProperty(\n    enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nNodeToNodeEncryptionOptionsProperty nodeToNodeEncryptionOptionsProperty = new NodeToNodeEncryptionOptionsProperty {\n    Enabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nNodeToNodeEncryptionOptionsProperty nodeToNodeEncryptionOptionsProperty = NodeToNodeEncryptionOptionsProperty.builder()\n        .enabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\nnodeToNodeEncryptionOptionsProperty := &nodeToNodeEncryptionOptionsProperty{\n\tenabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\nconst nodeToNodeEncryptionOptionsProperty: elasticsearch.CfnDomain.NodeToNodeEncryptionOptionsProperty = {\n  enabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CfnDomain.NodeToNodeEncryptionOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CfnDomain.NodeToNodeEncryptionOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst nodeToNodeEncryptionOptionsProperty: elasticsearch.CfnDomain.NodeToNodeEncryptionOptionsProperty = {\n  enabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "269d208dd2d8424efe23c55ba2344dc6514ba7b0812098a45a1d2a33ecaa6f3e"
    },
    "96a1d38bf5b3ef5d134005629ed5a10d3d08027f49f3d71e078ad9eade0b5b1c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\nsnapshot_options_property = elasticsearch.CfnDomain.SnapshotOptionsProperty(\n    automated_snapshot_start_hour=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nSnapshotOptionsProperty snapshotOptionsProperty = new SnapshotOptionsProperty {\n    AutomatedSnapshotStartHour = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nSnapshotOptionsProperty snapshotOptionsProperty = SnapshotOptionsProperty.builder()\n        .automatedSnapshotStartHour(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\nsnapshotOptionsProperty := &snapshotOptionsProperty{\n\tautomatedSnapshotStartHour: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\nconst snapshotOptionsProperty: elasticsearch.CfnDomain.SnapshotOptionsProperty = {\n  automatedSnapshotStartHour: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CfnDomain.SnapshotOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CfnDomain.SnapshotOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst snapshotOptionsProperty: elasticsearch.CfnDomain.SnapshotOptionsProperty = {\n  automatedSnapshotStartHour: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "4017c943b052d0152efdf03d7cbbd807553ce2ca3441e9c0f791160b40c0062a"
    },
    "237258772fa0a74647c21e7b1c5aae577b56466597e9b19dd7ac4d59f21fbd32": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\nv_pCOptions_property = elasticsearch.CfnDomain.VPCOptionsProperty(\n    security_group_ids=[\"securityGroupIds\"],\n    subnet_ids=[\"subnetIds\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nVPCOptionsProperty vPCOptionsProperty = new VPCOptionsProperty {\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    SubnetIds = new [] { \"subnetIds\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nVPCOptionsProperty vPCOptionsProperty = VPCOptionsProperty.builder()\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .subnetIds(List.of(\"subnetIds\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\nvPCOptionsProperty := &vPCOptionsProperty{\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tsubnetIds: []*string{\n\t\tjsii.String(\"subnetIds\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\nconst vPCOptionsProperty: elasticsearch.CfnDomain.VPCOptionsProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnetIds: ['subnetIds'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CfnDomain.VPCOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CfnDomain.VPCOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst vPCOptionsProperty: elasticsearch.CfnDomain.VPCOptionsProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnetIds: ['subnetIds'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "284efe4d00bd6411f68d867301cbbd317ccecb8dba263fb7adbc3deb72979f87"
    },
    "4f3e65eee27ec7caaad523ae5a1d15e7e1dd9e1769006360ffde3a4591fc825f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\nzone_awareness_config_property = elasticsearch.CfnDomain.ZoneAwarenessConfigProperty(\n    availability_zone_count=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nZoneAwarenessConfigProperty zoneAwarenessConfigProperty = new ZoneAwarenessConfigProperty {\n    AvailabilityZoneCount = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nZoneAwarenessConfigProperty zoneAwarenessConfigProperty = ZoneAwarenessConfigProperty.builder()\n        .availabilityZoneCount(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\nzoneAwarenessConfigProperty := &zoneAwarenessConfigProperty{\n\tavailabilityZoneCount: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\nconst zoneAwarenessConfigProperty: elasticsearch.CfnDomain.ZoneAwarenessConfigProperty = {\n  availabilityZoneCount: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CfnDomain.ZoneAwarenessConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CfnDomain.ZoneAwarenessConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst zoneAwarenessConfigProperty: elasticsearch.CfnDomain.ZoneAwarenessConfigProperty = {\n  availabilityZoneCount: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "902f2f680a9f8dc77521ce7ce4bdd6e052696f25c5321563758a786d86aafe06"
    },
    "769417f90f2416adb21e11b959a364673033c653b381ba8241bdfb0b579739ae": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\n# access_policies: Any\n\ncfn_domain_props = elasticsearch.CfnDomainProps(\n    access_policies=access_policies,\n    advanced_options={\n        \"advanced_options_key\": \"advancedOptions\"\n    },\n    advanced_security_options=elasticsearch.CfnDomain.AdvancedSecurityOptionsInputProperty(\n        anonymous_auth_enabled=False,\n        enabled=False,\n        internal_user_database_enabled=False,\n        master_user_options=elasticsearch.CfnDomain.MasterUserOptionsProperty(\n            master_user_arn=\"masterUserArn\",\n            master_user_name=\"masterUserName\",\n            master_user_password=\"masterUserPassword\"\n        )\n    ),\n    cognito_options=elasticsearch.CfnDomain.CognitoOptionsProperty(\n        enabled=False,\n        identity_pool_id=\"identityPoolId\",\n        role_arn=\"roleArn\",\n        user_pool_id=\"userPoolId\"\n    ),\n    domain_endpoint_options=elasticsearch.CfnDomain.DomainEndpointOptionsProperty(\n        custom_endpoint=\"customEndpoint\",\n        custom_endpoint_certificate_arn=\"customEndpointCertificateArn\",\n        custom_endpoint_enabled=False,\n        enforce_https=False,\n        tls_security_policy=\"tlsSecurityPolicy\"\n    ),\n    domain_name=\"domainName\",\n    ebs_options=elasticsearch.CfnDomain.EBSOptionsProperty(\n        ebs_enabled=False,\n        iops=123,\n        volume_size=123,\n        volume_type=\"volumeType\"\n    ),\n    elasticsearch_cluster_config=elasticsearch.CfnDomain.ElasticsearchClusterConfigProperty(\n        cold_storage_options=elasticsearch.CfnDomain.ColdStorageOptionsProperty(\n            enabled=False\n        ),\n        dedicated_master_count=123,\n        dedicated_master_enabled=False,\n        dedicated_master_type=\"dedicatedMasterType\",\n        instance_count=123,\n        instance_type=\"instanceType\",\n        warm_count=123,\n        warm_enabled=False,\n        warm_type=\"warmType\",\n        zone_awareness_config=elasticsearch.CfnDomain.ZoneAwarenessConfigProperty(\n            availability_zone_count=123\n        ),\n        zone_awareness_enabled=False\n    ),\n    elasticsearch_version=\"elasticsearchVersion\",\n    encryption_at_rest_options=elasticsearch.CfnDomain.EncryptionAtRestOptionsProperty(\n        enabled=False,\n        kms_key_id=\"kmsKeyId\"\n    ),\n    log_publishing_options={\n        \"log_publishing_options_key\": elasticsearch.CfnDomain.LogPublishingOptionProperty(\n            cloud_watch_logs_log_group_arn=\"cloudWatchLogsLogGroupArn\",\n            enabled=False\n        )\n    },\n    node_to_node_encryption_options=elasticsearch.CfnDomain.NodeToNodeEncryptionOptionsProperty(\n        enabled=False\n    ),\n    snapshot_options=elasticsearch.CfnDomain.SnapshotOptionsProperty(\n        automated_snapshot_start_hour=123\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    vpc_options=elasticsearch.CfnDomain.VPCOptionsProperty(\n        security_group_ids=[\"securityGroupIds\"],\n        subnet_ids=[\"subnetIds\"]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nvar accessPolicies;\n\nCfnDomainProps cfnDomainProps = new CfnDomainProps {\n    AccessPolicies = accessPolicies,\n    AdvancedOptions = new Dictionary<string, string> {\n        { \"advancedOptionsKey\", \"advancedOptions\" }\n    },\n    AdvancedSecurityOptions = new AdvancedSecurityOptionsInputProperty {\n        AnonymousAuthEnabled = false,\n        Enabled = false,\n        InternalUserDatabaseEnabled = false,\n        MasterUserOptions = new MasterUserOptionsProperty {\n            MasterUserArn = \"masterUserArn\",\n            MasterUserName = \"masterUserName\",\n            MasterUserPassword = \"masterUserPassword\"\n        }\n    },\n    CognitoOptions = new CognitoOptionsProperty {\n        Enabled = false,\n        IdentityPoolId = \"identityPoolId\",\n        RoleArn = \"roleArn\",\n        UserPoolId = \"userPoolId\"\n    },\n    DomainEndpointOptions = new DomainEndpointOptionsProperty {\n        CustomEndpoint = \"customEndpoint\",\n        CustomEndpointCertificateArn = \"customEndpointCertificateArn\",\n        CustomEndpointEnabled = false,\n        EnforceHttps = false,\n        TlsSecurityPolicy = \"tlsSecurityPolicy\"\n    },\n    DomainName = \"domainName\",\n    EbsOptions = new EBSOptionsProperty {\n        EbsEnabled = false,\n        Iops = 123,\n        VolumeSize = 123,\n        VolumeType = \"volumeType\"\n    },\n    ElasticsearchClusterConfig = new ElasticsearchClusterConfigProperty {\n        ColdStorageOptions = new ColdStorageOptionsProperty {\n            Enabled = false\n        },\n        DedicatedMasterCount = 123,\n        DedicatedMasterEnabled = false,\n        DedicatedMasterType = \"dedicatedMasterType\",\n        InstanceCount = 123,\n        InstanceType = \"instanceType\",\n        WarmCount = 123,\n        WarmEnabled = false,\n        WarmType = \"warmType\",\n        ZoneAwarenessConfig = new ZoneAwarenessConfigProperty {\n            AvailabilityZoneCount = 123\n        },\n        ZoneAwarenessEnabled = false\n    },\n    ElasticsearchVersion = \"elasticsearchVersion\",\n    EncryptionAtRestOptions = new EncryptionAtRestOptionsProperty {\n        Enabled = false,\n        KmsKeyId = \"kmsKeyId\"\n    },\n    LogPublishingOptions = new Dictionary<string, object> {\n        { \"logPublishingOptionsKey\", new LogPublishingOptionProperty {\n            CloudWatchLogsLogGroupArn = \"cloudWatchLogsLogGroupArn\",\n            Enabled = false\n        } }\n    },\n    NodeToNodeEncryptionOptions = new NodeToNodeEncryptionOptionsProperty {\n        Enabled = false\n    },\n    SnapshotOptions = new SnapshotOptionsProperty {\n        AutomatedSnapshotStartHour = 123\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    VpcOptions = new VPCOptionsProperty {\n        SecurityGroupIds = new [] { \"securityGroupIds\" },\n        SubnetIds = new [] { \"subnetIds\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nObject accessPolicies;\n\nCfnDomainProps cfnDomainProps = CfnDomainProps.builder()\n        .accessPolicies(accessPolicies)\n        .advancedOptions(Map.of(\n                \"advancedOptionsKey\", \"advancedOptions\"))\n        .advancedSecurityOptions(AdvancedSecurityOptionsInputProperty.builder()\n                .anonymousAuthEnabled(false)\n                .enabled(false)\n                .internalUserDatabaseEnabled(false)\n                .masterUserOptions(MasterUserOptionsProperty.builder()\n                        .masterUserArn(\"masterUserArn\")\n                        .masterUserName(\"masterUserName\")\n                        .masterUserPassword(\"masterUserPassword\")\n                        .build())\n                .build())\n        .cognitoOptions(CognitoOptionsProperty.builder()\n                .enabled(false)\n                .identityPoolId(\"identityPoolId\")\n                .roleArn(\"roleArn\")\n                .userPoolId(\"userPoolId\")\n                .build())\n        .domainEndpointOptions(DomainEndpointOptionsProperty.builder()\n                .customEndpoint(\"customEndpoint\")\n                .customEndpointCertificateArn(\"customEndpointCertificateArn\")\n                .customEndpointEnabled(false)\n                .enforceHttps(false)\n                .tlsSecurityPolicy(\"tlsSecurityPolicy\")\n                .build())\n        .domainName(\"domainName\")\n        .ebsOptions(EBSOptionsProperty.builder()\n                .ebsEnabled(false)\n                .iops(123)\n                .volumeSize(123)\n                .volumeType(\"volumeType\")\n                .build())\n        .elasticsearchClusterConfig(ElasticsearchClusterConfigProperty.builder()\n                .coldStorageOptions(ColdStorageOptionsProperty.builder()\n                        .enabled(false)\n                        .build())\n                .dedicatedMasterCount(123)\n                .dedicatedMasterEnabled(false)\n                .dedicatedMasterType(\"dedicatedMasterType\")\n                .instanceCount(123)\n                .instanceType(\"instanceType\")\n                .warmCount(123)\n                .warmEnabled(false)\n                .warmType(\"warmType\")\n                .zoneAwarenessConfig(ZoneAwarenessConfigProperty.builder()\n                        .availabilityZoneCount(123)\n                        .build())\n                .zoneAwarenessEnabled(false)\n                .build())\n        .elasticsearchVersion(\"elasticsearchVersion\")\n        .encryptionAtRestOptions(EncryptionAtRestOptionsProperty.builder()\n                .enabled(false)\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .logPublishingOptions(Map.of(\n                \"logPublishingOptionsKey\", LogPublishingOptionProperty.builder()\n                        .cloudWatchLogsLogGroupArn(\"cloudWatchLogsLogGroupArn\")\n                        .enabled(false)\n                        .build()))\n        .nodeToNodeEncryptionOptions(NodeToNodeEncryptionOptionsProperty.builder()\n                .enabled(false)\n                .build())\n        .snapshotOptions(SnapshotOptionsProperty.builder()\n                .automatedSnapshotStartHour(123)\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .vpcOptions(VPCOptionsProperty.builder()\n                .securityGroupIds(List.of(\"securityGroupIds\"))\n                .subnetIds(List.of(\"subnetIds\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\nvar accessPolicies interface{}\n\ncfnDomainProps := &cfnDomainProps{\n\taccessPolicies: accessPolicies,\n\tadvancedOptions: map[string]*string{\n\t\t\"advancedOptionsKey\": jsii.String(\"advancedOptions\"),\n\t},\n\tadvancedSecurityOptions: &advancedSecurityOptionsInputProperty{\n\t\tanonymousAuthEnabled: jsii.Boolean(false),\n\t\tenabled: jsii.Boolean(false),\n\t\tinternalUserDatabaseEnabled: jsii.Boolean(false),\n\t\tmasterUserOptions: &masterUserOptionsProperty{\n\t\t\tmasterUserArn: jsii.String(\"masterUserArn\"),\n\t\t\tmasterUserName: jsii.String(\"masterUserName\"),\n\t\t\tmasterUserPassword: jsii.String(\"masterUserPassword\"),\n\t\t},\n\t},\n\tcognitoOptions: &cognitoOptionsProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tidentityPoolId: jsii.String(\"identityPoolId\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\tuserPoolId: jsii.String(\"userPoolId\"),\n\t},\n\tdomainEndpointOptions: &domainEndpointOptionsProperty{\n\t\tcustomEndpoint: jsii.String(\"customEndpoint\"),\n\t\tcustomEndpointCertificateArn: jsii.String(\"customEndpointCertificateArn\"),\n\t\tcustomEndpointEnabled: jsii.Boolean(false),\n\t\tenforceHttps: jsii.Boolean(false),\n\t\ttlsSecurityPolicy: jsii.String(\"tlsSecurityPolicy\"),\n\t},\n\tdomainName: jsii.String(\"domainName\"),\n\tebsOptions: &eBSOptionsProperty{\n\t\tebsEnabled: jsii.Boolean(false),\n\t\tiops: jsii.Number(123),\n\t\tvolumeSize: jsii.Number(123),\n\t\tvolumeType: jsii.String(\"volumeType\"),\n\t},\n\telasticsearchClusterConfig: &elasticsearchClusterConfigProperty{\n\t\tcoldStorageOptions: &coldStorageOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tdedicatedMasterCount: jsii.Number(123),\n\t\tdedicatedMasterEnabled: jsii.Boolean(false),\n\t\tdedicatedMasterType: jsii.String(\"dedicatedMasterType\"),\n\t\tinstanceCount: jsii.Number(123),\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\twarmCount: jsii.Number(123),\n\t\twarmEnabled: jsii.Boolean(false),\n\t\twarmType: jsii.String(\"warmType\"),\n\t\tzoneAwarenessConfig: &zoneAwarenessConfigProperty{\n\t\t\tavailabilityZoneCount: jsii.Number(123),\n\t\t},\n\t\tzoneAwarenessEnabled: jsii.Boolean(false),\n\t},\n\telasticsearchVersion: jsii.String(\"elasticsearchVersion\"),\n\tencryptionAtRestOptions: &encryptionAtRestOptionsProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\tlogPublishingOptions: map[string]interface{}{\n\t\t\"logPublishingOptionsKey\": &LogPublishingOptionProperty{\n\t\t\t\"cloudWatchLogsLogGroupArn\": jsii.String(\"cloudWatchLogsLogGroupArn\"),\n\t\t\t\"enabled\": jsii.Boolean(false),\n\t\t},\n\t},\n\tnodeToNodeEncryptionOptions: &nodeToNodeEncryptionOptionsProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tsnapshotOptions: &snapshotOptionsProperty{\n\t\tautomatedSnapshotStartHour: jsii.Number(123),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tvpcOptions: &vPCOptionsProperty{\n\t\tsecurityGroupIds: []*string{\n\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t},\n\t\tsubnetIds: []*string{\n\t\t\tjsii.String(\"subnetIds\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n\ndeclare const accessPolicies: any;\nconst cfnDomainProps: elasticsearch.CfnDomainProps = {\n  accessPolicies: accessPolicies,\n  advancedOptions: {\n    advancedOptionsKey: 'advancedOptions',\n  },\n  advancedSecurityOptions: {\n    anonymousAuthEnabled: false,\n    enabled: false,\n    internalUserDatabaseEnabled: false,\n    masterUserOptions: {\n      masterUserArn: 'masterUserArn',\n      masterUserName: 'masterUserName',\n      masterUserPassword: 'masterUserPassword',\n    },\n  },\n  cognitoOptions: {\n    enabled: false,\n    identityPoolId: 'identityPoolId',\n    roleArn: 'roleArn',\n    userPoolId: 'userPoolId',\n  },\n  domainEndpointOptions: {\n    customEndpoint: 'customEndpoint',\n    customEndpointCertificateArn: 'customEndpointCertificateArn',\n    customEndpointEnabled: false,\n    enforceHttps: false,\n    tlsSecurityPolicy: 'tlsSecurityPolicy',\n  },\n  domainName: 'domainName',\n  ebsOptions: {\n    ebsEnabled: false,\n    iops: 123,\n    volumeSize: 123,\n    volumeType: 'volumeType',\n  },\n  elasticsearchClusterConfig: {\n    coldStorageOptions: {\n      enabled: false,\n    },\n    dedicatedMasterCount: 123,\n    dedicatedMasterEnabled: false,\n    dedicatedMasterType: 'dedicatedMasterType',\n    instanceCount: 123,\n    instanceType: 'instanceType',\n    warmCount: 123,\n    warmEnabled: false,\n    warmType: 'warmType',\n    zoneAwarenessConfig: {\n      availabilityZoneCount: 123,\n    },\n    zoneAwarenessEnabled: false,\n  },\n  elasticsearchVersion: 'elasticsearchVersion',\n  encryptionAtRestOptions: {\n    enabled: false,\n    kmsKeyId: 'kmsKeyId',\n  },\n  logPublishingOptions: {\n    logPublishingOptionsKey: {\n      cloudWatchLogsLogGroupArn: 'cloudWatchLogsLogGroupArn',\n      enabled: false,\n    },\n  },\n  nodeToNodeEncryptionOptions: {\n    enabled: false,\n  },\n  snapshotOptions: {\n    automatedSnapshotStartHour: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcOptions: {\n    securityGroupIds: ['securityGroupIds'],\n    subnetIds: ['subnetIds'],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CfnDomainProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CfnDomainProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n\ndeclare const accessPolicies: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDomainProps: elasticsearch.CfnDomainProps = {\n  accessPolicies: accessPolicies,\n  advancedOptions: {\n    advancedOptionsKey: 'advancedOptions',\n  },\n  advancedSecurityOptions: {\n    anonymousAuthEnabled: false,\n    enabled: false,\n    internalUserDatabaseEnabled: false,\n    masterUserOptions: {\n      masterUserArn: 'masterUserArn',\n      masterUserName: 'masterUserName',\n      masterUserPassword: 'masterUserPassword',\n    },\n  },\n  cognitoOptions: {\n    enabled: false,\n    identityPoolId: 'identityPoolId',\n    roleArn: 'roleArn',\n    userPoolId: 'userPoolId',\n  },\n  domainEndpointOptions: {\n    customEndpoint: 'customEndpoint',\n    customEndpointCertificateArn: 'customEndpointCertificateArn',\n    customEndpointEnabled: false,\n    enforceHttps: false,\n    tlsSecurityPolicy: 'tlsSecurityPolicy',\n  },\n  domainName: 'domainName',\n  ebsOptions: {\n    ebsEnabled: false,\n    iops: 123,\n    volumeSize: 123,\n    volumeType: 'volumeType',\n  },\n  elasticsearchClusterConfig: {\n    coldStorageOptions: {\n      enabled: false,\n    },\n    dedicatedMasterCount: 123,\n    dedicatedMasterEnabled: false,\n    dedicatedMasterType: 'dedicatedMasterType',\n    instanceCount: 123,\n    instanceType: 'instanceType',\n    warmCount: 123,\n    warmEnabled: false,\n    warmType: 'warmType',\n    zoneAwarenessConfig: {\n      availabilityZoneCount: 123,\n    },\n    zoneAwarenessEnabled: false,\n  },\n  elasticsearchVersion: 'elasticsearchVersion',\n  encryptionAtRestOptions: {\n    enabled: false,\n    kmsKeyId: 'kmsKeyId',\n  },\n  logPublishingOptions: {\n    logPublishingOptionsKey: {\n      cloudWatchLogsLogGroupArn: 'cloudWatchLogsLogGroupArn',\n      enabled: false,\n    },\n  },\n  nodeToNodeEncryptionOptions: {\n    enabled: false,\n  },\n  snapshotOptions: {\n    automatedSnapshotStartHour: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcOptions: {\n    securityGroupIds: ['securityGroupIds'],\n    subnetIds: ['subnetIds'],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 7,
        "10": 23,
        "75": 66,
        "91": 14,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 17,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 60,
        "290": 1
      },
      "fqnsFingerprint": "f0db2cee62857ac3ba47de2f5a558ea006882c26c29bcf0b96872f3784f159a9"
    },
    "2c67fde87fc0613b603c68a8cba6909899c5c228ca1e4af57e311956de866431": {
      "translations": {
        "python": {
          "source": "es.Domain(self, \"Domain\",\n    cognito_kibana_auth=es.CognitoOptions(\n        identity_pool_id=\"test-identity-pool-id\",\n        user_pool_id=\"test-user-pool-id\",\n        role=role\n    ),\n    version=elasticsearch_version\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Domain(this, \"Domain\", new DomainProps {\n    CognitoKibanaAuth = new CognitoOptions {\n        IdentityPoolId = \"test-identity-pool-id\",\n        UserPoolId = \"test-user-pool-id\",\n        Role = role\n    },\n    Version = elasticsearchVersion\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain.Builder.create(this, \"Domain\")\n        .cognitoKibanaAuth(CognitoOptions.builder()\n                .identityPoolId(\"test-identity-pool-id\")\n                .userPoolId(\"test-user-pool-id\")\n                .role(role)\n                .build())\n        .version(elasticsearchVersion)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tcognitoKibanaAuth: &cognitoOptions{\n\t\tidentityPoolId: jsii.String(\"test-identity-pool-id\"),\n\t\tuserPoolId: jsii.String(\"test-user-pool-id\"),\n\t\trole: role,\n\t},\n\tversion: elasticsearchVersion,\n})",
          "version": "1"
        },
        "$": {
          "source": "new es.Domain(this, 'Domain', {\n  cognitoKibanaAuth: {\n    identityPoolId: 'test-identity-pool-id',\n    userPoolId: 'test-user-pool-id',\n    role: role,\n  },\n  version: elasticsearchVersion,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CognitoOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CognitoOptions",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-iam.IRole",
        "constructs.Construct"
      ],
      "fullSource": "import * as cdk from '@aws-cdk/core';\nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as opensearch from '@aws-cdk/aws-opensearchservice';\n\ndeclare const role: iam.IRole;\ndeclare const elasticsearchVersion: es.ElasticsearchVersion;\ndeclare const openSearchVersion: opensearch.EngineVersion;\n\nclass Fixture extends cdk.Construct {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew es.Domain(this, 'Domain', {\n  cognitoKibanaAuth: {\n    identityPoolId: 'test-identity-pool-id',\n    userPoolId: 'test-user-pool-id',\n    role: role,\n  },\n  version: elasticsearchVersion,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "104": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 5
      },
      "fqnsFingerprint": "3dddb059f05193b411931cfd1e463acd6b61a5a59aedd52fe69e3b1ed9aa8cc1"
    },
    "9ec812c456a735c9a3522eb9db4f2c43aebae0ef5196a66bb9a3e07516899ac9": {
      "translations": {
        "python": {
          "source": "es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_7,\n    custom_endpoint=es.CustomEndpointOptions(\n        domain_name=\"search.example.com\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_7,\n    CustomEndpoint = new CustomEndpointOptions {\n        DomainName = \"search.example.com\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_7)\n        .customEndpoint(CustomEndpointOptions.builder()\n                .domainName(\"search.example.com\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_7(),\n\tcustomEndpoint: &customEndpointOptions{\n\t\tdomainName: jsii.String(\"search.example.com\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_7,\n  customEndpoint: {\n    domainName: 'search.example.com',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.CustomEndpointOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CustomEndpointOptions",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_7",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_7,\n  customEndpoint: {\n    domainName: 'search.example.com',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 8,
        "104": 1,
        "193": 2,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 3
      },
      "fqnsFingerprint": "b2cc0445ca7d4da3bba2881509b2445db740b812011a50ace5a0a46e1aa7bc9a"
    },
    "615487a06bdcc1c3495111443de110e6f338366500cdd5cc5089050f90074d88": {
      "translations": {
        "python": {
          "source": "domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_4,\n    ebs=es.EbsOptions(\n        volume_size=100,\n        volume_type=ec2.EbsDeviceVolumeType.GENERAL_PURPOSE_SSD\n    ),\n    node_to_node_encryption=True,\n    encryption_at_rest=es.EncryptionAtRestOptions(\n        enabled=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Domain domain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_4,\n    Ebs = new EbsOptions {\n        VolumeSize = 100,\n        VolumeType = EbsDeviceVolumeType.GENERAL_PURPOSE_SSD\n    },\n    NodeToNodeEncryption = true,\n    EncryptionAtRest = new EncryptionAtRestOptions {\n        Enabled = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain domain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_4)\n        .ebs(EbsOptions.builder()\n                .volumeSize(100)\n                .volumeType(EbsDeviceVolumeType.GENERAL_PURPOSE_SSD)\n                .build())\n        .nodeToNodeEncryption(true)\n        .encryptionAtRest(EncryptionAtRestOptions.builder()\n                .enabled(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "domain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_4(),\n\tebs: &ebsOptions{\n\t\tvolumeSize: jsii.Number(100),\n\t\tvolumeType: ec2.ebsDeviceVolumeType_GENERAL_PURPOSE_SSD,\n\t},\n\tnodeToNodeEncryption: jsii.Boolean(true),\n\tencryptionAtRest: &encryptionAtRestOptions{\n\t\tenabled: jsii.Boolean(true),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_4,\n  ebs: {\n    volumeSize: 100,\n    volumeType: ec2.EbsDeviceVolumeType.GENERAL_PURPOSE_SSD,\n  },\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.Domain"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.EbsDeviceVolumeType",
        "@aws-cdk/aws-ec2.EbsDeviceVolumeType#GENERAL_PURPOSE_SSD",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.EbsOptions",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_4",
        "@aws-cdk/aws-elasticsearch.EncryptionAtRestOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_4,\n  ebs: {\n    volumeSize: 100,\n    volumeType: ec2.EbsDeviceVolumeType.GENERAL_PURPOSE_SSD,\n  },\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 16,
        "104": 1,
        "106": 2,
        "193": 3,
        "194": 5,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 7
      },
      "fqnsFingerprint": "889b8760a949f539f9964e36f45d2de2bf7f9e836e2a01312679170cccd1951d"
    },
    "19e46c981635842806db376bb7f72b7673d90be32d052e54a4f746cad6c7752b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticsearch as elasticsearch\n\ndomain_attributes = elasticsearch.DomainAttributes(\n    domain_arn=\"domainArn\",\n    domain_endpoint=\"domainEndpoint\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Elasticsearch;\n\nDomainAttributes domainAttributes = new DomainAttributes {\n    DomainArn = \"domainArn\",\n    DomainEndpoint = \"domainEndpoint\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticsearch.*;\n\nDomainAttributes domainAttributes = DomainAttributes.builder()\n        .domainArn(\"domainArn\")\n        .domainEndpoint(\"domainEndpoint\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticsearch \"github.com/aws-samples/dummy/awscdkawselasticsearch\"\n\ndomainAttributes := &domainAttributes{\n\tdomainArn: jsii.String(\"domainArn\"),\n\tdomainEndpoint: jsii.String(\"domainEndpoint\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\nconst domainAttributes: elasticsearch.DomainAttributes = {\n  domainArn: 'domainArn',\n  domainEndpoint: 'domainEndpoint',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.DomainAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.DomainAttributes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticsearch from '@aws-cdk/aws-elasticsearch';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst domainAttributes: elasticsearch.DomainAttributes = {\n  domainArn: 'domainArn',\n  domainEndpoint: 'domainEndpoint',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "0f4f4ecc028050b0d0de02e731c077209ae507bbdb7f8af59c5cced1fb338c08"
    },
    "e677c1b7d58991ae4dabd7697436b3bc9526059f56dd7b7f10db0a49871056b5": {
      "translations": {
        "python": {
          "source": "domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_4,\n    ebs=es.EbsOptions(\n        volume_size=100,\n        volume_type=ec2.EbsDeviceVolumeType.GENERAL_PURPOSE_SSD\n    ),\n    node_to_node_encryption=True,\n    encryption_at_rest=es.EncryptionAtRestOptions(\n        enabled=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Domain domain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_4,\n    Ebs = new EbsOptions {\n        VolumeSize = 100,\n        VolumeType = EbsDeviceVolumeType.GENERAL_PURPOSE_SSD\n    },\n    NodeToNodeEncryption = true,\n    EncryptionAtRest = new EncryptionAtRestOptions {\n        Enabled = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain domain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_4)\n        .ebs(EbsOptions.builder()\n                .volumeSize(100)\n                .volumeType(EbsDeviceVolumeType.GENERAL_PURPOSE_SSD)\n                .build())\n        .nodeToNodeEncryption(true)\n        .encryptionAtRest(EncryptionAtRestOptions.builder()\n                .enabled(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "domain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_4(),\n\tebs: &ebsOptions{\n\t\tvolumeSize: jsii.Number(100),\n\t\tvolumeType: ec2.ebsDeviceVolumeType_GENERAL_PURPOSE_SSD,\n\t},\n\tnodeToNodeEncryption: jsii.Boolean(true),\n\tencryptionAtRest: &encryptionAtRestOptions{\n\t\tenabled: jsii.Boolean(true),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_4,\n  ebs: {\n    volumeSize: 100,\n    volumeType: ec2.EbsDeviceVolumeType.GENERAL_PURPOSE_SSD,\n  },\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.DomainProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.EbsDeviceVolumeType",
        "@aws-cdk/aws-ec2.EbsDeviceVolumeType#GENERAL_PURPOSE_SSD",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.EbsOptions",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_4",
        "@aws-cdk/aws-elasticsearch.EncryptionAtRestOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_4,\n  ebs: {\n    volumeSize: 100,\n    volumeType: ec2.EbsDeviceVolumeType.GENERAL_PURPOSE_SSD,\n  },\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 16,
        "104": 1,
        "106": 2,
        "193": 3,
        "194": 5,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 7
      },
      "fqnsFingerprint": "889b8760a949f539f9964e36f45d2de2bf7f9e836e2a01312679170cccd1951d"
    },
    "a65f0c40a67a459eaa00dd5514d934607e37aed966c857de8ff8676aa3900c96": {
      "translations": {
        "python": {
          "source": "prod_domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_1,\n    capacity=es.CapacityConfig(\n        master_nodes=5,\n        data_nodes=20\n    ),\n    ebs=es.EbsOptions(\n        volume_size=20\n    ),\n    zone_awareness=es.ZoneAwarenessConfig(\n        availability_zone_count=3\n    ),\n    logging=es.LoggingOptions(\n        slow_search_log_enabled=True,\n        app_log_enabled=True,\n        slow_index_log_enabled=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Domain prodDomain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_1,\n    Capacity = new CapacityConfig {\n        MasterNodes = 5,\n        DataNodes = 20\n    },\n    Ebs = new EbsOptions {\n        VolumeSize = 20\n    },\n    ZoneAwareness = new ZoneAwarenessConfig {\n        AvailabilityZoneCount = 3\n    },\n    Logging = new LoggingOptions {\n        SlowSearchLogEnabled = true,\n        AppLogEnabled = true,\n        SlowIndexLogEnabled = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain prodDomain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_1)\n        .capacity(CapacityConfig.builder()\n                .masterNodes(5)\n                .dataNodes(20)\n                .build())\n        .ebs(EbsOptions.builder()\n                .volumeSize(20)\n                .build())\n        .zoneAwareness(ZoneAwarenessConfig.builder()\n                .availabilityZoneCount(3)\n                .build())\n        .logging(LoggingOptions.builder()\n                .slowSearchLogEnabled(true)\n                .appLogEnabled(true)\n                .slowIndexLogEnabled(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "prodDomain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_1(),\n\tcapacity: &capacityConfig{\n\t\tmasterNodes: jsii.Number(5),\n\t\tdataNodes: jsii.Number(20),\n\t},\n\tebs: &ebsOptions{\n\t\tvolumeSize: jsii.Number(20),\n\t},\n\tzoneAwareness: &zoneAwarenessConfig{\n\t\tavailabilityZoneCount: jsii.Number(3),\n\t},\n\tlogging: &loggingOptions{\n\t\tslowSearchLogEnabled: jsii.Boolean(true),\n\t\tappLogEnabled: jsii.Boolean(true),\n\t\tslowIndexLogEnabled: jsii.Boolean(true),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const prodDomain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  capacity: {\n    masterNodes: 5,\n    dataNodes: 20,\n  },\n  ebs: {\n    volumeSize: 20,\n  },\n  zoneAwareness: {\n    availabilityZoneCount: 3,\n  },\n  logging: {\n    slowSearchLogEnabled: true,\n    appLogEnabled: true,\n    slowIndexLogEnabled: true,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.EbsOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CapacityConfig",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.EbsOptions",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_1",
        "@aws-cdk/aws-elasticsearch.LoggingOptions",
        "@aws-cdk/aws-elasticsearch.ZoneAwarenessConfig",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst prodDomain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  capacity: {\n    masterNodes: 5,\n    dataNodes: 20,\n  },\n  ebs: {\n    volumeSize: 20,\n  },\n  zoneAwareness: {\n    availabilityZoneCount: 3,\n  },\n  logging: {\n    slowSearchLogEnabled: true,\n    appLogEnabled: true,\n    slowIndexLogEnabled: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 1,
        "75": 18,
        "104": 1,
        "106": 3,
        "193": 5,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 12
      },
      "fqnsFingerprint": "bc87b57348d870dc8024e2bde14192dd05cd5a85e8cdc515f479ba1e2463a994"
    },
    "a096a9ca20bb184a0ecfcad768b4733a3a589d3d1aca9bf923ec02b517351061": {
      "translations": {
        "python": {
          "source": "domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_4,\n    ebs=es.EbsOptions(\n        volume_size=100,\n        volume_type=ec2.EbsDeviceVolumeType.GENERAL_PURPOSE_SSD\n    ),\n    node_to_node_encryption=True,\n    encryption_at_rest=es.EncryptionAtRestOptions(\n        enabled=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Domain domain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_4,\n    Ebs = new EbsOptions {\n        VolumeSize = 100,\n        VolumeType = EbsDeviceVolumeType.GENERAL_PURPOSE_SSD\n    },\n    NodeToNodeEncryption = true,\n    EncryptionAtRest = new EncryptionAtRestOptions {\n        Enabled = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain domain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_4)\n        .ebs(EbsOptions.builder()\n                .volumeSize(100)\n                .volumeType(EbsDeviceVolumeType.GENERAL_PURPOSE_SSD)\n                .build())\n        .nodeToNodeEncryption(true)\n        .encryptionAtRest(EncryptionAtRestOptions.builder()\n                .enabled(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "domain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_4(),\n\tebs: &ebsOptions{\n\t\tvolumeSize: jsii.Number(100),\n\t\tvolumeType: ec2.ebsDeviceVolumeType_GENERAL_PURPOSE_SSD,\n\t},\n\tnodeToNodeEncryption: jsii.Boolean(true),\n\tencryptionAtRest: &encryptionAtRestOptions{\n\t\tenabled: jsii.Boolean(true),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_4,\n  ebs: {\n    volumeSize: 100,\n    volumeType: ec2.EbsDeviceVolumeType.GENERAL_PURPOSE_SSD,\n  },\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.ElasticsearchVersion"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.EbsDeviceVolumeType",
        "@aws-cdk/aws-ec2.EbsDeviceVolumeType#GENERAL_PURPOSE_SSD",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.EbsOptions",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_4",
        "@aws-cdk/aws-elasticsearch.EncryptionAtRestOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_4,\n  ebs: {\n    volumeSize: 100,\n    volumeType: ec2.EbsDeviceVolumeType.GENERAL_PURPOSE_SSD,\n  },\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 16,
        "104": 1,
        "106": 2,
        "193": 3,
        "194": 5,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 7
      },
      "fqnsFingerprint": "889b8760a949f539f9964e36f45d2de2bf7f9e836e2a01312679170cccd1951d"
    },
    "c1dfd2789c5b79895bd7d32d8bdc2c8005e5626905ef8cc4b66680a11e7fe13b": {
      "translations": {
        "python": {
          "source": "domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_1,\n    enforce_https=True,\n    node_to_node_encryption=True,\n    encryption_at_rest=es.EncryptionAtRestOptions(\n        enabled=True\n    ),\n    fine_grained_access_control=es.AdvancedSecurityOptions(\n        master_user_name=\"master-user\"\n    )\n)\n\nmaster_user_password = domain.master_user_password",
          "version": "2"
        },
        "csharp": {
          "source": "Domain domain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_1,\n    EnforceHttps = true,\n    NodeToNodeEncryption = true,\n    EncryptionAtRest = new EncryptionAtRestOptions {\n        Enabled = true\n    },\n    FineGrainedAccessControl = new AdvancedSecurityOptions {\n        MasterUserName = \"master-user\"\n    }\n});\n\nSecretValue? masterUserPassword = domain.MasterUserPassword;",
          "version": "1"
        },
        "java": {
          "source": "Domain domain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_1)\n        .enforceHttps(true)\n        .nodeToNodeEncryption(true)\n        .encryptionAtRest(EncryptionAtRestOptions.builder()\n                .enabled(true)\n                .build())\n        .fineGrainedAccessControl(AdvancedSecurityOptions.builder()\n                .masterUserName(\"master-user\")\n                .build())\n        .build();\n\nSecretValue masterUserPassword = domain.getMasterUserPassword();",
          "version": "1"
        },
        "go": {
          "source": "domain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_1(),\n\tenforceHttps: jsii.Boolean(true),\n\tnodeToNodeEncryption: jsii.Boolean(true),\n\tencryptionAtRest: &encryptionAtRestOptions{\n\t\tenabled: jsii.Boolean(true),\n\t},\n\tfineGrainedAccessControl: &advancedSecurityOptions{\n\t\tmasterUserName: jsii.String(\"master-user\"),\n\t},\n})\n\nmasterUserPassword := domain.masterUserPassword",
          "version": "1"
        },
        "$": {
          "source": "const domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  enforceHttps: true,\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n  fineGrainedAccessControl: {\n    masterUserName: 'master-user',\n  },\n});\n\nconst masterUserPassword = domain.masterUserPassword;",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.EncryptionAtRestOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.AdvancedSecurityOptions",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.Domain#masterUserPassword",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_1",
        "@aws-cdk/aws-elasticsearch.EncryptionAtRestOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  enforceHttps: true,\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n  fineGrainedAccessControl: {\n    masterUserName: 'master-user',\n  },\n});\n\nconst masterUserPassword = domain.masterUserPassword;\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 16,
        "104": 1,
        "106": 3,
        "193": 3,
        "194": 4,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 7
      },
      "fqnsFingerprint": "6093278a5fb2437de2a0a0abaff995e75bb23c5f163d7d0a25151d34b91c576e"
    },
    "44bcc575be2508fafcc0cf7b0705f88dec9a5001245de3928aad36d70f1b77f3": {
      "translations": {
        "python": {
          "source": "prod_domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_1,\n    capacity=es.CapacityConfig(\n        master_nodes=5,\n        data_nodes=20\n    ),\n    ebs=es.EbsOptions(\n        volume_size=20\n    ),\n    zone_awareness=es.ZoneAwarenessConfig(\n        availability_zone_count=3\n    ),\n    logging=es.LoggingOptions(\n        slow_search_log_enabled=True,\n        app_log_enabled=True,\n        slow_index_log_enabled=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Domain prodDomain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_1,\n    Capacity = new CapacityConfig {\n        MasterNodes = 5,\n        DataNodes = 20\n    },\n    Ebs = new EbsOptions {\n        VolumeSize = 20\n    },\n    ZoneAwareness = new ZoneAwarenessConfig {\n        AvailabilityZoneCount = 3\n    },\n    Logging = new LoggingOptions {\n        SlowSearchLogEnabled = true,\n        AppLogEnabled = true,\n        SlowIndexLogEnabled = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain prodDomain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_1)\n        .capacity(CapacityConfig.builder()\n                .masterNodes(5)\n                .dataNodes(20)\n                .build())\n        .ebs(EbsOptions.builder()\n                .volumeSize(20)\n                .build())\n        .zoneAwareness(ZoneAwarenessConfig.builder()\n                .availabilityZoneCount(3)\n                .build())\n        .logging(LoggingOptions.builder()\n                .slowSearchLogEnabled(true)\n                .appLogEnabled(true)\n                .slowIndexLogEnabled(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "prodDomain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_1(),\n\tcapacity: &capacityConfig{\n\t\tmasterNodes: jsii.Number(5),\n\t\tdataNodes: jsii.Number(20),\n\t},\n\tebs: &ebsOptions{\n\t\tvolumeSize: jsii.Number(20),\n\t},\n\tzoneAwareness: &zoneAwarenessConfig{\n\t\tavailabilityZoneCount: jsii.Number(3),\n\t},\n\tlogging: &loggingOptions{\n\t\tslowSearchLogEnabled: jsii.Boolean(true),\n\t\tappLogEnabled: jsii.Boolean(true),\n\t\tslowIndexLogEnabled: jsii.Boolean(true),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const prodDomain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  capacity: {\n    masterNodes: 5,\n    dataNodes: 20,\n  },\n  ebs: {\n    volumeSize: 20,\n  },\n  zoneAwareness: {\n    availabilityZoneCount: 3,\n  },\n  logging: {\n    slowSearchLogEnabled: true,\n    appLogEnabled: true,\n    slowIndexLogEnabled: true,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.LoggingOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CapacityConfig",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.EbsOptions",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_1",
        "@aws-cdk/aws-elasticsearch.LoggingOptions",
        "@aws-cdk/aws-elasticsearch.ZoneAwarenessConfig",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst prodDomain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  capacity: {\n    masterNodes: 5,\n    dataNodes: 20,\n  },\n  ebs: {\n    volumeSize: 20,\n  },\n  zoneAwareness: {\n    availabilityZoneCount: 3,\n  },\n  logging: {\n    slowSearchLogEnabled: true,\n    appLogEnabled: true,\n    slowIndexLogEnabled: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 1,
        "75": 18,
        "104": 1,
        "106": 3,
        "193": 5,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 12
      },
      "fqnsFingerprint": "bc87b57348d870dc8024e2bde14192dd05cd5a85e8cdc515f479ba1e2463a994"
    },
    "53aa36882167cfd039a17f9a4e0c9a3fb7033301150193f636d2c94ad2198433": {
      "translations": {
        "python": {
          "source": "prod_domain = es.Domain(self, \"Domain\",\n    version=es.ElasticsearchVersion.V7_1,\n    capacity=es.CapacityConfig(\n        master_nodes=5,\n        data_nodes=20\n    ),\n    ebs=es.EbsOptions(\n        volume_size=20\n    ),\n    zone_awareness=es.ZoneAwarenessConfig(\n        availability_zone_count=3\n    ),\n    logging=es.LoggingOptions(\n        slow_search_log_enabled=True,\n        app_log_enabled=True,\n        slow_index_log_enabled=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Domain prodDomain = new Domain(this, \"Domain\", new DomainProps {\n    Version = ElasticsearchVersion.V7_1,\n    Capacity = new CapacityConfig {\n        MasterNodes = 5,\n        DataNodes = 20\n    },\n    Ebs = new EbsOptions {\n        VolumeSize = 20\n    },\n    ZoneAwareness = new ZoneAwarenessConfig {\n        AvailabilityZoneCount = 3\n    },\n    Logging = new LoggingOptions {\n        SlowSearchLogEnabled = true,\n        AppLogEnabled = true,\n        SlowIndexLogEnabled = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Domain prodDomain = Domain.Builder.create(this, \"Domain\")\n        .version(ElasticsearchVersion.V7_1)\n        .capacity(CapacityConfig.builder()\n                .masterNodes(5)\n                .dataNodes(20)\n                .build())\n        .ebs(EbsOptions.builder()\n                .volumeSize(20)\n                .build())\n        .zoneAwareness(ZoneAwarenessConfig.builder()\n                .availabilityZoneCount(3)\n                .build())\n        .logging(LoggingOptions.builder()\n                .slowSearchLogEnabled(true)\n                .appLogEnabled(true)\n                .slowIndexLogEnabled(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "prodDomain := es.NewDomain(this, jsii.String(\"Domain\"), &domainProps{\n\tversion: es.elasticsearchVersion_V7_1(),\n\tcapacity: &capacityConfig{\n\t\tmasterNodes: jsii.Number(5),\n\t\tdataNodes: jsii.Number(20),\n\t},\n\tebs: &ebsOptions{\n\t\tvolumeSize: jsii.Number(20),\n\t},\n\tzoneAwareness: &zoneAwarenessConfig{\n\t\tavailabilityZoneCount: jsii.Number(3),\n\t},\n\tlogging: &loggingOptions{\n\t\tslowSearchLogEnabled: jsii.Boolean(true),\n\t\tappLogEnabled: jsii.Boolean(true),\n\t\tslowIndexLogEnabled: jsii.Boolean(true),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const prodDomain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  capacity: {\n    masterNodes: 5,\n    dataNodes: 20,\n  },\n  ebs: {\n    volumeSize: 20,\n  },\n  zoneAwareness: {\n    availabilityZoneCount: 3,\n  },\n  logging: {\n    slowSearchLogEnabled: true,\n    appLogEnabled: true,\n    slowIndexLogEnabled: true,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticsearch.ZoneAwarenessConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticsearch.CapacityConfig",
        "@aws-cdk/aws-elasticsearch.Domain",
        "@aws-cdk/aws-elasticsearch.DomainProps",
        "@aws-cdk/aws-elasticsearch.EbsOptions",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion",
        "@aws-cdk/aws-elasticsearch.ElasticsearchVersion#V7_1",
        "@aws-cdk/aws-elasticsearch.LoggingOptions",
        "@aws-cdk/aws-elasticsearch.ZoneAwarenessConfig",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst prodDomain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  capacity: {\n    masterNodes: 5,\n    dataNodes: 20,\n  },\n  ebs: {\n    volumeSize: 20,\n  },\n  zoneAwareness: {\n    availabilityZoneCount: 3,\n  },\n  logging: {\n    slowSearchLogEnabled: true,\n    appLogEnabled: true,\n    slowIndexLogEnabled: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 1,
        "75": 18,
        "104": 1,
        "106": 3,
        "193": 5,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 12
      },
      "fqnsFingerprint": "bc87b57348d870dc8024e2bde14192dd05cd5a85e8cdc515f479ba1e2463a994"
    }
  }
}