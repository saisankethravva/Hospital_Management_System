function _aws_cdk_aws_rds_IEngine(p) {
}
function _aws_cdk_aws_rds_EngineVersion(p) {
}
function _aws_cdk_aws_rds_DatabaseClusterBase(p) {
}
function _aws_cdk_aws_rds_DatabaseClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.engine))
            _aws_cdk_aws_rds_IClusterEngine(p.engine);
        if (!visitedObjects.has(p.instanceProps))
            _aws_cdk_aws_rds_InstanceProps(p.instanceProps);
        if (!visitedObjects.has(p.backup))
            _aws_cdk_aws_rds_BackupProps(p.backup);
        if (!visitedObjects.has(p.credentials))
            _aws_cdk_aws_rds_Credentials(p.credentials);
        if (!visitedObjects.has(p.parameterGroup))
            _aws_cdk_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.s3ExportBuckets))
            require("@aws-cdk/aws-s3/.warnings.jsii.js")._aws_cdk_aws_s3_IBucket(p.s3ExportBuckets);
        if (!visitedObjects.has(p.s3ImportBuckets))
            require("@aws-cdk/aws-s3/.warnings.jsii.js")._aws_cdk_aws_s3_IBucket(p.s3ImportBuckets);
        if (!visitedObjects.has(p.subnetGroup))
            _aws_cdk_aws_rds_ISubnetGroup(p.subnetGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_DatabaseCluster(p) {
}
function _aws_cdk_aws_rds_DatabaseClusterFromSnapshotProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.engine))
            _aws_cdk_aws_rds_IClusterEngine(p.engine);
        if (!visitedObjects.has(p.instanceProps))
            _aws_cdk_aws_rds_InstanceProps(p.instanceProps);
        if (!visitedObjects.has(p.backup))
            _aws_cdk_aws_rds_BackupProps(p.backup);
        if (!visitedObjects.has(p.credentials))
            _aws_cdk_aws_rds_Credentials(p.credentials);
        if (!visitedObjects.has(p.parameterGroup))
            _aws_cdk_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.s3ExportBuckets))
            require("@aws-cdk/aws-s3/.warnings.jsii.js")._aws_cdk_aws_s3_IBucket(p.s3ExportBuckets);
        if (!visitedObjects.has(p.s3ImportBuckets))
            require("@aws-cdk/aws-s3/.warnings.jsii.js")._aws_cdk_aws_s3_IBucket(p.s3ImportBuckets);
        if (!visitedObjects.has(p.subnetGroup))
            _aws_cdk_aws_rds_ISubnetGroup(p.subnetGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_DatabaseClusterFromSnapshot(p) {
}
function _aws_cdk_aws_rds_IDatabaseCluster(p) {
}
function _aws_cdk_aws_rds_DatabaseClusterAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.engine))
            _aws_cdk_aws_rds_IClusterEngine(p.engine);
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_ClusterEngineBindOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameterGroup))
            _aws_cdk_aws_rds_IParameterGroup(p.parameterGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_ClusterEngineConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.features))
            _aws_cdk_aws_rds_ClusterEngineFeatures(p.features);
        if (!visitedObjects.has(p.parameterGroup))
            _aws_cdk_aws_rds_IParameterGroup(p.parameterGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_ClusterEngineFeatures(p) {
}
function _aws_cdk_aws_rds_IClusterEngine(p) {
}
function _aws_cdk_aws_rds_AuroraEngineVersion(p) {
}
function _aws_cdk_aws_rds_AuroraClusterEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            _aws_cdk_aws_rds_AuroraEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_AuroraMysqlEngineVersion(p) {
}
function _aws_cdk_aws_rds_AuroraMysqlClusterEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            _aws_cdk_aws_rds_AuroraMysqlEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_AuroraPostgresEngineFeatures(p) {
}
function _aws_cdk_aws_rds_AuroraPostgresEngineVersion(p) {
}
function _aws_cdk_aws_rds_AuroraPostgresClusterEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            _aws_cdk_aws_rds_AuroraPostgresEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_DatabaseClusterEngine(p) {
}
function _aws_cdk_aws_rds_InstanceEngineBindOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.optionGroup))
            _aws_cdk_aws_rds_IOptionGroup(p.optionGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_InstanceEngineConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.features))
            _aws_cdk_aws_rds_InstanceEngineFeatures(p.features);
        if (!visitedObjects.has(p.optionGroup))
            _aws_cdk_aws_rds_IOptionGroup(p.optionGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_InstanceEngineFeatures(p) {
}
function _aws_cdk_aws_rds_IInstanceEngine(p) {
}
function _aws_cdk_aws_rds_MariaDbEngineVersion(p) {
}
function _aws_cdk_aws_rds_MariaDbInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            _aws_cdk_aws_rds_MariaDbEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_MysqlEngineVersion(p) {
}
function _aws_cdk_aws_rds_MySqlInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            _aws_cdk_aws_rds_MysqlEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_PostgresEngineFeatures(p) {
}
function _aws_cdk_aws_rds_PostgresEngineVersion(p) {
}
function _aws_cdk_aws_rds_PostgresInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            _aws_cdk_aws_rds_PostgresEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_OracleLegacyEngineVersion(p) {
}
function _aws_cdk_aws_rds_OracleEngineVersion(p) {
}
function _aws_cdk_aws_rds_OracleSeInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("version" in p)
            print("@aws-cdk/aws-rds.OracleSeInstanceEngineProps#version", "instances can no longer be created with this engine. See https://forums.aws.amazon.com/ann.jspa?annID=7341");
        if (!visitedObjects.has(p.version))
            _aws_cdk_aws_rds_OracleLegacyEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_OracleSe1InstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("version" in p)
            print("@aws-cdk/aws-rds.OracleSe1InstanceEngineProps#version", "instances can no longer be created with this engine. See https://forums.aws.amazon.com/ann.jspa?annID=7341");
        if (!visitedObjects.has(p.version))
            _aws_cdk_aws_rds_OracleLegacyEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_OracleSe2InstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            _aws_cdk_aws_rds_OracleEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_OracleEeInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            _aws_cdk_aws_rds_OracleEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_SqlServerEngineVersion(p) {
}
function _aws_cdk_aws_rds_SqlServerSeInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            _aws_cdk_aws_rds_SqlServerEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_SqlServerExInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            _aws_cdk_aws_rds_SqlServerEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_SqlServerWebInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            _aws_cdk_aws_rds_SqlServerEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_SqlServerEeInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            _aws_cdk_aws_rds_SqlServerEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_DatabaseInstanceEngine(p) {
}
function _aws_cdk_aws_rds_InstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameterGroup))
            _aws_cdk_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.performanceInsightRetention))
            _aws_cdk_aws_rds_PerformanceInsightRetention(p.performanceInsightRetention);
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_BackupProps(p) {
}
function _aws_cdk_aws_rds_CredentialsBaseOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.replicaRegions))
            require("@aws-cdk/aws-secretsmanager/.warnings.jsii.js")._aws_cdk_aws_secretsmanager_ReplicaRegion(p.replicaRegions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_CredentialsFromUsernameOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.replicaRegions))
            require("@aws-cdk/aws-secretsmanager/.warnings.jsii.js")._aws_cdk_aws_secretsmanager_ReplicaRegion(p.replicaRegions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_Credentials(p) {
}
function _aws_cdk_aws_rds_SnapshotCredentialsFromGeneratedPasswordOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.replicaRegions))
            require("@aws-cdk/aws-secretsmanager/.warnings.jsii.js")._aws_cdk_aws_secretsmanager_ReplicaRegion(p.replicaRegions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_SnapshotCredentials(p) {
}
function _aws_cdk_aws_rds_CommonRotationUserOptions(p) {
}
function _aws_cdk_aws_rds_RotationSingleUserOptions(p) {
}
function _aws_cdk_aws_rds_RotationMultiUserOptions(p) {
}
function _aws_cdk_aws_rds_PerformanceInsightRetention(p) {
}
function _aws_cdk_aws_rds_ParameterGroupClusterBindOptions(p) {
}
function _aws_cdk_aws_rds_ParameterGroupClusterConfig(p) {
}
function _aws_cdk_aws_rds_ParameterGroupInstanceBindOptions(p) {
}
function _aws_cdk_aws_rds_ParameterGroupInstanceConfig(p) {
}
function _aws_cdk_aws_rds_IParameterGroup(p) {
}
function _aws_cdk_aws_rds_ParameterGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.engine))
            _aws_cdk_aws_rds_IEngine(p.engine);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_ParameterGroup(p) {
}
function _aws_cdk_aws_rds_DatabaseSecretProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.replicaRegions))
            require("@aws-cdk/aws-secretsmanager/.warnings.jsii.js")._aws_cdk_aws_secretsmanager_ReplicaRegion(p.replicaRegions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_DatabaseSecret(p) {
}
function _aws_cdk_aws_rds_Endpoint(p) {
}
function _aws_cdk_aws_rds_IOptionGroup(p) {
}
function _aws_cdk_aws_rds_OptionConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_OptionGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurations))
            _aws_cdk_aws_rds_OptionConfiguration(p.configurations);
        if (!visitedObjects.has(p.engine))
            _aws_cdk_aws_rds_IInstanceEngine(p.engine);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_OptionGroup(p) {
}
function _aws_cdk_aws_rds_IDatabaseInstance(p) {
}
function _aws_cdk_aws_rds_DatabaseInstanceAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
        if (!visitedObjects.has(p.engine))
            _aws_cdk_aws_rds_IInstanceEngine(p.engine);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_DatabaseInstanceBase(p) {
}
function _aws_cdk_aws_rds_LicenseModel(p) {
}
function _aws_cdk_aws_rds_ProcessorFeatures(p) {
}
function _aws_cdk_aws_rds_StorageType(p) {
}
function _aws_cdk_aws_rds_DatabaseInstanceNewProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.optionGroup))
            _aws_cdk_aws_rds_IOptionGroup(p.optionGroup);
        if (!visitedObjects.has(p.parameterGroup))
            _aws_cdk_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.performanceInsightRetention))
            _aws_cdk_aws_rds_PerformanceInsightRetention(p.performanceInsightRetention);
        if (!visitedObjects.has(p.processorFeatures))
            _aws_cdk_aws_rds_ProcessorFeatures(p.processorFeatures);
        if (!visitedObjects.has(p.s3ExportBuckets))
            require("@aws-cdk/aws-s3/.warnings.jsii.js")._aws_cdk_aws_s3_IBucket(p.s3ExportBuckets);
        if (!visitedObjects.has(p.s3ImportBuckets))
            require("@aws-cdk/aws-s3/.warnings.jsii.js")._aws_cdk_aws_s3_IBucket(p.s3ImportBuckets);
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
        if (!visitedObjects.has(p.storageType))
            _aws_cdk_aws_rds_StorageType(p.storageType);
        if (!visitedObjects.has(p.subnetGroup))
            _aws_cdk_aws_rds_ISubnetGroup(p.subnetGroup);
        if ("vpcPlacement" in p)
            print("@aws-cdk/aws-rds.DatabaseInstanceNewProps#vpcPlacement", "use `vpcSubnets`");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_DatabaseInstanceSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.engine))
            _aws_cdk_aws_rds_IInstanceEngine(p.engine);
        if (!visitedObjects.has(p.licenseModel))
            _aws_cdk_aws_rds_LicenseModel(p.licenseModel);
        if (!visitedObjects.has(p.optionGroup))
            _aws_cdk_aws_rds_IOptionGroup(p.optionGroup);
        if (!visitedObjects.has(p.parameterGroup))
            _aws_cdk_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.performanceInsightRetention))
            _aws_cdk_aws_rds_PerformanceInsightRetention(p.performanceInsightRetention);
        if (!visitedObjects.has(p.processorFeatures))
            _aws_cdk_aws_rds_ProcessorFeatures(p.processorFeatures);
        if (!visitedObjects.has(p.s3ExportBuckets))
            require("@aws-cdk/aws-s3/.warnings.jsii.js")._aws_cdk_aws_s3_IBucket(p.s3ExportBuckets);
        if (!visitedObjects.has(p.s3ImportBuckets))
            require("@aws-cdk/aws-s3/.warnings.jsii.js")._aws_cdk_aws_s3_IBucket(p.s3ImportBuckets);
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
        if (!visitedObjects.has(p.storageType))
            _aws_cdk_aws_rds_StorageType(p.storageType);
        if (!visitedObjects.has(p.subnetGroup))
            _aws_cdk_aws_rds_ISubnetGroup(p.subnetGroup);
        if ("vpcPlacement" in p)
            print("@aws-cdk/aws-rds.DatabaseInstanceNewProps#vpcPlacement", "use `vpcSubnets`");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_DatabaseInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            _aws_cdk_aws_rds_Credentials(p.credentials);
        if (!visitedObjects.has(p.engine))
            _aws_cdk_aws_rds_IInstanceEngine(p.engine);
        if (!visitedObjects.has(p.licenseModel))
            _aws_cdk_aws_rds_LicenseModel(p.licenseModel);
        if (!visitedObjects.has(p.optionGroup))
            _aws_cdk_aws_rds_IOptionGroup(p.optionGroup);
        if (!visitedObjects.has(p.parameterGroup))
            _aws_cdk_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.performanceInsightRetention))
            _aws_cdk_aws_rds_PerformanceInsightRetention(p.performanceInsightRetention);
        if (!visitedObjects.has(p.processorFeatures))
            _aws_cdk_aws_rds_ProcessorFeatures(p.processorFeatures);
        if (!visitedObjects.has(p.s3ExportBuckets))
            require("@aws-cdk/aws-s3/.warnings.jsii.js")._aws_cdk_aws_s3_IBucket(p.s3ExportBuckets);
        if (!visitedObjects.has(p.s3ImportBuckets))
            require("@aws-cdk/aws-s3/.warnings.jsii.js")._aws_cdk_aws_s3_IBucket(p.s3ImportBuckets);
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
        if (!visitedObjects.has(p.storageType))
            _aws_cdk_aws_rds_StorageType(p.storageType);
        if (!visitedObjects.has(p.subnetGroup))
            _aws_cdk_aws_rds_ISubnetGroup(p.subnetGroup);
        if ("vpcPlacement" in p)
            print("@aws-cdk/aws-rds.DatabaseInstanceNewProps#vpcPlacement", "use `vpcSubnets`");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_DatabaseInstance(p) {
}
function _aws_cdk_aws_rds_DatabaseInstanceFromSnapshotProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            _aws_cdk_aws_rds_SnapshotCredentials(p.credentials);
        if (!visitedObjects.has(p.engine))
            _aws_cdk_aws_rds_IInstanceEngine(p.engine);
        if (!visitedObjects.has(p.licenseModel))
            _aws_cdk_aws_rds_LicenseModel(p.licenseModel);
        if (!visitedObjects.has(p.optionGroup))
            _aws_cdk_aws_rds_IOptionGroup(p.optionGroup);
        if (!visitedObjects.has(p.parameterGroup))
            _aws_cdk_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.performanceInsightRetention))
            _aws_cdk_aws_rds_PerformanceInsightRetention(p.performanceInsightRetention);
        if (!visitedObjects.has(p.processorFeatures))
            _aws_cdk_aws_rds_ProcessorFeatures(p.processorFeatures);
        if (!visitedObjects.has(p.s3ExportBuckets))
            require("@aws-cdk/aws-s3/.warnings.jsii.js")._aws_cdk_aws_s3_IBucket(p.s3ExportBuckets);
        if (!visitedObjects.has(p.s3ImportBuckets))
            require("@aws-cdk/aws-s3/.warnings.jsii.js")._aws_cdk_aws_s3_IBucket(p.s3ImportBuckets);
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
        if (!visitedObjects.has(p.storageType))
            _aws_cdk_aws_rds_StorageType(p.storageType);
        if (!visitedObjects.has(p.subnetGroup))
            _aws_cdk_aws_rds_ISubnetGroup(p.subnetGroup);
        if ("vpcPlacement" in p)
            print("@aws-cdk/aws-rds.DatabaseInstanceNewProps#vpcPlacement", "use `vpcSubnets`");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_DatabaseInstanceFromSnapshot(p) {
}
function _aws_cdk_aws_rds_DatabaseInstanceReadReplicaProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceDatabaseInstance))
            _aws_cdk_aws_rds_IDatabaseInstance(p.sourceDatabaseInstance);
        if (!visitedObjects.has(p.optionGroup))
            _aws_cdk_aws_rds_IOptionGroup(p.optionGroup);
        if (!visitedObjects.has(p.parameterGroup))
            _aws_cdk_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.performanceInsightRetention))
            _aws_cdk_aws_rds_PerformanceInsightRetention(p.performanceInsightRetention);
        if (!visitedObjects.has(p.processorFeatures))
            _aws_cdk_aws_rds_ProcessorFeatures(p.processorFeatures);
        if (!visitedObjects.has(p.s3ExportBuckets))
            require("@aws-cdk/aws-s3/.warnings.jsii.js")._aws_cdk_aws_s3_IBucket(p.s3ExportBuckets);
        if (!visitedObjects.has(p.s3ImportBuckets))
            require("@aws-cdk/aws-s3/.warnings.jsii.js")._aws_cdk_aws_s3_IBucket(p.s3ImportBuckets);
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
        if (!visitedObjects.has(p.storageType))
            _aws_cdk_aws_rds_StorageType(p.storageType);
        if (!visitedObjects.has(p.subnetGroup))
            _aws_cdk_aws_rds_ISubnetGroup(p.subnetGroup);
        if ("vpcPlacement" in p)
            print("@aws-cdk/aws-rds.DatabaseInstanceNewProps#vpcPlacement", "use `vpcSubnets`");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_DatabaseInstanceReadReplica(p) {
}
function _aws_cdk_aws_rds_SessionPinningFilter(p) {
}
function _aws_cdk_aws_rds_ProxyTarget(p) {
}
function _aws_cdk_aws_rds_ProxyTargetConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dbClusters))
            _aws_cdk_aws_rds_IDatabaseCluster(p.dbClusters);
        if (!visitedObjects.has(p.dbInstances))
            _aws_cdk_aws_rds_IDatabaseInstance(p.dbInstances);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_DatabaseProxyOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.secrets))
            require("@aws-cdk/aws-secretsmanager/.warnings.jsii.js")._aws_cdk_aws_secretsmanager_ISecret(p.secrets);
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
        if (!visitedObjects.has(p.sessionPinningFilters))
            _aws_cdk_aws_rds_SessionPinningFilter(p.sessionPinningFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_DatabaseProxyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.proxyTarget))
            _aws_cdk_aws_rds_ProxyTarget(p.proxyTarget);
        if (!visitedObjects.has(p.secrets))
            require("@aws-cdk/aws-secretsmanager/.warnings.jsii.js")._aws_cdk_aws_secretsmanager_ISecret(p.secrets);
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
        if (!visitedObjects.has(p.sessionPinningFilters))
            _aws_cdk_aws_rds_SessionPinningFilter(p.sessionPinningFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_DatabaseProxyAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_IDatabaseProxy(p) {
}
function _aws_cdk_aws_rds_DatabaseProxy(p) {
}
function _aws_cdk_aws_rds_IServerlessCluster(p) {
}
function _aws_cdk_aws_rds_ServerlessClusterAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_AuroraCapacityUnit(p) {
}
function _aws_cdk_aws_rds_ServerlessScalingOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maxCapacity))
            _aws_cdk_aws_rds_AuroraCapacityUnit(p.maxCapacity);
        if (!visitedObjects.has(p.minCapacity))
            _aws_cdk_aws_rds_AuroraCapacityUnit(p.minCapacity);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_ServerlessClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.engine))
            _aws_cdk_aws_rds_IClusterEngine(p.engine);
        if (!visitedObjects.has(p.credentials))
            _aws_cdk_aws_rds_Credentials(p.credentials);
        if (!visitedObjects.has(p.parameterGroup))
            _aws_cdk_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.scaling))
            _aws_cdk_aws_rds_ServerlessScalingOptions(p.scaling);
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
        if (!visitedObjects.has(p.subnetGroup))
            _aws_cdk_aws_rds_ISubnetGroup(p.subnetGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_ServerlessCluster(p) {
}
function _aws_cdk_aws_rds_ServerlessClusterFromSnapshotProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.engine))
            _aws_cdk_aws_rds_IClusterEngine(p.engine);
        if (!visitedObjects.has(p.credentials))
            _aws_cdk_aws_rds_SnapshotCredentials(p.credentials);
        if (!visitedObjects.has(p.parameterGroup))
            _aws_cdk_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.scaling))
            _aws_cdk_aws_rds_ServerlessScalingOptions(p.scaling);
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
        if (!visitedObjects.has(p.subnetGroup))
            _aws_cdk_aws_rds_ISubnetGroup(p.subnetGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_ServerlessClusterFromSnapshot(p) {
}
function _aws_cdk_aws_rds_ISubnetGroup(p) {
}
function _aws_cdk_aws_rds_SubnetGroupProps(p) {
}
function _aws_cdk_aws_rds_SubnetGroup(p) {
}
function _aws_cdk_aws_rds_CfnDBClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_CfnDBCluster(p) {
}
function _aws_cdk_aws_rds_CfnDBCluster_DBClusterRoleProperty(p) {
}
function _aws_cdk_aws_rds_CfnDBCluster_ScalingConfigurationProperty(p) {
}
function _aws_cdk_aws_rds_CfnDBClusterParameterGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_CfnDBClusterParameterGroup(p) {
}
function _aws_cdk_aws_rds_CfnDBInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_CfnDBInstance(p) {
}
function _aws_cdk_aws_rds_CfnDBInstance_DBInstanceRoleProperty(p) {
}
function _aws_cdk_aws_rds_CfnDBInstance_EndpointProperty(p) {
}
function _aws_cdk_aws_rds_CfnDBInstance_ProcessorFeatureProperty(p) {
}
function _aws_cdk_aws_rds_CfnDBParameterGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_CfnDBParameterGroup(p) {
}
function _aws_cdk_aws_rds_CfnDBProxyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            _aws_cdk_aws_rds_CfnDBProxy_TagFormatProperty(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_CfnDBProxy(p) {
}
function _aws_cdk_aws_rds_CfnDBProxy_AuthFormatProperty(p) {
}
function _aws_cdk_aws_rds_CfnDBProxy_TagFormatProperty(p) {
}
function _aws_cdk_aws_rds_CfnDBProxyEndpointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            _aws_cdk_aws_rds_CfnDBProxyEndpoint_TagFormatProperty(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_CfnDBProxyEndpoint(p) {
}
function _aws_cdk_aws_rds_CfnDBProxyEndpoint_TagFormatProperty(p) {
}
function _aws_cdk_aws_rds_CfnDBProxyTargetGroupProps(p) {
}
function _aws_cdk_aws_rds_CfnDBProxyTargetGroup(p) {
}
function _aws_cdk_aws_rds_CfnDBProxyTargetGroup_ConnectionPoolConfigurationInfoFormatProperty(p) {
}
function _aws_cdk_aws_rds_CfnDBSecurityGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_CfnDBSecurityGroup(p) {
}
function _aws_cdk_aws_rds_CfnDBSecurityGroup_IngressProperty(p) {
}
function _aws_cdk_aws_rds_CfnDBSecurityGroupIngressProps(p) {
}
function _aws_cdk_aws_rds_CfnDBSecurityGroupIngress(p) {
}
function _aws_cdk_aws_rds_CfnDBSubnetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_CfnDBSubnetGroup(p) {
}
function _aws_cdk_aws_rds_CfnEventSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_CfnEventSubscription(p) {
}
function _aws_cdk_aws_rds_CfnGlobalClusterProps(p) {
}
function _aws_cdk_aws_rds_CfnGlobalCluster(p) {
}
function _aws_cdk_aws_rds_CfnOptionGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_rds_CfnOptionGroup(p) {
}
function _aws_cdk_aws_rds_CfnOptionGroup_OptionConfigurationProperty(p) {
}
function _aws_cdk_aws_rds_CfnOptionGroup_OptionSettingProperty(p) {
}
function print(name, deprecationMessage) {
    const deprecated = process.env.JSII_DEPRECATED;
    const deprecationMode = ["warn", "fail", "quiet"].includes(deprecated) ? deprecated : "warn";
    const message = `${name} is deprecated.\n  ${deprecationMessage.trim()}\n  This API will be removed in the next major release.`;
    switch (deprecationMode) {
        case "fail":
            throw new DeprecationError(message);
        case "warn":
            console.warn("[WARNING]", message);
            break;
    }
}
function getPropertyDescriptor(obj, prop) {
    const descriptor = Object.getOwnPropertyDescriptor(obj, prop);
    if (descriptor) {
        return descriptor;
    }
    const proto = Object.getPrototypeOf(obj);
    const prototypeDescriptor = proto && getPropertyDescriptor(proto, prop);
    if (prototypeDescriptor) {
        return prototypeDescriptor;
    }
    return {};
}
const visitedObjects = new Set();
class DeprecationError extends Error {
    constructor(...args) {
        super(...args);
        Object.defineProperty(this, "name", {
            configurable: false,
            enumerable: true,
            value: "DeprecationError",
            writable: false,
        });
    }
}
module.exports = { print, getPropertyDescriptor, DeprecationError, _aws_cdk_aws_rds_IEngine, _aws_cdk_aws_rds_EngineVersion, _aws_cdk_aws_rds_DatabaseClusterBase, _aws_cdk_aws_rds_DatabaseClusterProps, _aws_cdk_aws_rds_DatabaseCluster, _aws_cdk_aws_rds_DatabaseClusterFromSnapshotProps, _aws_cdk_aws_rds_DatabaseClusterFromSnapshot, _aws_cdk_aws_rds_IDatabaseCluster, _aws_cdk_aws_rds_DatabaseClusterAttributes, _aws_cdk_aws_rds_ClusterEngineBindOptions, _aws_cdk_aws_rds_ClusterEngineConfig, _aws_cdk_aws_rds_ClusterEngineFeatures, _aws_cdk_aws_rds_IClusterEngine, _aws_cdk_aws_rds_AuroraEngineVersion, _aws_cdk_aws_rds_AuroraClusterEngineProps, _aws_cdk_aws_rds_AuroraMysqlEngineVersion, _aws_cdk_aws_rds_AuroraMysqlClusterEngineProps, _aws_cdk_aws_rds_AuroraPostgresEngineFeatures, _aws_cdk_aws_rds_AuroraPostgresEngineVersion, _aws_cdk_aws_rds_AuroraPostgresClusterEngineProps, _aws_cdk_aws_rds_DatabaseClusterEngine, _aws_cdk_aws_rds_InstanceEngineBindOptions, _aws_cdk_aws_rds_InstanceEngineConfig, _aws_cdk_aws_rds_InstanceEngineFeatures, _aws_cdk_aws_rds_IInstanceEngine, _aws_cdk_aws_rds_MariaDbEngineVersion, _aws_cdk_aws_rds_MariaDbInstanceEngineProps, _aws_cdk_aws_rds_MysqlEngineVersion, _aws_cdk_aws_rds_MySqlInstanceEngineProps, _aws_cdk_aws_rds_PostgresEngineFeatures, _aws_cdk_aws_rds_PostgresEngineVersion, _aws_cdk_aws_rds_PostgresInstanceEngineProps, _aws_cdk_aws_rds_OracleLegacyEngineVersion, _aws_cdk_aws_rds_OracleEngineVersion, _aws_cdk_aws_rds_OracleSeInstanceEngineProps, _aws_cdk_aws_rds_OracleSe1InstanceEngineProps, _aws_cdk_aws_rds_OracleSe2InstanceEngineProps, _aws_cdk_aws_rds_OracleEeInstanceEngineProps, _aws_cdk_aws_rds_SqlServerEngineVersion, _aws_cdk_aws_rds_SqlServerSeInstanceEngineProps, _aws_cdk_aws_rds_SqlServerExInstanceEngineProps, _aws_cdk_aws_rds_SqlServerWebInstanceEngineProps, _aws_cdk_aws_rds_SqlServerEeInstanceEngineProps, _aws_cdk_aws_rds_DatabaseInstanceEngine, _aws_cdk_aws_rds_InstanceProps, _aws_cdk_aws_rds_BackupProps, _aws_cdk_aws_rds_CredentialsBaseOptions, _aws_cdk_aws_rds_CredentialsFromUsernameOptions, _aws_cdk_aws_rds_Credentials, _aws_cdk_aws_rds_SnapshotCredentialsFromGeneratedPasswordOptions, _aws_cdk_aws_rds_SnapshotCredentials, _aws_cdk_aws_rds_CommonRotationUserOptions, _aws_cdk_aws_rds_RotationSingleUserOptions, _aws_cdk_aws_rds_RotationMultiUserOptions, _aws_cdk_aws_rds_PerformanceInsightRetention, _aws_cdk_aws_rds_ParameterGroupClusterBindOptions, _aws_cdk_aws_rds_ParameterGroupClusterConfig, _aws_cdk_aws_rds_ParameterGroupInstanceBindOptions, _aws_cdk_aws_rds_ParameterGroupInstanceConfig, _aws_cdk_aws_rds_IParameterGroup, _aws_cdk_aws_rds_ParameterGroupProps, _aws_cdk_aws_rds_ParameterGroup, _aws_cdk_aws_rds_DatabaseSecretProps, _aws_cdk_aws_rds_DatabaseSecret, _aws_cdk_aws_rds_Endpoint, _aws_cdk_aws_rds_IOptionGroup, _aws_cdk_aws_rds_OptionConfiguration, _aws_cdk_aws_rds_OptionGroupProps, _aws_cdk_aws_rds_OptionGroup, _aws_cdk_aws_rds_IDatabaseInstance, _aws_cdk_aws_rds_DatabaseInstanceAttributes, _aws_cdk_aws_rds_DatabaseInstanceBase, _aws_cdk_aws_rds_LicenseModel, _aws_cdk_aws_rds_ProcessorFeatures, _aws_cdk_aws_rds_StorageType, _aws_cdk_aws_rds_DatabaseInstanceNewProps, _aws_cdk_aws_rds_DatabaseInstanceSourceProps, _aws_cdk_aws_rds_DatabaseInstanceProps, _aws_cdk_aws_rds_DatabaseInstance, _aws_cdk_aws_rds_DatabaseInstanceFromSnapshotProps, _aws_cdk_aws_rds_DatabaseInstanceFromSnapshot, _aws_cdk_aws_rds_DatabaseInstanceReadReplicaProps, _aws_cdk_aws_rds_DatabaseInstanceReadReplica, _aws_cdk_aws_rds_SessionPinningFilter, _aws_cdk_aws_rds_ProxyTarget, _aws_cdk_aws_rds_ProxyTargetConfig, _aws_cdk_aws_rds_DatabaseProxyOptions, _aws_cdk_aws_rds_DatabaseProxyProps, _aws_cdk_aws_rds_DatabaseProxyAttributes, _aws_cdk_aws_rds_IDatabaseProxy, _aws_cdk_aws_rds_DatabaseProxy, _aws_cdk_aws_rds_IServerlessCluster, _aws_cdk_aws_rds_ServerlessClusterAttributes, _aws_cdk_aws_rds_AuroraCapacityUnit, _aws_cdk_aws_rds_ServerlessScalingOptions, _aws_cdk_aws_rds_ServerlessClusterProps, _aws_cdk_aws_rds_ServerlessCluster, _aws_cdk_aws_rds_ServerlessClusterFromSnapshotProps, _aws_cdk_aws_rds_ServerlessClusterFromSnapshot, _aws_cdk_aws_rds_ISubnetGroup, _aws_cdk_aws_rds_SubnetGroupProps, _aws_cdk_aws_rds_SubnetGroup, _aws_cdk_aws_rds_CfnDBClusterProps, _aws_cdk_aws_rds_CfnDBCluster, _aws_cdk_aws_rds_CfnDBCluster_DBClusterRoleProperty, _aws_cdk_aws_rds_CfnDBCluster_ScalingConfigurationProperty, _aws_cdk_aws_rds_CfnDBClusterParameterGroupProps, _aws_cdk_aws_rds_CfnDBClusterParameterGroup, _aws_cdk_aws_rds_CfnDBInstanceProps, _aws_cdk_aws_rds_CfnDBInstance, _aws_cdk_aws_rds_CfnDBInstance_DBInstanceRoleProperty, _aws_cdk_aws_rds_CfnDBInstance_EndpointProperty, _aws_cdk_aws_rds_CfnDBInstance_ProcessorFeatureProperty, _aws_cdk_aws_rds_CfnDBParameterGroupProps, _aws_cdk_aws_rds_CfnDBParameterGroup, _aws_cdk_aws_rds_CfnDBProxyProps, _aws_cdk_aws_rds_CfnDBProxy, _aws_cdk_aws_rds_CfnDBProxy_AuthFormatProperty, _aws_cdk_aws_rds_CfnDBProxy_TagFormatProperty, _aws_cdk_aws_rds_CfnDBProxyEndpointProps, _aws_cdk_aws_rds_CfnDBProxyEndpoint, _aws_cdk_aws_rds_CfnDBProxyEndpoint_TagFormatProperty, _aws_cdk_aws_rds_CfnDBProxyTargetGroupProps, _aws_cdk_aws_rds_CfnDBProxyTargetGroup, _aws_cdk_aws_rds_CfnDBProxyTargetGroup_ConnectionPoolConfigurationInfoFormatProperty, _aws_cdk_aws_rds_CfnDBSecurityGroupProps, _aws_cdk_aws_rds_CfnDBSecurityGroup, _aws_cdk_aws_rds_CfnDBSecurityGroup_IngressProperty, _aws_cdk_aws_rds_CfnDBSecurityGroupIngressProps, _aws_cdk_aws_rds_CfnDBSecurityGroupIngress, _aws_cdk_aws_rds_CfnDBSubnetGroupProps, _aws_cdk_aws_rds_CfnDBSubnetGroup, _aws_cdk_aws_rds_CfnEventSubscriptionProps, _aws_cdk_aws_rds_CfnEventSubscription, _aws_cdk_aws_rds_CfnGlobalClusterProps, _aws_cdk_aws_rds_CfnGlobalCluster, _aws_cdk_aws_rds_CfnOptionGroupProps, _aws_cdk_aws_rds_CfnOptionGroup, _aws_cdk_aws_rds_CfnOptionGroup_OptionConfigurationProperty, _aws_cdk_aws_rds_CfnOptionGroup_OptionSettingProperty };
