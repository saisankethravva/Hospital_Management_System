import { GraphQLError } from 'graphql';
export declare class InvalidTransformerError extends Error {
    constructor(message: string);
}
export declare class SchemaValidationError extends Error {
    constructor(errors: Readonly<GraphQLError[]>);
}
export declare class TransformerContractError extends Error {
    constructor(message: string);
}
export declare class DestructiveMigrationError extends Error {
    private removedModels;
    private replacedModels;
    constructor(message: string, removedModels: string[], replacedModels: string[]);
    toString: () => string;
}
export declare class InvalidMigrationError extends Error {
    causedBy: string;
    fix: string;
    constructor(message: string, causedBy: string, fix: string);
    toString: () => string;
}
export declare class InvalidGSIMigrationError extends InvalidMigrationError {
    fix: string;
    causedBy: string;
    constructor(message: string, causedBy: string, fix: string);
}
export declare class InvalidDirectiveError extends Error {
    constructor(message: string);
}
export declare class UnknownDirectiveError extends Error {
    constructor(message: string);
}
//# sourceMappingURL=errors.d.ts.map