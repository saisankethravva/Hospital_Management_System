import { GraphQLAPIProvider, ModelFieldMap, TransformerResourceHelperProvider } from '@aws-amplify/graphql-transformer-interfaces';
import { StackManager } from './stack-manager';
import { DirectiveNode, FieldNode, ObjectTypeDefinitionNode, ObjectTypeExtensionNode } from 'graphql';
export declare class TransformerResourceHelper implements TransformerResourceHelperProvider {
    #private;
    private stackManager;
    private api?;
    private exclusionSet;
    constructor(stackManager: StackManager);
    generateTableName: (modelName: string) => string;
    generateIAMRoleName: (name: string) => string;
    bind(api: GraphQLAPIProvider): void;
    setModelNameMapping: (modelName: string, mappedName: string) => void;
    getModelNameMapping: (modelName: string) => string;
    isModelRenamed: (modelName: string) => boolean;
    getModelFieldMap: (modelName: string) => ModelFieldMap;
    getFieldNameMapping: (modelName: string, fieldName: string) => string;
    getModelFieldMapKeys: () => string[];
    addDirectiveConfigExclusion: (object: ObjectTypeDefinitionNode | ObjectTypeExtensionNode, field: FieldNode | undefined, directive: DirectiveNode) => void;
    isDirectiveConfigExcluded: (object: ObjectTypeDefinitionNode | ObjectTypeExtensionNode, field: FieldNode | undefined, directive: DirectiveNode) => boolean;
    private ensureEnv;
    private convertDirectiveConfigToKey;
}
//# sourceMappingURL=resource-helper.d.ts.map