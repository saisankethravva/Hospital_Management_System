"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateGetArgumentsInput = exports.DirectiveWrapper = exports.ArgumentWrapper = void 0;
const graphql_1 = require("graphql");
const lodash_1 = __importDefault(require("lodash"));
const DEEP_MERGE_FLAG_NAME = 'shouldDeepMergeDirectiveConfigDefaults';
class ArgumentWrapper {
    constructor(argument) {
        this.serialize = () => {
            return {
                kind: 'Argument',
                name: this.name,
                value: this.value,
            };
        };
        this.name = argument.name;
        this.value = argument.value;
    }
}
exports.ArgumentWrapper = ArgumentWrapper;
class DirectiveWrapper {
    constructor(node) {
        var _a;
        this.arguments = [];
        this.serialize = () => {
            return {
                kind: 'Directive',
                name: this.name,
                arguments: this.arguments.map(arg => arg.serialize()),
            };
        };
        this.getArguments = (defaultValue, options) => {
            const argValues = this.arguments.reduce((acc, arg) => ({
                ...acc,
                [arg.name.value]: (0, graphql_1.valueFromASTUntyped)(arg.value),
            }), {});
            if (options === null || options === void 0 ? void 0 : options.deepMergeArguments) {
                return lodash_1.default.merge(lodash_1.default.cloneDeep(defaultValue), argValues);
            }
            return Object.assign(defaultValue, argValues);
        };
        this.name = node.name;
        this.arguments = ((_a = node.arguments) !== null && _a !== void 0 ? _a : []).map(arg => new ArgumentWrapper(arg));
        this.location = this.location;
    }
}
exports.DirectiveWrapper = DirectiveWrapper;
const generateGetArgumentsInput = (featureFlags) => {
    return {
        deepMergeArguments: featureFlags.getBoolean(DEEP_MERGE_FLAG_NAME, false),
    };
};
exports.generateGetArgumentsInput = generateGetArgumentsInput;
//# sourceMappingURL=directive-wrapper.js.map