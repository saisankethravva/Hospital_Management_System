import { ArgumentNode, DirectiveNode, NameNode, ValueNode } from 'graphql';
import { FeatureFlagProvider } from '@aws-amplify/graphql-transformer-interfaces';
export declare type GetArgumentsOptions = {
    deepMergeArguments?: boolean;
};
export declare class ArgumentWrapper {
    readonly name: NameNode;
    readonly value: ValueNode;
    constructor(argument: ArgumentNode);
    serialize: () => ArgumentNode;
}
export declare class DirectiveWrapper {
    private arguments;
    private name;
    private location?;
    constructor(node: DirectiveNode);
    serialize: () => DirectiveNode;
    getArguments: <T>(defaultValue: Required<T>, options?: GetArgumentsOptions) => Required<T>;
}
export declare const generateGetArgumentsInput: (featureFlags: FeatureFlagProvider) => GetArgumentsOptions;
//# sourceMappingURL=directive-wrapper.d.ts.map